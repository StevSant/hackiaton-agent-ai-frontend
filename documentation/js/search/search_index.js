var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdminAppInfoFacade.html",[0,0.191,1,3.9]],["body/injectables/AdminAppInfoFacade.html",[0,0.238,1,4.869,2,0.846,3,0.111,4,0.049,5,0.118,6,6.435,7,4.035,8,4.183,9,0.037,10,0.277,11,1.243,12,1.454,13,4.741,14,1.971,15,4.997,16,2.414,17,4.189,18,5.666,19,4.75,20,5.666,21,6.164,22,6.164,23,0.691,24,2.394,25,4.943,26,6.171,27,5.947,28,5.947,29,1.062,30,4.183,31,0.776,32,0.007,33,4.183,34,5.947,35,4.183,36,0.805,37,0.502,38,0.141,39,0.445,40,5.947,41,4.183,42,1.454,43,1.429,44,4.869,45,4.183,46,3.062,47,4.183,48,4.295,49,4.183,50,4.55,51,4.183,52,4.55,53,4.869,54,4.869,55,5.666,56,5.666,57,4.183,58,4.26,59,4.183,60,4.183,61,4.183,62,4.183,63,4.183,64,0.641,65,0.714,66,1.648,67,0.515,68,3.02,69,3.425,70,2.532,71,2.153,72,2.631,73,3.284,74,2.871,75,1.352,76,3.02,77,2.871,78,1.935,79,0.714,80,0.677,81,0.054,82,0.387,83,2.579,84,1.425,85,2.147,86,3.726,87,4.183,88,3.726,89,2.53,90,3.172,91,4.741,92,6.171,93,6.714,94,4.183,95,3.425,96,4.183,97,0.486,98,3.726,99,4.04,100,5.947,101,2.532,102,4.183,103,4.183,104,2.286,105,4.183,106,4.183,107,3.726,108,3.563,109,3.726,110,3.2,111,3.425,112,4.183,113,4.55,114,5.947,115,2.248,116,5.947,117,5.947,118,5.947,119,3.062,120,4.183,121,4.183,122,4.183,123,3.726,124,4.183,125,0.004,126,0.004]],["title/components/AdminAppInfoPage.html",[127,1.512,128,2.204]],["body/components/AdminAppInfoPage.html",[1,1.309,3,0.08,4,0.019,5,0.064,7,3.823,9,0.024,10,0.129,11,0.514,12,0.542,14,1.898,16,0.558,17,4.033,18,4.035,19,3.383,20,4.035,21,4.39,22,4.39,23,0.322,24,1.674,26,5.251,29,0.807,31,0.449,32,0.007,36,0.374,37,0.368,38,0.052,39,0.207,42,0.992,43,0.975,64,0.434,65,0.273,67,0.197,70,0.967,81,0.021,82,0.148,84,0.825,85,1.042,97,0.322,115,2.519,123,4.39,125,0.002,126,0.002,127,1.161,128,2.018,129,1.249,130,1.736,131,0.967,132,0.759,133,0.759,134,7.254,135,1.424,136,1.385,137,2.799,138,0.704,139,1.467,140,1.467,141,4.038,142,1.313,143,0.878,144,1.313,145,1.736,146,2.642,147,1.883,148,1.74,149,3.658,150,1.385,151,2.767,152,2.642,153,2.461,154,2.767,155,2.767,156,1.598,157,0.498,158,2.767,159,1.883,160,1.598,161,2.767,162,2.767,163,1.598,164,1.598,165,1.998,166,1.598,167,2.767,168,1.598,169,2.767,170,1.598,171,2.767,172,1.598,173,2.767,174,1.598,175,2.767,176,1.598,177,2.767,178,1.598,179,2.767,180,1.598,181,0.847,182,0.722,183,1.154,184,1.598,185,0.779,186,0.779,187,1.598,188,1.598,189,3.761,190,2.767,191,2.117,192,2.767,193,1.598,194,2.265,195,1.598,196,2.464,197,4.198,198,2.767,199,1.814,200,3.884,201,2.767,202,1.385,203,2.265,204,2.767,205,2.767,206,2.767,207,2.767,208,2.767,209,2.767,210,4.361,211,3.151,212,2.767,213,2.767,214,4.361,215,4.361,216,4.361,217,2.767,218,4.361,219,4.361,220,2.767,221,2.767,222,2.767,223,2.767,224,2.464,225,2.767,226,2.767,227,2.117,228,1.309,229,1.309,230,0.644,231,1.309,232,1.484,233,1.309,234,1.309,235,2.642,236,2.642,237,3.1,238,1.223,239,4.859,240,4.402,241,5.15,242,2.265,243,2.265,244,2.265,245,2.399,246,5.836,247,5.031,248,2.511,249,3.261,250,2.399,251,1.223,252,2.995,253,4.206,254,3.974,255,3.383,256,4.192,257,2.639,258,5.352,259,4.515,260,3.232,261,5.457,262,4.515,263,4.331,264,2.799,265,3.897,266,2.642,267,2.377,268,2.743,269,4.192,270,1.424,271,1.899,272,2.743,273,2.183,274,4.859,275,5.304,276,5.767,277,5.41,278,4.574,279,1.154,280,3.539,281,4.782,282,5.5,283,2.741,284,3.539,285,5.181,286,5.304,287,1.814,288,2.464,289,1.223,290,2.399,291,2.117,292,2.399,293,2.767,294,1.598,295,1.814,296,1.814,297,4.515,298,1.598,299,1.598,300,2.464,301,2.995,302,1.424,303,4.37,304,2.743,305,2.995,306,1.424,307,1.424,308,3.771,309,4.206,310,5.478,311,4.206,312,4.37,313,4.331,314,4.331,315,3.383,316,2.86,317,1.424,318,2.464,319,3.853,320,3.853,321,1.223,322,2.117,323,2.743,324,3.1,325,2.983,326,2.799,327,1.097,328,1.097,329,2.265,330,1.598,331,3.797,332,3.797,333,1.598,334,3.232,335,1.048,336,2.265,337,1.899,338,4.37,339,2.743,340,2.799,341,1.74,342,3.505,343,3.797,344,4.017,345,1.814,346,2.399,347,1.598,348,1.998,349,3.383,350,2.399,351,2.642,352,3.232,353,1.223,354,2.399,355,1.598,356,2.86,357,2.265,358,1.424,359,1.598,360,2.995,361,1.154,362,3.232,363,3.705,364,1.998,365,2.399,366,1.598,367,3.258,368,2.799,369,2.117,370,2.642,371,1.899,372,1.598,373,1.223,374,3.232,375,2.511,376,1.223,377,1.424,378,3.658,379,4.129,380,2.117,381,1.309,382,2.265,383,1.598,384,2.117,385,7.08,386,2.301,387,1.309,388,2.265,389,1.005,390,1.424,391,1.024,392,2.983,393,2.799,394,3.232,395,2.799,396,1.899,397,1.097,398,1.223,399,1.598,400,1.048,401,1.097,402,1.424,403,1.154,404,1.598,405,6.885,406,2.767,407,1.154,408,3.658,409,1.424,410,0.874,411,0.759,412,1.598,413,4.035,414,1.309,415,1.998,416,2.312,417,2.767,418,2.767,419,2.767,420,2.767,421,2.767,422,1.424,423,1.424,424,1.598,425,1.309,426,1.223,427,2.265,428,1.068,429,2.767,430,1.223,431,1.223,432,1.309,433,1.309,434,2.467,435,1.223,436,1.005,437,1.154,438,1.598,439,1.598,440,1.424,441,1.424,442,1.005,443,1.097,444,1.74,445,1.048,446,1.424,447,1.598,448,1.598,449,0.759,450,1.313,451,1.28,452,0.759,453,2.07,454,0.759,455,0.759,456,0.74,457,0.759,458,0.74,459,0.759,460,0.759,461,0.759,462,0.74,463,0.759,464,0.74,465,0.759,466,0.74,467,1.313,468,0.759,469,0.759,470,0.759,471,1.575,472,0.759,473,0.74,474,0.759,475,0.759,476,0.63,477,0.759,478,0.74,479,0.759,480,0.74,481,0.759,482,0.759,483,0.722,484,0.759,485,0.74,486,0.759,487,0.759,488,0.74,489,0.759,490,0.74,491,0.759,492,0.759,493,0.759,494,0.759,495,0.74,496,0.759,497,0.74,498,1.164,499,0.673,500,1.313,501,0.74,502,0.74,503,0.759,504,0.759,505,0.74,506,0.759]],["title/injectables/AdminCompaniesFacade.html",[0,0.191,507,3.9]],["body/injectables/AdminCompaniesFacade.html",[0,0.239,2,0.848,3,0.055,4,0.049,5,0.055,6,6.559,9,0.037,10,0.277,11,0.973,12,1.461,14,2.149,23,0.692,24,2.415,29,1.085,31,0.852,32,0.007,36,0.938,37,0.699,38,0.141,39,0.564,42,1.486,43,1.483,46,3.066,58,2.827,64,0.558,65,0.715,66,3.49,67,0.516,75,1.355,79,0.715,80,0.679,81,0.055,82,0.387,83,1.434,84,0.793,85,2.149,89,1.407,90,1.764,91,2.636,97,0.692,99,2.447,101,2.537,108,2.158,125,0.004,126,0.004,157,1.306,232,2.075,249,1.462,283,2.618,325,2.537,391,1.667,434,3.468,507,4.877,508,4.191,509,2.444,510,6.928,511,3.776,512,4.913,513,5.673,514,5.3,515,5.3,516,2.79,517,4.877,518,5.772,519,5.772,520,4.947,521,5.956,522,4.877,523,5.956,524,0.484,525,4.191,526,4.191,527,4.191,528,4.191,529,5.956,530,4.191,531,5.305,532,3.375,533,4.191,534,3.906,535,4.191,536,4.191,537,4.557,538,4.191,539,5.956,540,4.191,541,4.191,542,4.088,543,4.191,544,4.191,545,4.191,546,4.191,547,4.191,548,5.305,549,4.191,550,4.301,551,4.191,552,2.537,553,3.432,554,2.291,555,2.749,556,2.636,557,4.191,558,2.537,559,4.191,560,5.3,561,4.301,562,3.432,563,2.417,564,4.191,565,1.764,566,4.877,567,1.764,568,3.432,569,3.432,570,3.027,571,3.207,572,4.191,573,2.537,574,3.432,575,5.673,576,6.525,577,4.191,578,3.207,579,2.877,580,3.207,581,3.361,582,3.432,583,2.877,584,2.507,585,1.764,586,3.432,587,3.733,588,0.567,589,3.432]],["title/components/AdminCompaniesPage.html",[127,1.512,456,2.204]],["body/components/AdminCompaniesPage.html",[3,0.029,4,0.014,5,0.016,7,3.428,9,0.011,10,0.102,11,0.649,12,0.685,14,1.688,15,2.151,16,0.429,17,2.518,23,0.255,24,1.906,29,0.878,31,0.551,32,0.007,36,0.403,37,0.569,38,0.068,39,0.223,42,1.092,43,1.073,48,1.587,52,1.681,64,0.431,65,0.21,66,1.174,67,0.152,68,0.888,70,0.745,81,0.016,82,0.114,83,0.421,84,1.07,85,1.316,89,0.413,97,0.537,115,2.239,125,0.001,126,0.001,127,0.945,128,0.569,129,0.992,130,0.584,131,0.745,132,0.584,133,0.584,138,0.542,139,1.165,140,1.165,141,3.805,142,1.043,143,0.698,144,1.043,145,1.414,146,2.151,147,1.533,148,1.382,150,1.1,152,2.615,153,2.044,157,0.685,165,1.587,181,0.652,182,0.555,183,0.888,185,0.599,186,0.599,189,2.044,197,4.013,199,1.441,200,1.958,202,1.813,228,1.007,229,1.007,230,0.495,231,1.007,232,1.806,233,1.007,234,1.007,235,2.615,236,3.621,237,1.382,238,0.941,239,4.995,240,3.171,241,5.169,242,1.8,243,1.8,244,1.8,245,3.029,246,5.971,247,5.421,249,3.112,250,2.729,252,3.407,253,2.729,254,2.856,255,4.508,256,4.791,257,2.518,258,5.465,259,4.788,260,3.513,261,3.407,262,3.886,263,3.727,267,1.9,268,2.278,269,4.131,270,1.096,271,2.044,272,1.901,273,2.682,274,5.516,275,5.417,276,5.719,277,5.163,278,4.628,279,0.888,280,5.258,281,4.892,282,5.74,283,3.161,284,3.288,285,5.381,286,4.788,287,1.441,288,1.958,289,0.941,290,2.375,291,1.681,292,1.441,295,1.441,296,1.441,297,4.181,300,1.096,301,1.8,302,1.096,303,3.513,304,2.906,305,2.439,306,1.096,307,1.096,308,3.183,309,4.788,310,5.707,311,4.62,312,4.788,313,3.877,314,3.877,315,1.509,316,1.441,317,1.096,318,1.958,319,4.593,320,4.516,321,0.941,322,1.681,323,3.154,324,2.617,325,3.73,326,0.941,327,1.509,328,1.509,331,3.029,332,3.029,334,2.375,335,2.375,336,1.8,337,1.509,338,3.513,339,4.241,340,3.183,341,2.617,342,3.425,343,3.711,344,3.711,345,1.441,346,0.807,350,0.807,352,3.711,354,1.953,356,2.375,360,2.966,361,1.587,362,1.441,363,3.171,364,0.888,365,1.441,367,3.226,368,1.681,369,2.771,371,0.845,373,1.681,374,3.288,375,2.044,376,0.941,377,1.096,382,1.007,388,1.8,390,3.706,391,1.014,394,3.029,395,4.099,396,3.442,397,1.509,398,0.941,400,2.375,414,2.966,415,3.336,423,1.096,425,1.007,426,0.941,431,0.941,433,1.007,434,1.491,436,2.906,442,0.774,443,0.845,444,1.382,445,0.807,449,0.584,450,1.043,451,1.017,452,0.584,453,1.719,454,0.584,455,0.584,456,1.676,457,0.584,458,0.569,459,0.584,460,0.584,461,0.584,462,0.569,463,0.584,464,0.569,465,0.584,466,0.569,467,1.043,468,0.584,469,0.584,470,0.584,471,1.282,472,0.584,473,0.569,474,0.584,475,0.584,476,0.485,477,0.584,478,0.569,479,0.584,480,0.569,481,0.584,482,0.584,483,0.555,484,0.584,485,0.569,486,0.584,487,0.584,488,0.569,489,0.584,490,0.569,491,0.584,492,0.584,493,0.584,494,0.584,495,0.569,496,0.584,497,0.569,498,0.925,499,2.904,500,1.043,501,0.569,502,0.569,503,0.584,504,0.584,505,0.569,506,0.584,507,1.007,509,1.363,511,3.375,512,4.562,514,4.329,515,2.279,516,2.481,517,2.966,518,2.771,519,2.771,520,2.375,522,1.8,524,0.27,531,1.958,532,2.027,534,0.807,556,0.774,563,0.429,576,1.007,590,1.23,591,2.653,592,2.979,593,2.198,594,4.161,595,4.161,596,2.979,597,2.198,598,2.198,599,1.23,600,2.198,601,1.23,602,0.774,603,1.23,604,1.23,605,1.23,606,1.23,607,2.198,608,1.23,609,1.23,610,1.23,611,2.198,612,1.23,613,1.23,614,3.183,615,2.979,616,2.966,617,3.622,618,2.198,619,2.198,620,1.23,621,1.23,622,2.198,623,1.23,624,1.958,625,1.23,626,1.681,627,1.23,628,1.958,629,1.23,630,2.771,631,0.752,632,2.198,633,2.198,634,2.198,635,1.958,636,2.198,637,1.23,638,1.23,639,2.198,640,1.23,641,2.198,642,1.23,643,1.958,644,1.23,645,0.633,646,0.807,647,1.096,648,1.007,649,1.681,650,1.096,651,1.096,652,1.23,653,1.096,654,1.23,655,1.587,656,1.23,657,1.23,658,1.23,659,1.23,660,1.23,661,0.584,662,1.23,663,1.23,664,0.616,665,1.007,666,1.23,667,1.23,668,1.23,669,1.958,670,1.958,671,1.283,672,1.8,673,4.619,674,2.198,675,2.198,676,2.198,677,1.283,678,2.198,679,2.198,680,3.171,681,2.486,682,1.8,683,3.226,684,1.958,685,1.958,686,1.958,687,2.198,688,2.198,689,3.226,690,3.622,691,2.966,692,2.198,693,3.622,694,2.198,695,2.198,696,1.958,697,1.958,698,2.279,699,1.958,700,1.681,701,0.845,702,1.8,703,1.283,704,2.966,705,1.23,706,1.23,707,1.096,708,3.226,709,1.953,710,0.941,711,1.23,712,1.958,713,1.958,714,1.958,715,1.23,716,1.23,717,2.198,718,1.23,719,7.179,720,2.151,721,1.007,722,2.198,723,1.958,724,1.23,725,0.941,726,1.958,727,1.23,728,2.198,729,1.23,730,3.226,731,1.23,732,1.579,733,1.096,734,1.096,735,1.23,736,2.198,737,1.23,738,1.23,739,1.23,740,3.226,741,1.05,742,3.622,743,1.23,744,1.8,745,2.439,746,1.007,747,1.096,748,1.958,749,1.23,750,1.509,751,2.198,752,2.198,753,1.007,754,1.441,755,1.007,756,3.782,757,2.653,758,1.23,759,1.23,760,1.958,761,0.718]],["title/interfaces/AdminCompanyDashboardDTO.html",[762,0.139,763,3.124]],["body/interfaces/AdminCompanyDashboardDTO.html",[3,0.062,4,0.055,5,0.062,9,0.042,10,0.303,14,1.354,32,0.007,37,0.672,38,0.182,39,0.74,81,0.104,82,0.439,125,0.004,126,0.004,512,4.497,524,0.582,532,4.065,588,1.166,602,2.99,631,1.626,732,4.224,762,0.216,763,4.264,764,0.884,765,2.775,766,3.636,767,4.822,768,4.822,769,6.095,770,6.095,771,4.652,772,6.095,773,4.102,774,4.822,775,4.652,776,6.095,777,6.095,778,5.469,779,2.576,780,2.316,781,3.626,782,2.92,783,3.432,784,3.432,785,2.519,786,3.117,787,3.636,788,3.636,789,3.636,790,3.262,791,3.636,792,3.262,793,1.626,794,2.046,795,2.99,796,3.636,797,3.432,798,3.636,799,3.636,800,3.117,801,3.636,802,3.636,803,3.636,804,3.636,805,3.636,806,3.636,807,3.636,808,3.432,809,3.636,810,2.699,811,3.636,812,3.636,813,3.636,814,3.636,815,3.636,816,3.636,817,3.636,818,3.636,819,3.636,820,3.636,821,3.636,822,3.636,823,3.432,824,2.99,825,3.636,826,5.669,827,3.262,828,3.432,829,1.168,830,3.432]],["title/components/AdminCompanyPage.html",[127,1.512,458,2.204]],["body/components/AdminCompanyPage.html",[3,0.017,4,0.015,5,0.017,7,3.459,9,0.011,10,0.106,11,1.082,12,1.209,14,0.648,16,0.446,23,0.264,24,0.334,29,0.814,31,0.383,32,0.007,37,0.192,38,0.07,39,0.279,42,0.978,43,0.961,46,1.171,64,0.44,65,0.218,66,0.504,67,0.158,81,0.017,82,0.118,83,0.779,84,1.186,85,0.648,89,0.764,90,1.992,97,0.433,108,0.658,110,1.741,115,2.45,119,1.171,125,0.002,126,0.002,127,0.975,128,0.592,129,1.027,130,2.596,131,0.774,132,0.607,133,0.607,138,0.564,139,1.206,140,1.206,141,3.842,142,1.08,143,1.183,144,1.08,145,1.458,147,1.582,148,1.431,150,1.139,153,2.103,157,1.161,181,0.678,182,0.577,183,0.924,185,0.623,186,0.623,197,3.808,202,2.369,211,1.328,228,1.047,229,1.047,230,0.916,231,1.047,232,0.845,233,1.047,234,1.047,235,1.643,236,1.643,237,1.431,238,0.978,239,4.251,240,2.558,241,4.814,242,1.863,243,1.863,245,2.444,246,5.811,247,4.954,249,2.824,250,3.103,252,1.047,253,0.839,254,0.878,255,4.143,256,3.441,257,1.86,258,5.412,259,4.113,260,2.444,261,1.047,262,3.363,263,2.344,267,1.251,268,1.431,269,1.933,272,1.533,273,3.021,274,3.785,275,3.103,276,5.308,277,4.251,278,3.755,279,0.924,280,4.684,281,3.311,282,4.376,283,2.068,284,0.839,285,3.785,286,4.251,290,1.492,291,0.978,292,1.492,295,1.492,296,1.492,297,2.444,303,2.801,304,0.804,305,2.516,308,0.978,309,2.801,310,5.333,311,3.958,312,3.785,313,1.933,314,1.933,316,1.492,319,3.63,320,3.225,323,3.797,324,1.431,325,1.377,327,2.558,328,1.562,331,1.492,332,2.015,334,2.444,335,1.492,338,3.103,339,3.945,340,2.351,341,1.933,342,2.864,343,3.103,344,3.103,345,1.492,346,0.839,349,1.562,350,0.839,352,0.839,354,0.839,356,0.839,357,1.047,360,1.863,361,0.924,363,2.109,364,2.691,365,1.492,368,0.978,369,0.978,370,2.219,371,1.562,373,0.978,374,2.444,379,5.465,380,3.923,384,3.923,386,0.804,387,1.047,391,1.324,393,0.978,394,3.588,395,0.978,396,0.878,397,2.109,398,0.978,400,1.492,401,0.878,407,0.924,414,1.047,415,2.691,427,3.051,431,0.978,432,1.863,434,2.138,436,1.431,441,2.737,442,1.431,443,0.878,444,1.431,445,1.492,446,1.139,449,1.08,450,1.08,451,1.053,452,0.607,453,1.768,454,0.607,455,0.607,456,0.592,457,0.607,458,1.724,459,0.607,460,0.607,461,0.607,462,0.592,463,0.607,464,0.592,465,0.607,466,0.592,467,1.08,468,0.607,469,0.607,470,0.607,471,1.323,472,0.607,473,0.592,474,0.607,475,0.607,476,0.504,477,0.607,478,0.592,479,0.607,480,0.592,481,0.607,482,0.607,483,0.577,484,0.607,485,0.592,486,0.607,487,0.607,488,0.592,489,0.607,490,0.592,491,0.607,492,0.607,493,0.607,494,0.607,495,0.592,496,0.607,497,0.592,498,0.957,499,0.538,500,1.08,501,0.592,502,0.592,503,0.607,504,0.607,505,0.592,506,0.607,524,0.075,563,2.442,581,0.722,583,3.248,591,2.737,602,3.225,614,2.351,631,0.779,645,1.171,649,0.978,655,0.924,669,2.026,671,1.794,680,4.698,681,5.075,684,2.026,685,2.026,686,2.026,699,2.026,701,0.878,704,3.051,712,1.139,720,0.924,721,2.516,723,1.139,732,3.324,740,1.139,741,0.891,744,4.479,746,2.516,747,2.737,750,0.878,755,3.051,757,1.139,760,1.139,761,1.328,771,0.747,775,1.328,780,1.006,797,1.643,831,1.279,832,3.073,833,2.275,834,4.215,835,4.567,836,3.804,837,3.073,838,4.271,839,3.073,840,3.073,841,2.109,842,2.344,843,5.128,844,3.726,845,3.726,846,1.279,847,1.279,848,1.279,849,1.279,850,1.279,851,2.275,852,1.279,853,2.275,854,1.279,855,2.275,856,1.279,857,1.279,858,4.942,859,3.073,860,2.275,861,1.279,862,2.015,863,0.804,864,2.275,865,1.741,866,1.265,867,1.279,868,3.073,869,2.275,870,2.275,871,2.026,872,2.275,873,2.275,874,3.073,875,1.279,876,2.275,877,1.279,878,1.431,879,1.279,880,2.275,881,1.279,882,1.279,883,0.878,884,1.279,885,1.279,886,1.047,887,1.279,888,1.279,889,1.279,890,1.279,891,1.279,892,1.279,893,1.279,894,1.279,895,1.279,896,1.186,897,1.279,898,2.026,899,1.279,900,1.643,901,1.279,902,1.279,903,1.279,904,2.275,905,1.279,906,1.139,907,1.279,908,1.279,909,1.279,910,1.279,911,1.279,912,1.279,913,1.139,914,1.279,915,1.279,916,1.279,917,1.279,918,2.275,919,2.275,920,2.275,921,3.726,922,3.726,923,3.726,924,2.275,925,3.051,926,2.275,927,2.275,928,2.275,929,2.275,930,2.275,931,1.863,932,2.275,933,2.275,934,2.275,935,2.275,936,2.275,937,2.275,938,2.275,939,2.275,940,3.051,941,2.275,942,4.732,943,3.726,944,2.275,945,2.275,946,2.275,947,2.275,948,2.275,949,2.275,950,3.319,951,2.275,952,2.275,953,2.275,954,2.275,955,2.275,956,3.726,957,2.275,958,3.726,959,2.275,960,3.726,961,2.275,962,2.275,963,3.726,964,2.275,965,2.275,966,3.726,967,2.275,968,2.275,969,3.726,970,2.275,971,3.726,972,2.275,973,2.275,974,3.726,975,2.275,976,2.275,977,5.308,978,2.275,979,1.279,980,3.63,981,2.275,982,2.275,983,2.275,984,3.726,985,2.275,986,2.275,987,2.275,988,3.726,989,3.319,990,3.726,991,3.319,992,2.275,993,2.275,994,2.026,995,2.275,996,2.275,997,2.275,998,3.417,999,2.275,1000,2.275,1001,2.026,1002,2.275,1003,2.275,1004,2.275,1005,2.275,1006,2.275,1007,2.275,1008,2.275,1009,2.275,1010,2.275,1011,2.275,1012,2.275,1013,2.275,1014,2.275,1015,3.248,1016,2.275,1017,2.851,1018,2.275,1019,2.026,1020,2.275,1021,0.839,1022,1.047,1023,2.026,1024,1.139,1025,5.471,1026,1.139,1027,2.275,1028,1.815,1029,1.139,1030,2.275,1031,1.047,1032,5.128,1033,3.073,1034,5.128,1035,2.275,1036,2.109,1037,2.275,1038,1.139,1039,1.047,1040,1.139,1041,1.279,1042,2.275,1043,3.62,1044,3.951,1045,1.139,1046,1.139,1047,1.139,1048,1.279,1049,2.275,1050,2.026,1051,1.279,1052,1.279,1053,1.279,1054,1.279,1055,1.047,1056,1.279,1057,0.978,1058,0.978,1059,1.047,1060,2.275,1061,1.279,1062,1.279,1063,1.047,1064,1.279,1065,1.279,1066,2.275,1067,0.747,1068,1.047,1069,2.275,1070,1.279,1071,1.279,1072,1.279,1073,1.139,1074,1.279,1075,1.279,1076,1.279,1077,1.279]],["title/components/AdminFilesPage.html",[127,1.512,462,2.204]],["body/components/AdminFilesPage.html",[3,0.036,4,0.032,5,0.036,7,3.946,9,0.024,10,0.203,11,1.109,12,1.049,16,2.585,23,0.507,24,2.273,29,1.002,31,0.762,32,0.007,36,0.59,37,0.517,38,0.101,39,0.326,42,1.279,43,1.257,64,0.596,65,0.472,66,2.919,67,0.341,70,1.673,73,1.312,75,0.894,81,0.036,82,0.256,84,1.529,85,2.25,92,3.569,97,0.823,101,3.706,115,3.117,125,0.003,126,0.003,127,1.712,128,1.279,129,1.968,130,2.068,132,1.312,133,1.312,138,1.219,139,2.31,140,2.31,141,4.42,142,2.068,143,1.383,144,2.068,145,2.56,147,2.777,150,2.182,153,3.456,157,0.862,181,1.466,182,1.248,183,1.997,185,1.347,186,1.347,197,4.048,202,2.182,249,2.469,281,1.673,283,2.518,368,2.115,410,1.511,449,1.312,450,2.068,451,2.017,452,1.312,453,2.906,454,1.312,455,1.312,456,1.279,457,1.312,458,1.279,459,1.312,460,1.312,461,1.312,462,2.833,463,1.312,464,1.279,465,1.312,466,1.279,467,2.068,468,1.312,469,1.312,470,1.312,471,2.323,472,1.312,473,1.279,474,1.312,475,1.312,476,1.718,477,1.312,478,1.279,479,1.312,480,1.279,481,1.312,482,1.312,483,1.248,484,1.312,485,1.279,486,1.312,487,1.312,488,1.279,489,1.312,490,1.279,491,1.312,492,1.312,493,1.312,494,1.312,495,1.279,496,1.312,497,1.279,498,1.834,499,1.164,500,2.068,501,1.279,502,1.279,503,1.312,504,1.312,505,1.279,506,1.312,509,1.807,516,2.983,524,0.473,537,3.334,550,4.421,561,4.421,563,2.324,569,5.013,570,4.421,578,2.115,579,1.898,583,2.992,630,4.684,631,2.095,661,2.906,670,3.882,671,3.575,672,3.569,681,2.992,683,5.454,696,3.882,697,3.882,780,1.271,829,0.783,931,3.569,1015,2.992,1028,2.983,1078,2.765,1079,4.805,1080,4.358,1081,4.417,1082,3.575,1083,3.456,1084,3.706,1085,3.703,1086,6.123,1087,4.358,1088,3.851,1089,3.882,1090,2.765,1091,2.765,1092,2.765,1093,2.765,1094,4.358,1095,2.765,1096,3.882,1097,2.765,1098,3.882,1099,2.765,1100,3.246,1101,4.358,1102,2.765,1103,4.358,1104,2.765,1105,2.765,1106,2.765,1107,2.765,1108,2.765,1109,2.765,1110,2.765,1111,3.882,1112,2.765,1113,2.264,1114,2.765,1115,3.334,1116,2.463,1117,2.765,1118,3.569,1119,1.811,1120,3.569,1121,2.765,1122,2.742,1123,2.765,1124,2.264,1125,2.765,1126,6.123,1127,2.463,1128,2.115,1129,2.765,1130,6.123,1131,5.454,1132,5.454,1133,6.123,1134,7.676,1135,6.123,1136,5.351,1137,6.123,1138,6.123,1139,2.765,1140,5.395,1141,2.765,1142,2.765,1143,2.765,1144,2.463,1145,2.765,1146,2.948,1147,1.423,1148,2.765,1149,2.765,1150,2.463,1151,2.463,1152,2.264,1153,3.569,1154,2.765,1155,4.417,1156,3.569,1157,4.358,1158,3.569,1159,4.421,1160,6.838,1161,4.358,1162,3.334,1163,3.334,1164,6.123,1165,4.358,1166,3.882,1167,4.358,1168,4.358,1169,4.358,1170,4.358,1171,4.358,1172,4.358,1173,4.358,1174,2.765,1175,5.454,1176,4.358,1177,5.454,1178,3.569,1179,3.569,1180,6.123,1181,3.569,1182,3.147,1183,4.358,1184,3.569,1185,4.358,1186,3.882,1187,3.882,1188,4.358,1189,3.882,1190,4.358,1191,2.765]],["title/injectables/AdminListMessagesUseCase.html",[0,0.191,1192,3.9]],["body/injectables/AdminListMessagesUseCase.html",[0,0.318,2,1.305,3,0.084,4,0.075,5,0.084,9,0.057,10,0.369,11,1.205,12,1.273,23,0.921,29,0.903,31,0.664,32,0.007,36,0.873,37,0.544,38,0.172,39,0.482,42,1.045,43,1.026,64,0.721,65,1.1,67,0.795,75,2.085,78,2.984,79,1.1,80,1.045,81,0.084,82,0.596,97,0.75,125,0.005,126,0.005,232,1.774,509,1.904,524,0.502,588,1.073,779,2.564,829,1.424,1192,6.492,1193,3.383,1194,7.647,1195,7.647,1196,6.45,1197,4.845,1198,3.312,1199,5.281,1200,3.065,1201,6.45,1202,3.125,1203,2.388,1204,7.062,1205,6.45,1206,4.057,1207,4.057,1208,2.341,1209,2.542,1210,4.934,1211,6.45]],["title/injectables/AdminListSessionsUseCase.html",[0,0.191,1212,3.9]],["body/injectables/AdminListSessionsUseCase.html",[0,0.317,2,1.303,3,0.084,4,0.075,5,0.084,9,0.057,10,0.369,11,1.205,12,1.272,23,0.921,29,0.903,31,0.663,32,0.007,36,0.872,37,0.543,38,0.172,39,0.481,42,1.043,43,1.025,64,0.72,65,1.099,67,0.793,75,2.082,78,2.98,79,1.099,80,1.043,81,0.084,82,0.595,97,0.748,125,0.005,126,0.005,232,1.771,272,2.65,509,1.901,511,3.223,524,0.376,565,2.71,567,2.71,584,2.71,585,2.71,588,1.072,779,2.561,829,1.423,1193,3.381,1194,7.641,1195,7.641,1197,4.842,1198,3.056,1200,2.204,1203,2.385,1204,7.055,1206,4.051,1208,2.337,1209,2.538,1210,4.927,1212,6.485,1213,5.736,1214,6.06,1215,6.439,1216,6.439,1217,4.051,1218,2.907,1219,6.439]],["title/interfaces/AdminMessageItem.html",[762,0.139,1207,2.996]],["body/interfaces/AdminMessageItem.html",[3,0.083,4,0.074,5,0.083,9,0.056,10,0.366,32,0.007,38,0.175,64,0.511,81,0.111,125,0.005,126,0.005,232,2.159,267,2.99,272,3.231,509,2.317,511,3.178,524,0.581,565,2.672,567,2.672,584,2.672,585,2.672,588,1.205,741,2.582,762,0.248,764,1.18,765,3.707,829,1.411,1119,2.862,1200,2.173,1202,2.502,1206,3.993,1207,4.939,1208,2.304,1209,2.502,1217,3.993,1218,3.545,1220,5.198,1221,2.775,1222,5.39,1223,3.169,1224,5.851,1225,1.908,1226,2.556,1227,4.358,1228,4.584]],["title/injectables/AdminMessagesFacade.html",[0,0.191,1115,3.644]],["body/injectables/AdminMessagesFacade.html",[0,0.18,2,0.581,3,0.037,4,0.033,5,0.037,6,6.501,9,0.025,10,0.209,11,1.189,12,1.455,14,2.048,23,0.522,24,2.414,29,1.076,31,0.857,32,0.007,36,0.973,37,0.607,38,0.141,39,0.538,42,1.457,43,1.441,46,3.702,58,2.13,64,0.503,65,0.49,66,2.961,67,0.354,75,0.928,78,1.328,79,0.49,80,0.465,81,0.037,82,0.265,83,2.139,84,1.601,85,2.277,89,2.098,90,2.326,91,3.477,97,0.968,99,2.621,101,3.783,108,2.846,125,0.003,126,0.003,157,1.399,232,2.138,249,2.181,272,2.275,391,1.749,434,2.767,476,2.178,509,2.359,511,3.395,513,3.675,514,4.229,515,4.229,516,2.226,524,0.508,534,2.944,537,3.434,542,4.29,550,4.514,554,1.569,555,1.883,558,3.345,560,4.782,561,3.991,562,3.675,563,2.852,565,1.889,566,4.526,567,1.889,568,3.675,570,3.242,571,4.229,573,3.345,574,2.351,575,3.675,579,3.794,580,3.434,581,3.528,582,2.351,583,1.971,584,1.889,585,1.208,586,2.351,588,0.748,589,2.351,616,2.351,631,2.139,661,2.623,680,4.29,756,2.351,780,2.022,829,0.806,1081,3.675,1100,3.812,1115,3.434,1119,1.507,1120,2.351,1122,2.824,1124,4.526,1127,2.557,1128,2.196,1131,2.557,1132,3.998,1153,5.888,1155,4.526,1156,3.675,1192,2.351,1202,1.131,1207,1.806,1212,2.351,1217,1.806,1218,2.495,1225,0.863,1229,2.871,1230,5.527,1231,4.923,1232,5.527,1233,5.527,1234,4.923,1235,4.526,1236,3.96,1237,5.527,1238,5.527,1239,3.998,1240,6.25,1241,5.527,1242,6.25,1243,5.567,1244,2.944,1245,5.567,1246,5.527,1247,4.489,1248,4.489,1249,2.871,1250,4.489,1251,2.871,1252,2.871,1253,2.871,1254,2.871,1255,2.871,1256,3.998,1257,2.871,1258,2.871,1259,2.871,1260,2.871,1261,4.489,1262,2.871,1263,4.489,1264,2.871,1265,2.871,1266,2.871,1267,4.489,1268,2.871,1269,4.489,1270,2.871,1271,2.871,1272,2.871,1273,3.998,1274,2.871,1275,2.871,1276,2.871,1277,2.871,1278,2.871,1279,2.871,1280,2.871,1281,2.871,1282,4.489,1283,2.871,1284,2.871,1285,3.528,1286,2.871,1287,3.242,1288,2.871,1289,1.738,1290,1.478,1291,1.883,1292,1.806,1293,1.437,1294,2.871,1295,2.871,1296,4.489,1297,2.871,1298,2.871,1299,4.489,1300,2.871,1301,2.557,1302,2.871,1303,2.871,1304,2.557,1305,2.871,1306,2.871,1307,2.871,1308,3.998,1309,2.871,1310,2.871,1311,2.871,1312,4.489,1313,4.489,1314,2.871,1315,4.489,1316,2.196,1317,6.25,1318,2.871,1319,1.971,1320,2.871,1321,2.871,1322,2.557,1323,4.489,1324,2.871,1325,2.871,1326,2.557,1327,2.871,1328,2.871,1329,2.557]],["title/components/AdminMessagesPage.html",[127,1.512,464,2.204]],["body/components/AdminMessagesPage.html",[3,0.026,4,0.023,5,0.026,7,3.777,9,0.018,10,0.157,11,1.199,12,0.906,14,1.239,16,1.178,23,0.392,24,2.188,29,1.046,31,0.805,32,0.007,36,0.828,37,0.574,38,0.155,39,0.612,42,1.327,43,1.304,64,0.588,65,0.345,67,0.249,81,0.026,82,0.187,84,1.672,85,1.742,90,1.421,97,0.909,115,2.759,125,0.002,126,0.002,127,1.381,128,0.934,129,1.524,130,0.958,132,0.958,133,0.958,138,0.89,139,1.79,140,1.79,141,4.218,142,1.602,143,1.072,144,1.602,145,2.065,147,2.24,150,1.69,152,3.671,153,2.869,157,1.762,165,2.438,181,1.071,182,0.912,183,1.458,185,1.645,186,0.984,197,4.195,199,2.214,202,2.545,211,1.971,227,2.583,232,1.196,249,1.774,267,2.45,281,1.222,295,1.324,329,6.138,428,1.962,434,2.831,449,0.958,450,1.602,451,1.562,452,0.958,453,2.413,454,0.958,455,0.958,456,0.934,457,0.958,458,0.934,459,0.958,460,0.958,461,0.958,462,0.934,463,0.958,464,2.352,465,0.958,466,0.934,467,1.602,468,0.958,469,0.958,470,0.958,471,2.435,472,0.958,473,0.934,474,0.958,475,0.958,476,2.787,477,0.958,478,0.934,479,0.958,480,0.934,481,0.958,482,0.958,483,0.912,484,0.958,485,0.934,486,0.958,487,0.958,488,0.934,489,0.958,490,0.934,491,0.958,492,0.958,493,0.958,494,0.958,495,0.934,496,0.958,497,2.352,498,1.831,499,1.421,500,1.602,501,2.352,502,0.934,503,0.958,504,0.958,505,0.934,506,0.958,509,1.284,516,2.74,524,0.507,563,1.774,578,2.583,579,1.386,581,1.906,614,3.328,624,3.007,626,2.583,628,3.007,630,1.545,631,1.489,643,3.007,647,1.799,648,1.654,650,1.799,651,1.799,653,1.799,671,1.971,672,2.764,680,2.317,681,4.197,682,2.764,708,1.799,741,2.116,756,1.654,778,1.386,779,1.977,780,1.666,785,2.695,810,0.618,829,0.607,858,4.163,862,4.257,863,2.737,865,4.678,866,3.085,883,1.386,940,2.764,1028,1.645,1081,3.562,1089,3.007,1098,3.007,1100,2.695,1111,3.007,1115,1.545,1116,1.799,1118,1.654,1119,1.461,1120,1.654,1122,2.124,1124,2.764,1128,1.545,1150,1.799,1151,1.799,1153,2.764,1155,3.562,1156,2.764,1159,2.438,1163,2.583,1181,2.764,1202,0.796,1224,2.317,1234,3.875,1235,5.79,1236,3.57,1239,3.007,1243,4.529,1244,2.214,1245,4.529,1256,3.007,1285,1.906,1292,1.27,1308,3.007,1316,2.583,1319,1.386,1322,3.007,1326,1.799,1330,2.02,1331,4.35,1332,2.633,1333,3.376,1334,3.875,1335,3.562,1336,3.875,1337,4.35,1338,5.656,1339,5.656,1340,5.084,1341,4.35,1342,4.35,1343,5.656,1344,5.656,1345,3.376,1346,3.376,1347,3.889,1348,3.875,1349,5.084,1350,4.35,1351,3.376,1352,3.376,1353,2.02,1354,2.02,1355,3.376,1356,2.02,1357,3.376,1358,2.02,1359,2.02,1360,2.02,1361,2.02,1362,2.02,1363,2.02,1364,2.02,1365,2.02,1366,2.02,1367,3.376,1368,2.02,1369,2.02,1370,3.007,1371,2.02,1372,2.02,1373,2.02,1374,3.376,1375,2.02,1376,5.038,1377,2.02,1378,2.02,1379,2.02,1380,2.02,1381,3.376,1382,2.02,1383,3.376,1384,2.02,1385,2.02,1386,2.02,1387,3.376,1388,2.02,1389,3.376,1390,2.583,1391,3.376,1392,5.447,1393,3.376,1394,2.02,1395,3.376,1396,2.02,1397,3.376,1398,2.02,1399,3.376,1400,2.02,1401,3.376,1402,2.02,1403,2.02,1404,2.02,1405,2.02,1406,2.764,1407,1.222,1408,1.458,1409,2.02,1410,1.799,1411,2.02,1412,1.799,1413,2.02,1414,3.376,1415,2.02,1416,2.02,1417,2.02,1418,2.02,1419,2.02,1420,2.02,1421,2.02,1422,2.02,1423,1.799,1424,1.386,1425,2.02,1426,2.02,1427,3.007,1428,1.799,1429,2.02,1430,2.583,1431,2.02,1432,2.02,1433,3.875,1434,1.799,1435,2.02,1436,3.562,1437,3.007,1438,2.02,1439,2.02,1440,7.071,1441,2.02,1442,2.02,1443,2.02,1444,2.02,1445,3.376,1446,2.02,1447,2.02,1448,2.02,1449,2.02,1450,3.562,1451,2.02,1452,1.799,1453,5.656,1454,2.764,1455,3.376,1456,3.376,1457,2.317,1458,2.02,1459,2.02,1460,3.376,1461,2.02,1462,2.02,1463,2.02,1464,2.02,1465,1.654,1466,4.35,1467,2.02,1468,2.02,1469,2.02,1470,2.764,1471,3.376,1472,2.02,1473,2.02,1474,2.02,1475,3.376,1476,2.02,1477,2.02,1478,2.02,1479,2.02,1480,2.02,1481,1.654,1482,3.376,1483,3.376,1484,3.007,1485,3.376,1486,3.376,1487,3.007,1488,3.007,1489,3.376,1490,3.376,1491,3.376,1492,3.376,1493,3.376,1494,2.583,1495,1.906,1496,3.376,1497,3.007,1498,3.007,1499,3.376,1500,6.115,1501,3.376,1502,3.376,1503,3.376,1504,3.376,1505,5.084,1506,3.376,1507,3.376,1508,2.02,1509,2.545,1510,3.376,1511,3.376,1512,3.376]],["title/interfaces/AdminMessagesPort.html",[762,0.139,1206,2.996]],["body/interfaces/AdminMessagesPort.html",[3,0.082,4,0.073,5,0.082,9,0.056,23,0.908,29,0.89,31,0.804,32,0.007,36,1.058,37,0.659,38,0.177,39,0.584,64,0.507,81,0.11,125,0.005,126,0.005,232,2.149,267,2.115,272,3.216,509,2.306,511,3.153,524,0.571,565,2.651,567,2.651,584,2.651,585,2.651,588,1.202,741,1.826,762,0.247,764,1.171,765,4.959,779,2.872,829,1.596,1119,2.115,1200,3.039,1202,3.079,1203,2.893,1206,4.915,1207,3.962,1208,2.286,1209,2.482,1217,3.962,1218,3.528,1220,5.158,1221,1.963,1222,3.813,1223,2.241,1224,4.324,1225,1.893,1226,2.536,1227,5.363,1228,6.134,1513,6.398,1514,5.611,1515,6.299,1516,6.299]],["title/injectables/AdminMessagesService.html",[0,0.191,1517,3.44]],["body/injectables/AdminMessagesService.html",[0,0.248,2,0.895,3,0.08,4,0.051,5,0.058,9,0.039,10,0.288,11,1.183,12,1.249,23,0.719,24,2.2,29,0.881,31,0.637,32,0.007,36,0.838,37,0.522,38,0.165,39,0.463,42,1.002,43,0.985,64,0.678,65,0.755,67,0.545,75,1.431,79,0.755,80,0.717,81,0.058,82,0.409,84,1.669,85,1.763,97,0.898,125,0.005,126,0.004,136,2.215,230,2.873,232,2.317,249,2.94,272,1.821,283,2.921,391,2.163,509,2.487,511,2.215,516,3.112,524,0.493,565,1.862,567,1.862,584,1.862,585,1.862,588,1.171,661,2.1,677,3.613,762,0.129,779,2.499,780,2.113,785,2.346,829,1.388,896,3.626,1088,2.784,1200,3.02,1202,2.439,1203,2.291,1206,3.893,1207,2.784,1208,1.606,1209,1.744,1217,2.784,1218,1.998,1227,4.248,1228,5.153,1509,2.215,1513,5.067,1514,3.942,1517,4.469,1518,5.333,1519,3.942,1520,3.073,1521,4.425,1522,4.425,1523,2.492,1524,4.425,1525,2.863,1526,4.425,1527,1.782,1528,1.905,1529,1.905,1530,1.33,1531,1.744,1532,1.782,1533,2.584,1534,2.784,1535,2.902,1536,1.964,1537,3.623,1538,4.361,1539,3.893,1540,3.893,1541,3.493,1542,3.893,1543,3.893,1544,3.493,1545,3.893,1546,5.459,1547,3.385,1548,3.893,1549,2.784,1550,3.893,1551,2.784,1552,3.186,1553,4.248,1554,4.224,1555,4.224,1556,5.912,1557,5.512,1558,5.512,1559,6.884,1560,5.512,1561,3.623]],["title/injectables/AdminRiskWeightsFacade.html",[0,0.191,1562,4.243]],["body/injectables/AdminRiskWeightsFacade.html",[0,0.263,2,0.977,3,0.063,4,0.056,5,0.063,6,6.496,9,0.043,10,0.306,11,1.283,12,1.355,14,2.389,15,5.394,18,6.116,20,6.116,23,0.764,24,2.259,25,5.259,26,6.566,29,1.071,31,0.825,32,0.007,36,0.653,37,0.407,38,0.09,39,0.361,42,1.46,43,1.434,46,3.382,48,4.744,58,3.806,64,0.645,65,0.823,66,1.902,67,0.595,68,3.485,70,2.921,79,0.823,80,0.782,81,0.063,82,0.446,83,2.248,84,1.516,85,1.871,88,4.299,89,2.206,90,2.765,91,4.133,97,0.561,98,4.299,99,3.836,101,2.921,108,2.485,109,4.299,125,0.004,126,0.004,143,1.532,157,2.047,159,2.798,189,2.724,191,3.692,211,2.818,391,1.839,542,4.51,554,3.591,571,3.692,631,1.652,781,2.031,1562,5.852,1563,7.832,1564,4.826,1565,5.394,1566,5.394,1567,4.699,1568,5.758,1569,8.019,1570,6.57,1571,4.826,1572,4.826,1573,6.57,1574,4.826,1575,4.826,1576,4.826,1577,4.826,1578,6.57,1579,4.826,1580,4.826,1581,4.826,1582,6.57,1583,4.826,1584,4.826,1585,6.57,1586,4.826,1587,4.826,1588,3.952,1589,5.38,1590,4.299,1591,3.313,1592,6.57,1593,3.952,1594,4.299,1595,4.826,1596,4.826,1597,4.826,1598,4.826,1599,4.826,1600,4.826,1601,4.699,1602,4.826,1603,4.826,1604,4.826,1605,4.826,1606,4.826,1607,4.826,1608,4.826,1609,4.826,1610,4.826,1611,4.826,1612,4.826]],["title/interfaces/AdminSessionItem.html",[762,0.139,1217,2.996]],["body/interfaces/AdminSessionItem.html",[3,0.084,4,0.075,5,0.084,9,0.057,10,0.37,32,0.007,38,0.172,64,0.52,81,0.112,125,0.005,126,0.005,232,2.183,267,2.169,272,3.785,509,2.342,511,3.234,524,0.582,565,2.719,567,2.719,584,2.719,585,2.719,588,1.213,741,1.873,762,0.25,764,1.201,765,3.772,829,1.426,1119,2.169,1200,2.211,1202,2.546,1206,4.064,1207,4.064,1208,2.345,1209,2.546,1217,4.992,1218,4.152,1220,5.289,1221,2.013,1222,3.91,1223,2.298,1224,4.434,1225,2.692,1226,3.608,1227,4.434,1228,4.665]],["title/components/AdminShellLayout.html",[127,1.512,466,2.204]],["body/components/AdminShellLayout.html",[3,0.037,4,0.033,5,0.037,7,3.959,9,0.025,10,0.207,11,1.261,12,1.298,16,0.991,19,3.056,23,0.517,24,1.433,29,1.057,31,0.869,32,0.007,36,0.913,37,0.632,38,0.126,39,0.535,42,1.345,43,1.322,46,3.199,58,3.398,64,0.656,65,0.485,66,1.119,67,0.35,81,0.037,82,0.263,83,2.127,84,1.038,85,0.809,89,1.843,97,0.784,108,1.462,115,3.275,125,0.003,126,0.003,127,1.742,128,1.314,129,2.01,130,1.348,132,1.348,133,1.348,138,1.252,139,2.36,140,2.36,141,4.435,142,2.113,143,1.413,144,2.113,145,2.605,147,2.826,150,2.228,153,3.507,157,2.482,159,2.898,181,1.506,182,1.282,185,1.384,186,1.384,196,3.965,197,4.424,249,0.991,391,1.246,449,1.348,450,2.113,451,2.06,452,1.348,453,2.949,454,1.348,455,1.348,456,1.314,457,1.348,458,1.314,459,1.348,460,1.348,461,1.348,462,1.314,463,1.348,464,1.314,465,1.348,466,2.875,467,2.113,468,1.348,469,1.348,470,1.348,471,2.364,472,1.348,473,1.314,474,1.348,475,1.348,476,1.119,477,1.348,478,1.314,479,1.348,480,1.314,481,1.348,482,1.348,483,1.282,484,1.348,485,1.314,486,1.348,487,1.348,488,1.314,489,1.348,490,1.314,491,1.348,492,2.949,493,2.605,494,1.348,495,1.314,496,1.348,497,1.314,498,1.874,499,1.195,500,2.113,501,1.314,502,1.314,503,2.113,504,2.605,505,1.314,506,1.348,554,1.553,555,1.863,563,1.915,645,1.462,664,2.748,726,2.53,780,1.464,810,1.362,841,1.95,842,3.909,863,2.8,878,2.8,1136,2.8,1203,2.033,1244,1.863,1292,3.909,1293,1.422,1332,3.323,1334,4.89,1407,1.719,1509,2.228,1613,9.311,1614,9.311,1615,2.841,1616,3.965,1617,3.768,1618,4.495,1619,3.965,1620,3.965,1621,3.965,1622,5.49,1623,4.488,1624,5.49,1625,5.49,1626,5.49,1627,5.49,1628,6.749,1629,3.964,1630,2.805,1631,5.49,1632,5.535,1633,6.214,1634,6.214,1635,4.452,1636,5.49,1637,4.89,1638,3.965,1639,4.452,1640,4.452,1641,3.965,1642,3.215,1643,4.89,1644,4.89,1645,4.452,1646,4.452,1647,2.53,1648,2.841,1649,2.841,1650,2.841,1651,2.841,1652,2.841,1653,2.841,1654,2.841,1655,2.53,1656,2.841,1657,3.645,1658,3.645,1659,2.228,1660,2.841,1661,2.841,1662,3.056,1663,2.599,1664,2.841,1665,4.452,1666,2.841,1667,4.452,1668,2.841,1669,3.645,1670,2.841,1671,3.406,1672,2.841,1673,2.841,1674,2.841,1675,2.841,1676,2.841,1677,2.841,1678,2.841,1679,3.965,1680,2.841,1681,2.599,1682,2.841,1683,2.051,1684,3.965,1685,1.658,1686,2.53,1687,1.787,1688,2.326,1689,2.173,1690,2.53,1691,2.173,1692,2.53,1693,2.841,1694,2.841,1695,4.452,1696,2.841,1697,4.452,1698,2.326,1699,4.452,1700,2.53,1701,2.53,1702,3.965,1703,3.6,1704,2.841,1705,4.452,1706,4.452,1707,2.841,1708,4.2,1709,2.841,1710,2.53,1711,2.53,1712,2.051,1713,2.326,1714,4.495,1715,4.452,1716,2.841,1717,2.841,1718,2.841,1719,2.841,1720,2.841,1721,2.841,1722,2.53,1723,2.326,1724,2.841,1725,4.452,1726,2.326,1727,2.841,1728,2.841,1729,2.841,1730,2.326,1731,2.53,1732,2.841,1733,2.841,1734,2.841,1735,4.452,1736,4.452,1737,4.452,1738,4.452,1739,4.452,1740,4.452,1741,4.452,1742,4.452]],["title/interfaces/AdminStatsDTO.html",[762,0.139,786,3.124]],["body/interfaces/AdminStatsDTO.html",[3,0.074,4,0.066,5,0.074,9,0.05,10,0.342,14,1.627,32,0.007,37,0.482,38,0.152,81,0.111,82,0.528,125,0.005,126,0.005,512,3.224,524,0.581,532,3.579,588,1.16,602,3.593,631,1.955,732,3.028,762,0.236,763,3.746,764,1.062,765,3.335,766,4.37,767,3.457,768,3.457,769,4.37,770,4.37,771,3.335,772,4.37,773,2.941,774,3.457,775,3.335,776,4.37,777,4.37,778,3.921,780,2.259,781,4.008,782,2.251,783,4.125,784,4.125,785,3.028,786,4.817,787,6.557,788,6.557,789,6.557,790,3.921,791,4.37,792,3.921,793,1.955,794,2.459,795,3.593,796,4.37,797,4.125,798,4.37,799,4.37,800,3.746,801,4.37,802,4.37,803,4.37,804,4.37,805,4.37,806,4.37,807,4.37,808,4.125,809,4.37,810,2.824,811,4.37,812,4.37,813,4.37,814,4.37,815,4.37,816,4.37,817,4.37,818,4.37,819,4.37,820,4.37,821,4.37,822,4.37,823,4.125,824,3.593,825,4.37,826,6.212,827,3.921,828,4.125,829,1.32,830,4.125]],["title/injectables/AdminStatsFacade.html",[0,0.191,886,3.9]],["body/injectables/AdminStatsFacade.html",[0,0.277,2,1.056,3,0.068,4,0.061,5,0.068,6,6.436,9,0.046,10,0.322,11,1.091,12,1.458,14,2.214,23,0.805,24,2.311,25,5.428,29,1.058,31,0.713,32,0.007,36,0.937,37,0.584,38,0.13,39,0.518,42,1.486,43,1.46,46,4.723,58,3.928,64,0.626,65,0.89,66,2.057,67,0.643,79,0.89,80,0.845,81,0.068,82,0.482,83,2.37,84,1.309,85,1.972,89,2.325,90,2.914,91,3.283,97,0.805,99,3.047,101,4.191,108,3.565,125,0.005,126,0.005,434,3.89,524,0.454,558,3.158,573,3.158,588,0.937,602,4.356,721,4.273,732,4.388,754,3.422,763,3.422,786,3.422,829,1.487,835,6.922,836,6.922,871,4.648,886,5.67,896,2.999,1021,4.541,1743,5.218,1744,4.703,1745,6.924,1746,6.924,1747,5.218,1748,3.768,1749,6.924,1750,5.218,1751,6.924,1752,5.218,1753,5.218,1754,5.218,1755,5.218,1756,5.218,1757,5.218,1758,5.218,1759,4.648,1760,4.648,1761,4.273,1762,5.218,1763,5.218,1764,3.992,1765,5.218,1766,5.218,1767,6.168,1768,5.218,1769,5.218,1770,5.218,1771,5.218,1772,5.218,1773,5.218]],["title/classes/AdminStatsPort.html",[82,0.44,827,3.269]],["body/classes/AdminStatsPort.html",[3,0.072,4,0.065,5,0.072,9,0.049,14,1.587,23,0.84,29,0.824,31,0.744,32,0.007,36,0.978,37,0.677,38,0.135,39,0.54,81,0.11,82,0.515,125,0.005,126,0.005,512,3.144,524,0.582,532,3.521,588,1.22,602,4.546,631,1.906,732,2.953,762,0.234,763,3.653,765,4.684,766,4.262,767,3.372,768,3.372,769,4.262,770,4.262,771,3.252,772,4.262,773,2.868,774,3.372,775,3.252,776,4.262,777,4.262,778,3.824,780,2.251,781,3.573,782,2.195,783,4.023,784,4.023,785,2.953,786,3.653,787,4.262,788,4.262,789,4.262,790,3.824,791,4.262,792,3.824,793,1.906,794,2.399,795,3.504,796,4.262,797,4.023,798,4.262,799,4.262,800,3.653,801,4.262,802,4.262,803,4.262,804,4.262,805,4.262,806,4.262,807,4.262,808,4.023,809,4.262,810,2.808,811,4.262,812,4.262,813,4.262,814,4.262,815,4.262,816,4.262,817,4.262,818,4.262,819,4.262,820,4.262,821,4.262,822,4.262,823,4.023,824,3.504,825,4.262,826,7.021,827,4.961,828,5.219,829,1.525,830,5.794,1203,2.063,1748,4.023,1774,3.372,1775,6.438,1776,4.962,1777,5.571,1778,5.571]],["title/injectables/AdminStatsService.html",[0,0.191,1761,3.9]],["body/injectables/AdminStatsService.html",[0,0.301,2,1.195,3,0.077,4,0.068,5,0.077,9,0.052,10,0.349,11,1.285,12,1.357,23,0.872,24,2.39,29,0.989,31,0.772,32,0.007,36,1.015,37,0.633,38,0.141,39,0.561,42,1.335,43,1.312,64,0.721,65,1.007,67,0.727,79,1.007,80,0.956,81,0.077,82,0.546,84,1.559,85,2.137,97,0.872,125,0.005,126,0.005,136,2.955,230,3.32,524,0.482,588,1.015,602,3.714,763,3.872,786,3.872,827,5.15,828,5.418,829,1.559,830,5.418,896,2.895,1021,4.92,1200,2.02,1518,5.874,1520,3.551,1523,3.021,1525,3.471,1527,2.377,1528,2.542,1529,3.23,1530,1.774,1531,2.327,1532,2.377,1536,2.381,1552,3.039,1748,5.418,1759,5.259,1760,5.259,1761,6.143,1775,6.683,1776,6.683,1779,5.904,1780,5.904,1781,5.904,1782,5.904,1783,5.904,1784,4.834,1785,4.834,1786,5.904]],["title/interfaces/AdminUserItem.html",[762,0.139,1290,2.452]],["body/interfaces/AdminUserItem.html",[3,0.082,4,0.073,5,0.082,9,0.056,10,0.364,32,0.007,38,0.174,39,0.585,64,0.508,81,0.111,104,3.448,115,2.384,125,0.005,126,0.005,232,1.735,509,1.862,524,0.584,565,2.655,567,2.655,584,2.655,585,2.655,588,1.059,762,0.248,764,1.173,765,3.683,793,2.159,829,1.641,1100,3.344,1119,2.118,1208,2.29,1209,2.486,1221,2.847,1223,3.25,1226,3.578,1289,3.818,1290,4.026,1787,5.166,1788,4.367,1789,4.418,1790,4.414,1791,3.074,1792,2.919,1793,4.137,1794,4.137,1795,3.818,1796,4.137]],["title/interfaces/AdminUserItem-1.html",[391,1.112,762,0.116,1290,2.045]],["body/interfaces/AdminUserItem-1.html",[0,0.264,3,0.086,4,0.056,5,0.063,9,0.043,10,0.307,11,0.926,12,0.977,24,2.194,32,0.007,38,0.157,39,0.493,64,0.676,65,0.827,67,0.597,79,0.827,80,0.785,81,0.097,82,0.448,84,1.706,85,1.878,97,0.934,104,2.65,115,1.833,125,0.005,126,0.004,230,1.953,232,1.813,249,1.692,283,1.833,391,1.357,509,1.945,516,1.953,524,0.574,563,1.692,565,2.041,567,2.041,584,2.041,585,2.041,588,1.137,661,2.302,677,2.831,762,0.218,764,0.902,780,2.089,785,2.571,793,2.563,829,1.51,896,1.871,900,3.502,1085,3.329,1088,3.05,1100,2.571,1119,1.628,1200,2.563,1208,1.76,1209,1.911,1221,2.618,1223,2.99,1226,3.235,1290,3.393,1293,2.427,1424,3.329,1509,2.427,1518,3.18,1520,2.088,1523,1.953,1525,2.244,1527,1.953,1528,2.088,1529,2.838,1530,1.457,1531,1.911,1532,1.953,1533,2.831,1534,3.05,1535,3.18,1536,2.667,1538,3.72,1539,3.05,1540,3.05,1541,2.737,1542,3.05,1543,3.05,1544,2.737,1545,3.05,1548,4.146,1549,3.05,1550,4.146,1551,3.05,1552,2.497,1554,2.65,1555,2.65,1788,4.103,1789,4.113,1790,3.72,1791,2.363,1792,2.244,1793,3.18,1794,3.18,1795,2.935,1796,3.18,1797,3.71,1798,3.18,1799,3.71,1800,2.935,1801,3.71,1802,3.05,1803,5.729,1804,3.71,1805,3.71,1806,3.329,1807,3.329,1808,3.329,1809,5.729,1810,3.71,1811,2.497,1812,2.935,1813,3.71,1814,3.502,1815,3.502,1816,3.502,1817,3.71]],["title/injectables/AdminUsersFacade.html",[0,0.191,1818,4.243]],["body/injectables/AdminUsersFacade.html",[0,0.218,2,0.75,3,0.048,4,0.043,5,0.048,6,6.593,9,0.033,10,0.254,11,1.258,12,1.467,14,2.03,23,0.633,24,2.243,29,1.091,31,0.382,32,0.007,38,0.069,42,1.547,43,1.524,46,2.806,58,2.587,64,0.52,65,0.633,66,3.234,67,0.457,75,1.199,79,0.633,80,0.6,81,0.048,82,0.343,83,1.269,84,0.701,85,2.489,89,1.245,90,1.56,97,0.633,99,2.164,101,2.244,108,1.909,125,0.004,126,0.004,232,1.96,249,1.293,391,2.222,509,2.343,511,3.235,513,5.292,514,4.945,515,4.945,516,2.602,517,5.292,518,4.945,519,4.945,520,4.673,522,5.292,524,0.378,534,3.574,542,3.741,548,4.855,550,3.936,554,2.026,555,2.431,560,5.808,561,5.733,562,3.036,563,1.902,565,1.56,566,4.463,567,1.56,568,3.036,570,2.677,574,3.036,575,4.463,576,6.719,579,4.436,580,2.836,581,3.076,582,3.036,583,2.545,584,2.294,585,1.56,586,3.036,587,3.302,588,0.502,589,3.036,614,5.808,703,3.774,761,3.774,793,1.865,1085,4.436,1100,2.889,1182,2.677,1221,1.155,1273,4.855,1290,1.909,1788,2.522,1789,1.759,1795,3.912,1818,4.855,1819,3.707,1820,4.463,1821,6.463,1822,5.757,1823,4.945,1824,6.463,1825,6.463,1826,6.463,1827,3.707,1828,3.707,1829,3.707,1830,5.45,1831,3.707,1832,3.707,1833,3.707,1834,5.45,1835,3.707,1836,5.45,1837,3.707,1838,3.707,1839,3.707,1840,5.45,1841,3.707,1842,3.707,1843,3.707,1844,3.707,1845,3.707,1846,3.707,1847,3.707,1848,3.707,1849,3.707,1850,3.707,1851,3.707,1852,3.707,1853,5.45,1854,3.707,1855,3.707,1856,3.036,1857,3.036,1858,3.036,1859,3.036,1860,3.707,1861,3.707,1862,3.707,1863,3.707,1864,3.707,1865,3.707,1866,3.036,1867,3.707,1868,3.707,1869,3.707,1870,3.707]],["title/interfaces/AdminUsersPort.html",[762,0.139,1289,2.883]],["body/interfaces/AdminUsersPort.html",[3,0.076,4,0.068,5,0.076,9,0.051,23,0.865,29,1.017,31,0.918,32,0.007,36,1.208,37,0.753,38,0.176,39,0.667,64,0.469,81,0.107,104,4.48,115,2.202,125,0.005,126,0.005,232,1.603,509,1.72,524,0.577,565,2.452,567,2.452,584,2.452,585,2.452,588,1.007,762,0.239,764,1.083,765,5.327,779,2.406,793,2.955,829,1.717,1028,3.625,1100,4.577,1119,1.956,1200,1.994,1203,2.158,1208,2.115,1209,2.296,1221,2.318,1223,2.647,1226,2.346,1289,4.503,1290,3,1787,4.771,1788,3.996,1789,3.89,1790,4.873,1791,2.839,1792,3.443,1793,4.879,1794,4.879,1795,4.961,1796,4.879,1820,6.092,1823,5.692,1871,5.827,1872,5.827,1873,5.827,1874,5.827,1875,5.191,1876,5.827]],["title/injectables/AdminUsersService.html",[0,0.191,1798,3.124]],["body/injectables/AdminUsersService.html",[0,0.246,2,0.885,3,0.08,4,0.051,5,0.057,9,0.039,10,0.286,11,1.179,12,1.244,23,0.713,24,2.463,29,0.982,31,0.833,32,0.007,36,1.096,37,0.683,38,0.161,39,0.605,42,0.994,43,0.977,64,0.652,65,0.746,67,0.539,79,0.746,80,0.708,81,0.092,82,0.404,84,1.664,85,1.748,97,0.893,104,3.875,115,1.653,125,0.005,126,0.004,230,2.855,232,1.688,249,1.526,283,1.653,391,1.224,509,1.811,516,1.761,524,0.563,563,1.526,565,1.84,567,1.84,584,1.84,585,1.84,588,1.096,661,2.075,677,2.553,762,0.207,779,1.984,780,2.031,785,2.318,793,2.873,829,1.628,896,1.687,900,3.157,1028,2.99,1085,3.001,1088,2.75,1100,4.075,1119,1.468,1200,2.631,1203,1.619,1208,1.587,1209,1.723,1221,1.912,1223,2.183,1226,1.761,1290,2.251,1293,2.189,1424,3.001,1509,2.189,1518,5.771,1520,3.053,1523,2.471,1525,2.839,1527,1.761,1528,1.883,1529,2.642,1530,1.314,1531,1.723,1532,1.761,1533,2.553,1534,2.75,1535,2.867,1536,2.57,1538,3.463,1539,2.75,1540,2.75,1541,2.468,1542,2.75,1543,2.75,1544,2.468,1545,2.75,1548,3.86,1549,2.75,1550,3.86,1551,2.75,1552,2.251,1554,2.39,1555,2.39,1788,3.557,1789,3.365,1790,4.339,1791,2.13,1792,2.839,1793,4.024,1794,4.024,1795,4.291,1796,4.024,1797,3.345,1798,4.024,1799,3.345,1800,2.646,1801,3.345,1802,2.75,1803,5.424,1804,3.345,1805,3.345,1806,3.001,1807,3.001,1808,3.001,1809,5.424,1810,3.345,1811,2.251,1812,2.646,1813,3.345,1814,3.157,1815,3.157,1816,3.157,1817,3.345,1820,5.025,1823,4.695,1875,3.895,1877,4.372,1878,4.372,1879,4.372,1880,4.372,1881,4.372,1882,4.372,1883,4.372]],["title/interfaces/AgentModel.html",[762,0.139,1884,3.269]],["body/interfaces/AgentModel.html",[3,0.078,4,0.07,5,0.078,9,0.053,10,0.387,32,0.007,36,0.815,37,0.788,38,0.181,81,0.114,125,0.005,126,0.005,389,5.496,524,0.58,762,0.254,764,1.119,780,2.247,781,2.533,810,2.757,1884,5.212,1885,4.604,1886,3.947,1887,6.685,1888,3.677,1889,6.685,1890,6.685,1891,6.685,1892,3.839,1893,6.824,1894,4.257,1895,4.257,1896,3.289,1897,4.604,1898,4.604,1899,4.604]],["title/interfaces/AggregateInsights.html",[762,0.139,1900,3.269]],["body/interfaces/AggregateInsights.html",[3,0.078,4,0.069,5,0.078,9,0.053,10,0.353,14,1.707,32,0.007,38,0.172,39,0.726,81,0.117,125,0.005,126,0.005,499,2.521,524,0.587,532,2.919,588,1.124,732,3.176,754,3.929,762,0.262,764,1.114,767,3.626,768,3.626,773,4.491,774,3.626,775,4.421,780,1.956,781,2.521,782,3.272,1225,1.8,1900,5.699,1901,4.326,1902,4.326,1903,6.299,1904,6.299,1905,6.299,1906,6.299,1907,5.988,1908,5.198,1909,4.326,1910,4.326,1911,5.198,1912,4.326,1913,4.326,1914,4.326,1915,4.326,1916,4.326,1917,4.112,1918,4.326,1919,4.326,1920,4.326,1921,4.326,1922,5.198,1923,4.326,1924,3.498,1925,4.326,1926,4.326]],["title/injectables/AnalyzeSessionCompaniesUseCase.html",[0,0.191,1927,3.9]],["body/injectables/AnalyzeSessionCompaniesUseCase.html",[0,0.319,2,1.318,3,0.085,4,0.076,5,0.085,9,0.057,10,0.371,11,1.211,12,1.278,23,0.927,29,0.909,31,0.67,32,0.007,36,0.881,37,0.55,38,0.168,39,0.487,42,1.055,43,1.036,64,0.742,65,1.111,67,0.802,78,3.013,79,1.111,80,1.055,81,0.085,82,0.602,97,0.757,125,0.005,126,0.005,498,3.628,524,0.504,794,2.804,1193,3.397,1198,3.077,1199,6.53,1202,3.143,1236,5.033,1530,1.957,1924,3.802,1927,6.53,1928,7.679,1929,5.801,1930,6.512,1931,4.315,1932,7.104,1933,5.801,1934,4.982,1935,3.941,1936,6.512,1937,4.982,1938,4.703,1939,3.802,1940,4.703,1941,6.512]],["title/components/App.html",[7,2.005,127,1.512]],["body/components/App.html",[3,0.104,4,0.048,5,0.054,7,4.14,9,0.037,10,0.277,11,1.336,12,1.389,13,4.351,16,1.458,23,0.691,24,1.806,29,0.991,31,0.612,32,0.007,36,0.566,37,0.636,38,0.13,39,0.517,42,1.289,43,1.267,64,0.7,65,0.713,67,0.515,71,2.151,80,0.962,81,0.054,82,0.386,83,2.034,84,1.425,85,1.19,89,1.995,115,3.287,119,3.561,125,0.004,126,0.004,127,2.195,128,1.933,129,2.683,130,1.983,132,1.983,133,1.983,138,1.842,139,3.15,140,3.15,141,4.622,142,2.82,143,1.886,144,2.82,145,3.283,150,2.975,153,4.252,157,1.302,181,2.215,182,1.886,232,1.149,272,3.276,290,4.536,449,1.983,450,2.82,451,2.75,452,1.983,453,3.575,454,1.983,455,1.983,456,1.933,457,1.983,458,1.933,459,1.983,460,1.983,461,1.983,462,1.933,463,1.983,464,1.933,465,1.983,466,1.933,467,2.82,468,1.983,469,1.983,470,1.983,471,2.978,472,1.983,473,1.933,474,1.983,475,1.983,476,1.647,477,1.983,478,1.933,479,1.983,480,1.933,481,1.983,482,1.983,483,1.886,484,1.983,485,1.933,486,1.983,487,1.983,488,1.933,489,1.983,490,1.933,491,1.983,492,1.983,493,1.983,494,1.983,495,1.933,496,1.983,497,1.933,498,2.501,499,1.758,500,2.82,501,1.933,502,1.933,503,1.983,504,1.983,505,1.933,506,1.983,524,0.404,554,2.284,555,2.74,645,2.151,646,2.74,1147,2.151,1390,5.763,1618,5.663,1620,5.294,1623,4.995,1629,4.995,1671,4.547,1679,5.294,1689,3.197,1690,3.722,1691,3.197,1692,3.722,1713,3.421,1795,2.529,1942,4.178,1943,5.943,1944,5.943,1945,6.916,1946,6.161,1947,5.943,1948,4.178,1949,5.943,1950,4.178,1951,5.943,1952,5.943,1953,4.178,1954,4.178,1955,4.178,1956,5.294,1957,4.178,1958,4.178,1959,5.943,1960,4.178,1961,3.722,1962,3.722,1963,3.421,1964,3.722,1965,2.868,1966,4.178,1967,4.178,1968,4.178,1969,4.178,1970,4.178,1971,4.178,1972,3.421,1973,3.722,1974,4.178,1975,3.722,1976,4.178,1977,4.178,1978,3.722,1979,4.178,1980,3.722,1981,4.178,1982,6.916,1983,4.178,1984,4.178,1985,4.178,1986,4.178,1987,4.178,1988,4.178,1989,4.178,1990,4.178]],["title/interfaces/AppInfo.html",[13,2.996,762,0.139]],["body/interfaces/AppInfo.html",[3,0.092,4,0.082,5,0.092,9,0.063,10,0.391,13,5.282,32,0.006,38,0.173,39,0.628,53,7.571,55,7.571,56,7.571,81,0.092,125,0.006,126,0.006,135,6.319,524,0.58,762,0.207,764,1.319,1221,2.881,1991,7.094]],["title/interfaces/AppInfoPort.html",[74,3.269,762,0.139]],["body/interfaces/AppInfoPort.html",[3,0.109,4,0.082,5,0.092,9,0.063,13,4.463,23,0.976,29,0.957,31,0.864,32,0.007,36,0.96,37,0.599,38,0.157,39,0.53,64,0.571,74,5.764,81,0.092,104,4.889,125,0.006,126,0.006,762,0.207,764,1.319,793,2.428,829,1.661,1992,8.945,1993,7.094,1994,8.237,1995,7.48,1996,7.094,1997,7.48,1998,7.094,1999,6.319]],["title/injectables/AppInfoService.html",[0,0.191,2000,3.644]],["body/injectables/AppInfoService.html",[0,0.3,2,1.193,3,0.113,4,0.068,5,0.077,9,0.052,10,0.349,11,1.157,12,1.286,13,4.715,23,0.871,24,2.389,29,0.988,31,0.771,32,0.007,36,1.014,37,0.633,38,0.162,39,0.56,42,0.955,43,0.938,53,4.827,55,4.827,56,4.827,64,0.748,67,0.726,74,5.145,75,1.906,79,1.006,80,0.955,81,0.077,82,0.545,84,1.417,97,0.871,104,4.504,125,0.005,126,0.005,136,2.951,230,3.318,793,2.565,829,1.558,1520,3.227,1523,3.018,1527,3.492,1528,2.538,1529,3.227,1530,1.771,1531,2.323,1532,2.374,1536,2.379,1816,4.257,1972,4.827,1973,5.251,1978,6.676,1994,7.725,1995,6.676,1997,6.676,2000,5.734,2001,8.953,2002,5.895,2003,3.568,2004,4.827,2005,7.495,2006,5.895,2007,5.895,2008,6.676,2009,5.895,2010,5.251,2011,3.708,2012,7.495,2013,5.251,2014,5.895]],["title/classes/AppTranslateLoader.html",[82,0.44,2015,4.243]],["body/classes/AppTranslateLoader.html",[3,0.068,4,0.06,5,0.068,9,0.046,23,0.803,29,0.592,31,0.535,32,0.007,36,0.704,37,0.439,38,0.097,39,0.389,64,0.418,65,0.887,76,3.754,77,3.568,81,0.09,84,1.672,89,1.745,97,1.028,125,0.005,126,0.005,136,2.602,143,1.65,157,1.62,342,3.146,391,1.455,520,3.409,524,0.404,631,1.779,703,3.035,829,0.934,980,3.27,1036,3.568,1210,3.977,1223,1.85,1291,3.409,1293,2.602,1450,4.256,1495,2.934,1509,3.457,1517,3.754,1527,2.781,1623,3.754,1630,3.118,1662,5.324,1663,4.032,1669,4.256,1671,3.977,1681,3.035,1723,4.256,1774,3.146,1798,3.409,1934,3.977,2000,3.977,2015,6.152,2016,4.256,2017,6.152,2018,6.907,2019,5.198,2020,5.198,2021,6.152,2022,6.152,2023,6.152,2024,6.152,2025,7.362,2026,6.907,2027,5.198,2028,5.198,2029,3.409,2030,4.63,2031,4.63,2032,4.63,2033,4.63,2034,4.256,2035,4.256,2036,3.568,2037,6.152,2038,2.602,2039,4.63,2040,4.63,2041,4.63,2042,4.63,2043,8.472,2044,4.256,2045,6.152,2046,3.977,2047,4.63,2048,4.63,2049,4.63,2050,4.63,2051,4.256,2052,4.63,2053,4.256,2054,4.63,2055,4.63,2056,6.909,2057,4.256,2058,3.409,2059,4.63,2060,4.63,2061,4.63,2062,5.284,2063,4.63,2064,4.63,2065,4.63,2066,4.63,2067,4.63,2068,4.63,2069,3.754,2070,4.256,2071,3.977,2072,4.63,2073,4.63,2074,4.256,2075,4.256,2076,4.63,2077,4.256,2078,8.264,2079,3.568,2080,3.977,2081,3.754,2082,3.977,2083,3.568,2084,3.977,2085,3.754,2086,3.977,2087,3.754,2088,5.655,2089,4.63,2090,4.256,2091,4.63,2092,4.63,2093,3.977,2094,3.977]],["title/interfaces/AudioData.html",[762,0.139,2095,2.603]],["body/interfaces/AudioData.html",[3,0.063,4,0.056,5,0.063,9,0.043,10,0.307,32,0.007,37,0.41,38,0.166,39,0.712,81,0.122,125,0.004,126,0.004,159,1.696,267,3.073,272,2.717,411,3.133,416,2.577,428,1.876,524,0.586,588,1.315,741,2.515,762,0.272,764,0.904,782,1.916,1119,1.632,1218,2.195,1221,2.506,1223,1.73,1225,1.984,1536,2.753,1659,2.433,1888,2.046,1892,1.957,1894,3.217,1895,3.217,2038,2.433,2095,4.396,2096,2.657,2097,2.657,2098,4.539,2099,4.458,2100,4.539,2101,4.458,2102,2.744,2103,3.609,2104,2.91,2105,3.086,2106,3.609,2107,2.91,2108,3.055,2109,3.133,2110,3.609,2111,3.133,2112,3.609,2113,3.609,2114,3.609,2115,3.609,2116,2.577,2117,2.744,2118,2.744,2119,2.744,2120,3.5,2121,2.744,2122,2.503,2123,2.744,2124,3.609,2125,2.503,2126,3.305,2127,3.609,2128,3.5,2129,4.098,2130,2.744,2131,4.098,2132,2.744,2133,4.098,2134,2.503,2135,1.957,2136,2.744,2137,2.744,2138,2.249,2139,3.055,2140,3.055,2141,3.055,2142,2.981,2143,3.055,2144,2.307,2145,2.657,2146,2.433,2147,2.744,2148,2.503]],["title/injectables/AuthGuardService.html",[0,0.191,2149,4.243]],["body/injectables/AuthGuardService.html",[0,0.322,2,1.333,3,0.086,4,0.076,5,0.086,9,0.058,10,0.374,11,1.321,23,0.933,29,0.987,31,0.678,32,0.007,42,1.301,43,1.278,64,0.697,65,1.124,67,0.811,79,1.124,80,1.067,81,0.104,82,0.609,84,1.245,97,1.007,125,0.005,126,0.005,143,2.09,645,3.391,810,2.457,842,5.674,866,2.711,878,5.052,1630,3.912,1681,4.689,1685,3.845,1687,4.143,1714,5.393,1726,5.393,2149,7.153,2150,5.867,2151,7.386,2152,6.586,2153,6.586,2154,6.586,2155,6.144,2156,5.393,2157,5.867,2158,5.867]],["title/interfaces/AuthPort.html",[762,0.139,2159,3.269]],["body/interfaces/AuthPort.html",[3,0.088,4,0.078,5,0.088,9,0.06,23,0.948,29,0.999,31,0.902,32,0.007,36,1.186,37,0.74,38,0.17,39,0.655,64,0.544,81,0.088,125,0.005,126,0.005,524,0.512,762,0.197,764,1.257,793,2.793,829,1.7,1630,3.053,1811,4.201,2062,6.243,2159,5.601,2160,6.762,2161,4.764,2162,7.269,2163,6.762,2164,6.682,2165,5.314,2166,6.762,2167,6.682,2168,5.508,2169,6.762,2170,4.093,2171,3.948,2172,4.093,2173,5.174]],["title/injectables/AuthService.html",[0,0.191,2082,3.644]],["body/injectables/AuthService.html",[0,0.289,2,1.123,3,0.072,4,0.064,5,0.072,9,0.049,10,0.336,11,1.264,12,1.335,23,0.838,24,2.351,29,1.001,31,0.824,32,0.007,36,1.084,37,0.676,38,0.165,39,0.599,42,1.167,43,1.147,64,0.725,65,0.947,67,0.683,75,1.794,79,0.947,80,0.898,81,0.072,82,0.513,84,1.603,97,0.931,125,0.005,126,0.005,136,2.777,230,3.224,524,0.468,793,2.74,829,1.618,1520,3.448,1523,2.902,1525,3.335,1527,2.234,1528,2.389,1529,3.104,1530,1.667,1531,2.186,1532,2.234,1536,2.541,1630,3.254,1785,4.542,1788,2.567,1789,2.633,1791,2.703,1811,3.711,1814,4.006,1815,5.205,2062,5.515,2082,5.515,2159,4.948,2161,4.208,2162,6.421,2164,5.902,2165,4.949,2167,5.902,2168,5.13,2170,3.358,2171,3.239,2172,3.358,2174,5.548,2175,5.548,2176,5.548,2177,5.548,2178,5.548,2179,5.548,2180,4.942,2181,4.006,2182,4.942,2183,5.548,2184,4.942,2185,5.548,2186,4.942,2187,4.542,2188,4.244,2189,5.548,2190,3.821,2191,5.548,2192,5.548,2193,5.548,2194,5.548,2195,4.244,2196,4.942,2197,4.006]],["title/injectables/BackgroundService.html",[0,0.191,2198,3.644]],["body/injectables/BackgroundService.html",[0,0.204,2,0.684,3,0.044,4,0.039,5,0.044,9,0.03,10,0.237,11,1.36,12,1.303,23,0.591,29,1.063,31,0.879,32,0.007,36,1.039,37,0.648,38,0.157,39,0.574,42,1.44,43,1.359,64,0.272,66,1.332,67,0.416,79,0.577,80,0.547,81,0.08,82,0.312,83,2.094,84,1.747,89,2.054,97,0.974,125,0.003,126,0.003,143,1.942,157,2.553,241,2.045,249,2.548,268,2.126,391,1.424,524,0.507,563,1.179,581,2.871,588,0.457,664,1.691,671,2.97,725,3.892,750,4.199,780,1.93,790,4.199,810,2.348,866,3.005,977,4.165,980,3.848,998,3.674,1136,4.282,1147,3.15,1178,5.574,1285,1.907,1703,3.336,1712,2.44,2058,4.465,2190,2.697,2198,3.892,2199,2.767,2200,6.118,2201,6.118,2202,6.118,2203,6.118,2204,6.926,2205,6.504,2206,6.118,2207,7.829,2208,6.808,2209,6.118,2210,6.808,2211,5.087,2212,6.808,2213,5.087,2214,5.087,2215,5.087,2216,5.087,2217,6.808,2218,5.087,2219,3.379,2220,3.379,2221,5.087,2222,3.379,2223,3.379,2224,5.087,2225,6.504,2226,3.379,2227,5.087,2228,3.379,2229,4.165,2230,5.087,2231,3.379,2232,5.087,2233,3.379,2234,3.379,2235,5.087,2236,3.379,2237,5.087,2238,3.379,2239,6.808,2240,3.379,2241,5.087,2242,3.379,2243,3.379,2244,5.087,2245,3.379,2246,5.087,2247,3.379,2248,3.379,2249,5.087,2250,3.379,2251,5.087,2252,3.379,2253,3.379,2254,5.45,2255,6.064,2256,6.064,2257,5.45,2258,3.01,2259,3.01,2260,3.01,2261,3.01,2262,3.01,2263,3.01,2264,3.01,2265,3.01,2266,3.379,2267,7.302,2268,3.379,2269,3.379,2270,3.379,2271,3.379,2272,3.379,2273,3.379,2274,3.379,2275,3.379,2276,3.379,2277,3.379,2278,6.808,2279,3.379,2280,3.379,2281,3.379,2282,3.379,2283,5.087,2284,3.379,2285,3.379,2286,3.379,2287,5.087,2288,5.087,2289,3.379,2290,3.379,2291,3.379,2292,3.379,2293,3.379,2294,3.379,2295,4.531,2296,3.379,2297,3.379,2298,3.379,2299,3.379,2300,3.379,2301,6.504,2302,6.808,2303,6.064,2304,3.379,2305,5.087,2306,3.379,2307,3.379,2308,3.379,2309,3.379,2310,3.379,2311,6.118,2312,3.01,2313,3.379,2314,3.379,2315,4.165,2316,3.379,2317,5.087,2318,3.379,2319,3.01,2320,5.087,2321,3.01,2322,5.087,2323,3.379,2324,3.379]],["title/interfaces/BaseAgentEvent.html",[762,0.139,2325,3.9]],["body/interfaces/BaseAgentEvent.html",[3,0.078,4,0.069,5,0.078,9,0.053,10,0.352,14,1.704,32,0.007,38,0.178,81,0.113,125,0.005,126,0.005,159,3.138,267,3.084,273,2.995,524,0.578,588,1.263,741,2.193,762,0.22,764,1.112,782,3.544,792,4.106,810,2.315,824,3.763,1221,2.717,1225,2.62,1886,3.923,1888,3.669,2038,2.995,2099,3.171,2101,3.171,2104,2.637,2105,2.462,2107,2.637,2108,2.768,2109,2.839,2111,2.839,2126,2.995,2128,3.171,2134,3.08,2135,3.511,2138,4.034,2139,2.768,2140,2.768,2141,2.768,2142,2.701,2143,2.768,2325,6.194,2326,4.898,2327,7.139,2328,6.173,2329,3.493,2330,4.577,2331,4.898,2332,3.621,2333,4.577,2334,3.493,2335,4.577,2336,3.763,2337,4.106]],["title/components/ChatComposerComponent.html",[127,1.512,473,2.204]],["body/components/ChatComposerComponent.html",[3,0.084,4,0.019,5,0.065,7,3.635,9,0.033,10,0.13,11,0.519,16,0.976,17,2.663,23,0.325,29,0.943,31,0.6,32,0.007,36,0.672,37,0.492,38,0.152,39,0.371,42,0.944,43,0.928,64,0.438,67,0.199,70,0.98,73,2.58,75,0.524,81,0.021,82,0.15,84,0.529,90,2.82,97,0.678,115,2.329,125,0.002,126,0.002,127,1.173,128,0.749,129,1.263,130,0.769,131,0.98,132,0.769,133,0.769,138,0.714,141,4.049,142,1.328,143,1.726,144,1.328,145,1.754,146,2.668,147,1.902,148,1.76,150,1.401,157,1.817,159,1.289,182,0.731,185,0.789,186,0.789,189,3.479,197,3.561,235,1.169,236,2.668,237,4.353,239,2.885,240,1.112,241,5.196,245,4.042,246,5.979,247,5.518,248,4.428,249,3.405,250,3.823,253,5.264,254,5.204,255,4.001,256,4.681,257,5.227,258,4.769,259,3.258,262,2.423,263,1.019,264,4.16,265,4.658,266,2.668,267,1.668,268,1.76,269,3.667,271,1.112,273,0.811,274,2.885,275,3.566,276,3.566,277,3.566,280,2.423,281,2.236,282,2.885,283,1.396,284,1.835,285,1.062,286,2.885,287,1.835,290,2.423,291,2.141,292,3.258,295,2.423,296,3.258,297,4.88,303,4.779,304,2.324,309,2.423,310,5.33,311,3.566,312,3.258,313,4.058,314,4.058,315,3.02,316,1.062,319,4.215,320,3.125,323,3.125,324,3.877,325,4.056,326,3.366,328,1.112,331,1.062,332,1.062,334,1.835,335,1.835,336,3.025,337,1.112,338,4.779,339,4.475,340,3.366,341,3.125,342,3.73,343,4.042,344,4.394,345,2.423,346,2.423,348,3.177,349,2.536,350,3.258,351,2.021,352,3.566,353,3.366,354,1.835,356,3.566,357,1.326,358,1.442,361,4.451,362,3.258,365,2.423,370,1.169,373,1.239,374,3.566,375,3.732,376,2.141,386,2.324,391,1.231,392,2.236,393,1.239,394,2.885,395,1.239,396,1.112,400,1.062,401,2.536,403,1.169,407,1.169,413,3.602,425,1.326,426,2.141,428,0.625,430,2.141,432,1.326,434,1.849,436,2.768,437,2.021,440,1.442,442,1.019,443,1.921,444,1.019,445,1.062,449,0.769,450,1.328,451,1.295,452,0.769,453,2.088,454,0.769,455,0.769,456,0.749,457,0.769,458,0.749,459,0.769,460,0.769,461,0.769,462,0.749,463,0.769,464,0.749,465,0.769,466,0.749,467,1.328,468,0.769,469,0.769,470,0.769,471,2.51,472,0.769,473,2.036,474,0.769,475,0.769,476,0.638,477,0.769,478,0.749,479,0.769,480,0.749,481,0.769,482,0.769,483,0.731,484,0.769,485,0.749,486,0.769,487,0.769,488,0.749,489,0.769,490,0.749,491,0.769,492,0.769,493,0.769,494,0.769,495,0.749,496,0.769,497,0.749,498,1.178,499,0.682,500,1.328,501,0.749,502,0.749,503,0.769,504,0.769,505,0.749,506,0.769,556,1.019,588,0.379,631,2.109,681,1.921,698,1.239,700,1.239,701,1.921,702,1.326,707,1.442,744,3.025,745,1.326,746,1.326,748,2.493,785,1.483,810,1.346,866,2.399,1015,1.921,1038,1.442,1040,1.442,1044,4.658,1047,1.442,1055,1.326,1063,2.291,1067,0.945,1079,3.291,1179,2.291,1203,0.6,1292,1.019,1293,0.811,1332,2.236,1407,0.98,1452,1.442,1591,1.112,1802,1.019,2036,1.112,2181,1.169,2338,1.619,2339,8.411,2340,3.695,2341,2.798,2342,3.695,2343,4.968,2344,4.4,2345,2.798,2346,2.798,2347,2.798,2348,2.798,2349,2.798,2350,4.4,2351,1.921,2352,5.83,2353,5.83,2354,4.426,2355,5.83,2356,4.968,2357,2.141,2358,2.236,2359,3.695,2360,3.695,2361,3.695,2362,3.695,2363,3.695,2364,4.4,2365,1.619,2366,1.619,2367,3.695,2368,1.619,2369,1.619,2370,1.619,2371,1.619,2372,5.8,2373,1.619,2374,1.619,2375,1.619,2376,1.619,2377,1.619,2378,1.619,2379,1.619,2380,1.619,2381,2.798,2382,6.92,2383,1.619,2384,2.798,2385,1.619,2386,2.798,2387,1.619,2388,1.619,2389,1.619,2390,2.798,2391,1.619,2392,1.619,2393,1.619,2394,1.619,2395,4.715,2396,1.442,2397,3.919,2398,1.326,2399,1.442,2400,1.442,2401,2.798,2402,5.969,2403,1.619,2404,1.619,2405,1.239,2406,1.619,2407,1.239,2408,1.619,2409,1.619,2410,1.619,2411,1.619,2412,1.619,2413,1.619,2414,1.619,2415,1.619,2416,1.619,2417,2.798,2418,4.4,2419,4.4,2420,2.798,2421,2.798,2422,3.291,2423,3.695,2424,4.4,2425,2.798,2426,2.798,2427,1.239,2428,1.619,2429,1.619,2430,1.619,2431,1.619,2432,1.619,2433,1.619,2434,4.4,2435,2.798,2436,2.798,2437,2.798,2438,2.291,2439,2.798,2440,2.798,2441,2.798,2442,2.798,2443,1.239,2444,7.149,2445,1.442,2446,2.827,2447,1.619,2448,1.442,2449,3.025,2450,1.619,2451,1.442,2452,1.619,2453,1.619,2454,1.619,2455,1.619,2456,4.4,2457,1.619,2458,1.619,2459,2.798,2460,1.619,2461,1.326,2462,1.326,2463,3.919,2464,3.025,2465,2.798,2466,1.619,2467,1.239,2468,2.798,2469,2.798,2470,1.619,2471,2.291,2472,1.112,2473,2.798,2474,1.442,2475,2.798,2476,2.798,2477,2.291,2478,1.619,2479,3.025,2480,3.695,2481,1.442,2482,3.695,2483,2.798,2484,1.619,2485,1.619,2486,1.619,2487,1.619,2488,1.619,2489,3.025,2490,2.798,2491,1.442]],["title/interfaces/ChatEntry.html",[762,0.139,2146,2.384]],["body/interfaces/ChatEntry.html",[3,0.067,4,0.06,5,0.067,9,0.045,10,0.319,32,0.007,37,0.434,38,0.165,81,0.123,125,0.005,126,0.005,159,1.793,267,2.96,272,2.821,411,3.253,416,2.724,428,3.174,524,0.583,588,1.305,741,2.236,762,0.275,764,0.955,779,2.66,782,2.025,1119,1.725,1218,2.32,1221,2.564,1223,1.828,1225,2.06,1536,2.448,1659,2.572,1888,2.163,1892,2.069,1894,3.339,1895,3.339,2038,2.572,2095,4.215,2096,2.809,2097,2.809,2098,2.9,2099,3.633,2100,2.9,2101,3.633,2102,2.9,2103,3.746,2104,3.021,2105,3.174,2106,3.746,2107,3.021,2108,3.171,2109,3.253,2110,3.746,2111,3.253,2112,3.746,2113,3.746,2114,3.746,2115,3.746,2116,2.724,2117,2.9,2118,2.9,2119,2.9,2120,3.633,2121,2.9,2122,2.646,2123,2.9,2124,3.746,2125,2.646,2126,3.431,2127,3.746,2128,3.633,2129,4.215,2130,2.9,2131,4.215,2132,2.9,2133,4.215,2134,2.646,2135,2.069,2136,2.9,2137,2.9,2138,2.378,2139,3.171,2140,3.171,2141,3.171,2142,3.094,2143,3.171,2144,2.439,2145,2.809,2146,3.431,2147,2.9,2148,4.235]],["title/injectables/ChatEventsService.html",[0,0.191,2492,4.243]],["body/injectables/ChatEventsService.html",[0,0.217,2,0.743,3,0.048,4,0.043,5,0.048,9,0.048,11,1.203,12,1.27,14,2.33,23,0.629,29,0.932,31,0.814,32,0.007,36,1.107,37,0.69,38,0.163,39,0.612,42,0.594,64,0.609,67,0.452,71,1.89,79,0.626,80,0.594,81,0.07,82,0.339,84,1.547,97,0.427,119,2.785,125,0.004,126,0.004,157,2.465,182,1.657,199,2.407,203,3.005,524,0.316,698,2.808,780,1.671,896,3.589,1335,5.261,1408,5.121,1430,6.052,1457,4.867,1663,3.159,1972,3.005,2003,3.275,2104,2.385,2105,1.511,2107,1.618,2109,1.742,2111,1.742,2126,3.216,2134,3.308,2329,2.143,2332,3.275,2492,4.819,2493,6.874,2494,3.005,2495,5.41,2496,5.41,2497,5.41,2498,5.41,2499,5.41,2500,5.41,2501,3.67,2502,6.052,2503,5.261,2504,5.806,2505,5.724,2506,5.806,2507,6.426,2508,5.806,2509,5.724,2510,5.425,2511,8.18,2512,5.724,2513,5.806,2514,6.426,2515,5.806,2516,3.67,2517,5.41,2518,8.369,2519,5.683,2520,3.67,2521,7.046,2522,5.41,2523,3.67,2524,5.41,2525,3.67,2526,5.41,2527,3.67,2528,5.41,2529,3.67,2530,5.41,2531,3.67,2532,4.819,2533,3.67,2534,3.67,2535,3.269,2536,3.67,2537,3.269,2538,3.67,2539,3.269,2540,3.67,2541,7.046,2542,7.091,2543,3.67,2544,7.561,2545,6.426,2546,3.67,2547,6.316,2548,6.426,2549,5.46,2550,5.41,2551,3.67,2552,2.808,2553,3.67,2554,3.67,2555,3.67,2556,3.67,2557,6.426,2558,7.091,2559,7.561,2560,8.395,2561,3.67,2562,3.67,2563,3.67,2564,3.67,2565,3.67,2566,3.67,2567,5.41,2568,3.67,2569,3.67,2570,3.67,2571,4.411,2572,6.426,2573,3.67,2574,5.41,2575,3.67,2576,2.808,2577,3.67,2578,7.561,2579,5.41,2580,5.41,2581,3.67,2582,5.41,2583,5.41,2584,5.41,2585,5.41,2586,5.41,2587,5.41,2588,5.41,2589,5.41,2590,3.67,2591,3.67,2592,6.426,2593,3.269,2594,3.275,2595,3.67,2596,5.41,2597,5.41,2598,5.41,2599,4.43,2600,3.67,2601,3.269,2602,3.269,2603,3.67,2604,2.65,2605,3.005,2606,3.67]],["title/injectables/ChatFacade.html",[0,0.191,2502,3.644]],["body/injectables/ChatFacade.html",[0,0.183,2,0.593,3,0.038,4,0.034,5,0.094,9,0.026,10,0.212,11,1.326,12,1.411,14,0.834,16,2.205,23,0.53,24,1.462,29,1.076,31,0.929,32,0.007,36,1.181,37,0.736,38,0.174,39,0.652,42,1.356,43,1.308,58,2.999,64,0.609,65,0.5,66,2.206,67,0.361,71,1.508,73,2.164,75,0.947,78,1.355,79,0.5,80,0.474,81,0.038,82,0.271,84,1.521,85,0.834,97,0.973,113,2.241,125,0.003,126,0.003,127,0.93,143,2.005,157,2.506,159,2.641,232,1.254,267,2.76,391,1.276,428,1.759,471,1.261,476,2.206,509,0.864,524,0.552,554,2.492,555,2.99,556,1.842,588,0.927,616,5.937,631,2.752,741,1.832,778,2.01,779,2.344,793,1.56,810,2.219,829,0.819,858,3.733,866,2.6,1015,2.01,1028,1.427,1083,3.16,1136,2.868,1197,1.653,1200,1.56,1202,2.983,1203,2.073,1222,1.773,1225,0.88,1226,1.179,1227,3.13,1231,4.987,1292,1.842,1329,6.459,1457,5.987,1513,3.733,1530,0.88,1931,3.789,1932,4.062,1934,2.241,1935,3.824,1939,3.689,2029,1.921,2077,2.398,2105,1.205,2116,2.417,2144,1.39,2181,2.115,2229,3.733,2328,4.337,2329,1.71,2332,5.678,2333,4.834,2334,3.689,2335,4.834,2336,4.925,2354,4.987,2358,4.144,2397,2.609,2502,3.488,2519,1.842,2594,2.76,2607,2.929,2608,4.987,2609,5.599,2610,5.599,2611,5.599,2612,5.599,2613,4.987,2614,4.062,2615,4.062,2616,4.062,2617,4.062,2618,5.628,2619,3.733,2620,3.733,2621,6.319,2622,3.733,2623,4.56,2624,3.733,2625,4.56,2626,4.56,2627,4.56,2628,5.599,2629,4.56,2630,2.929,2631,4.56,2632,2.929,2633,4.56,2634,2.929,2635,4.56,2636,2.929,2637,2.929,2638,2.929,2639,2.929,2640,4.062,2641,2.929,2642,3.733,2643,4.56,2644,2.929,2645,2.929,2646,4.56,2647,2.929,2648,2.929,2649,4.56,2650,2.929,2651,2.929,2652,4.56,2653,2.929,2654,4.56,2655,2.929,2656,4.56,2657,2.929,2658,4.56,2659,2.929,2660,2.929,2661,5.599,2662,2.929,2663,4.56,2664,2.929,2665,4.584,2666,4.56,2667,2.929,2668,4.56,2669,2.929,2670,2.929,2671,4.56,2672,2.929,2673,2.929,2674,4.56,2675,2.929,2676,2.929,2677,2.929,2678,4.062,2679,2.929,2680,2.241,2681,2.398,2682,2.398,2683,2.241,2684,2.398,2685,2.398,2686,2.929,2687,4.563,2688,2.929,2689,2.929,2690,2.929,2691,1.71,2692,2.929,2693,2.929,2694,2.929,2695,2.929,2696,2.929,2697,2.929,2698,2.929,2699,2.929,2700,2.398,2701,2.929,2702,2.929,2703,4.56,2704,6.319,2705,4.337,2706,2.929,2707,2.929,2708,2.929,2709,1.773,2710,2.929,2711,2.929,2712,2.929,2713,2.929,2714,2.929,2715,2.929]],["title/interfaces/ChatMessage.html",[762,0.139,2332,2.883]],["body/interfaces/ChatMessage.html",[3,0.073,4,0.065,5,0.073,9,0.049,10,0.337,14,1.589,32,0.007,38,0.184,39,0.709,81,0.11,125,0.005,126,0.005,159,3.071,267,3.028,273,2.792,524,0.571,588,1.243,741,2.552,762,0.211,764,1.037,779,2.747,782,3.765,792,3.829,810,2.759,824,3.509,1221,1.738,1225,1.676,1886,3.658,1888,2.348,2038,2.792,2099,2.957,2101,2.957,2104,2.459,2105,2.296,2107,2.459,2108,2.581,2109,2.647,2111,2.647,2126,2.792,2128,2.957,2134,2.872,2135,2.246,2138,2.581,2139,3.931,2140,3.931,2141,3.931,2142,3.835,2143,3.931,2325,4.567,2326,4.567,2327,5.923,2328,6.041,2329,3.257,2330,4.268,2331,4.567,2332,4.378,2333,6.499,2334,4.959,2335,6.499,2336,5.343,2337,3.829]],["title/interfaces/ChatStreamPort.html",[762,0.139,2680,3.644]],["body/interfaces/ChatStreamPort.html",[3,0.088,4,0.078,5,0.114,9,0.06,16,2.359,23,0.948,29,0.93,31,0.84,32,0.007,36,0.915,37,0.571,38,0.174,39,0.506,64,0.657,71,3.481,81,0.088,125,0.005,126,0.005,157,2.543,428,2.609,524,0.56,762,0.197,764,1.257,779,2.638,793,2.999,1222,4.093,1225,2.032,1226,2.723,1530,2.032,1931,4.387,1939,4.764,2358,5.508,2519,4.254,2680,6.243,2709,4.093,2716,8.764,2717,6.762,2718,6.705,2719,6.762,2720,6.762,2721,6.762]],["title/injectables/ChatUtilsService.html",[0,0.191,1408,3.44]],["body/injectables/ChatUtilsService.html",[0,0.192,2,0.632,3,0.041,4,0.068,5,0.041,9,0.042,14,2.008,23,0.557,29,0.984,31,0.889,32,0.007,36,1.152,37,0.718,38,0.162,39,0.636,64,0.385,67,0.384,79,0.533,80,0.505,81,0.041,82,0.288,84,1.102,97,1.016,113,3.664,125,0.003,126,0.003,143,1.849,159,2.969,189,3.289,199,3.141,202,4.001,211,4.667,230,1.928,267,2.601,273,2.397,391,1.34,411,2.273,428,2.989,524,0.554,588,1.109,631,1.639,680,5.317,681,3.287,713,4.266,741,2.044,750,3.287,784,2.254,810,2.446,866,2.398,896,2.248,898,2.78,931,3.921,980,3.012,1046,5.191,1050,4.266,1059,2.555,1163,5,1182,4.72,1203,1.156,1316,3.664,1408,3.458,1424,2.142,1427,2.78,1454,2.555,1495,4.199,1509,1.562,1601,1.963,1662,5.626,1663,2.796,1892,1.257,1917,3.287,2104,2.111,2105,2.398,2107,1.376,2109,2.273,2111,2.273,2142,2.162,2328,5.107,2329,3.402,2330,3.664,2332,5.638,2333,4.458,2334,3.402,2335,4.458,2336,5.353,2400,4.266,2438,2.555,2493,7.159,2605,2.555,2619,3.921,2640,4.266,2642,3.921,2705,4,2722,3.121,2723,4.789,2724,4.789,2725,4.789,2726,4.789,2727,6.536,2728,4.789,2729,4.789,2730,4.789,2731,4.789,2732,4.789,2733,4.789,2734,4.789,2735,3.121,2736,4.789,2737,4.789,2738,4.789,2739,4.789,2740,4.789,2741,4.789,2742,6.536,2743,4.789,2744,4.789,2745,4.789,2746,4.789,2747,4.789,2748,4.266,2749,4.789,2750,5.827,2751,4.789,2752,5.827,2753,4.789,2754,5.827,2755,4.789,2756,4.266,2757,3.921,2758,3.921,2759,6.536,2760,4.789,2761,4.789,2762,4.789,2763,4.789,2764,3.121,2765,6.627,2766,6.588,2767,6.382,2768,5.822,2769,4.789,2770,3.121,2771,4.789,2772,3.121,2773,4.789,2774,3.121,2775,4.789,2776,4.789,2777,4.789,2778,3.121,2779,4.789,2780,4.789,2781,4.789,2782,3.121,2783,3.921,2784,4.789,2785,4.266,2786,4.789,2787,4.789,2788,3.121,2789,7.993,2790,5.486,2791,4.789,2792,3.121,2793,4.789,2794,3.121,2795,4.789,2796,3.121,2797,4.789,2798,3.121,2799,4.789,2800,4.789,2801,4.789,2802,2.555,2803,4.789,2804,4.789,2805,3.121,2806,4.789,2807,3.121,2808,3.121,2809,4.789,2810,3.121,2811,3.121,2812,3.121,2813,3.121,2814,3.121,2815,3.121,2816,3.121,2817,4.266,2818,3.121,2819,3.121,2820,5.827,2821,5.827,2822,3.121,2823,4.789,2824,3.121,2825,3.121,2826,4.789,2827,3.121,2828,4.789,2829,3.121,2830,3.121,2831,3.121,2832,3.121,2833,3.121,2834,3.121,2835,4.789,2836,3.121,2837,3.121,2838,3.121]],["title/interfaces/CompaniesPort.html",[762,0.139,2839,3.44]],["body/interfaces/CompaniesPort.html",[3,0.086,4,0.077,5,0.086,9,0.059,23,0.938,29,0.92,31,0.831,32,0.007,36,1.092,37,0.782,38,0.169,39,0.603,81,0.105,125,0.005,126,0.005,232,1.826,509,1.96,511,3.324,512,4.908,524,0.563,532,3.932,552,4.019,565,3.397,567,2.795,584,2.795,585,2.795,588,1.092,762,0.235,764,1.234,779,2.61,794,2.859,795,4.177,829,1.625,1028,3.932,1200,2.272,1203,2.459,1792,3.735,2839,5.828,2840,5.915,2841,7.189,2842,6.175,2843,6.64,2844,4.795,2845,6.64,2846,5.915,2847,5.437]],["title/injectables/CompaniesService.html",[0,0.191,2085,3.44]],["body/injectables/CompaniesService.html",[0,0.255,2,0.934,3,0.06,4,0.054,5,0.06,9,0.041,10,0.297,11,1.199,12,1.266,23,0.741,24,2.229,29,0.897,31,0.656,32,0.007,36,0.863,37,0.739,38,0.155,39,0.477,42,1.032,43,1.014,64,0.665,65,0.788,67,0.569,79,0.788,80,0.748,81,0.083,82,0.427,84,1.655,85,1.815,97,0.848,125,0.004,126,0.004,230,2.939,232,2.007,249,2.547,283,2.409,391,1.784,509,2.154,511,2.311,512,4.661,516,2.566,524,0.521,532,3.834,552,4.418,563,2.746,565,1.943,567,1.943,584,1.943,585,1.943,588,0.863,677,2.696,762,0.134,779,2.061,780,2.012,782,1.819,795,2.904,824,2.904,829,1.414,896,1.781,1028,3.105,1200,2.498,1203,1.71,1208,2.649,1209,1.819,1319,3.169,1520,3.143,1523,2.566,1525,2.949,1527,1.859,1528,1.988,1529,1.988,1530,1.387,1531,1.819,1532,1.859,1536,2.023,1538,3.597,1539,2.904,1540,2.904,1541,2.606,1542,2.904,1543,2.904,1544,2.606,1545,2.904,1546,5.584,1547,3.532,1548,4.591,1549,2.904,1550,4.009,1551,2.904,1552,3.281,1553,3.169,1554,3.483,1555,3.483,1556,4.876,1792,2.949,1806,3.169,1807,3.169,1808,3.169,2085,4.602,2571,4.375,2841,5.677,2842,4.876,2844,4.602,2848,4.113,2849,4.617,2850,4.617,2851,4.617,2852,4.617,2853,4.113,2854,6.502,2855,4.113,2856,3.78,2857,4.113,2858,4.113,2859,4.113,2860,4.113,2861,4.113,2862,5.677,2863,5.677,2864,5.677,2865,5.677,2866,5.677,2867,5.677,2868,5.677,2869,5.677,2870,4.113,2871,4.113,2872,5.677,2873,4.113]],["title/interfaces/CompanyDashboardSummary.html",[762,0.139,1908,3.269]],["body/interfaces/CompanyDashboardSummary.html",[3,0.079,4,0.071,5,0.079,9,0.054,10,0.356,14,1.735,32,0.007,38,0.175,39,0.72,81,0.118,125,0.005,126,0.005,499,2.563,524,0.58,532,2.967,588,1.132,732,4.652,754,3.994,762,0.263,764,1.132,767,5.311,768,5.311,773,3.135,774,5.311,775,5.279,779,2.474,780,2.13,781,2.563,782,2.4,1225,1.83,1900,5.252,1901,4.398,1902,4.398,1903,4.398,1904,4.398,1905,4.398,1906,4.398,1907,4.181,1908,5.742,1909,4.398,1910,4.398,1911,5.252,1912,4.398,1913,4.398,1914,4.398,1915,4.398,1916,4.398,1917,4.181,1918,4.398,1919,4.398,1920,4.398,1921,4.398,1922,5.252,1923,4.398,1924,3.556,1925,4.398,1926,4.398]],["title/interfaces/CompanyInsights.html",[762,0.139,1911,3.269]],["body/interfaces/CompanyInsights.html",[3,0.074,4,0.066,5,0.074,9,0.05,10,0.341,14,1.62,32,0.007,38,0.178,39,0.739,81,0.115,125,0.005,126,0.005,499,2.394,524,0.589,532,2.771,588,1.097,732,3.015,754,3.73,762,0.258,764,1.057,767,3.443,768,3.443,773,2.928,774,3.443,775,4.277,780,1.909,781,2.394,782,2.242,1225,1.709,1900,5.028,1901,4.108,1902,4.108,1903,4.108,1904,4.108,1905,4.108,1906,4.108,1907,3.904,1908,5.028,1909,4.108,1910,4.108,1911,5.562,1912,6.18,1913,6.18,1914,6.18,1915,6.18,1916,6.18,1917,5.874,1918,6.18,1919,6.18,1920,6.18,1921,6.18,1922,5.028,1923,4.108,1924,3.321,1925,4.108,1926,4.108]],["title/interfaces/CompanyItem.html",[552,2.883,762,0.139]],["body/interfaces/CompanyItem.html",[3,0.088,4,0.078,5,0.088,9,0.059,10,0.38,32,0.007,37,0.799,38,0.164,39,0.68,81,0.106,125,0.005,126,0.005,232,1.857,509,1.993,511,3.379,512,5.34,524,0.576,532,4.536,552,4.934,565,3.431,567,2.841,584,2.841,585,2.841,588,1.103,762,0.237,764,1.255,794,2.907,795,4.247,829,1.465,1792,3.124,2839,4.875,2840,6.014,2842,5.165,2846,6.014,2847,5.528]],["title/interfaces/CompanyItem-1.html",[391,1.112,552,2.404,762,0.116]],["body/interfaces/CompanyItem-1.html",[0,0.264,3,0.063,4,0.056,5,0.063,9,0.043,10,0.306,11,0.924,12,0.976,24,1.718,32,0.007,37,0.761,38,0.15,39,0.6,64,0.676,65,0.825,67,0.596,79,0.825,80,0.783,81,0.086,82,0.447,84,1.676,85,1.874,97,0.869,125,0.004,126,0.004,230,1.948,232,2.057,249,2.609,283,2.487,391,1.842,509,2.207,511,2.422,512,5.089,516,2.65,524,0.55,532,4.317,552,4.858,563,2.8,565,2.036,567,2.036,584,2.036,585,2.036,588,0.891,677,2.825,762,0.141,764,0.899,780,2.041,782,1.907,795,3.043,824,3.043,829,1.182,896,1.867,1200,2.252,1208,2.714,1209,1.907,1319,3.321,1520,2.083,1523,1.948,1525,2.239,1527,1.948,1528,2.083,1529,2.083,1530,1.454,1531,1.907,1532,1.948,1536,2.089,1538,3.714,1539,3.043,1540,3.043,1541,2.73,1542,3.043,1543,3.043,1544,2.73,1545,3.043,1546,5.722,1547,3.701,1548,4.705,1549,3.043,1550,4.14,1551,3.043,1552,3.388,1553,3.321,1554,3.597,1555,3.597,1556,5.035,1792,2.239,1806,3.321,1807,3.321,1808,3.321,2085,3.494,2571,4.517,2842,3.701,2844,3.494,2848,4.309,2853,4.309,2854,6.662,2855,4.309,2856,3.961,2857,4.309,2858,4.309,2859,4.309,2860,4.309,2861,4.309,2862,5.862,2863,5.862,2864,5.862,2865,5.862,2866,5.862,2867,5.862,2868,5.862,2869,5.862,2870,4.309,2871,4.309,2872,5.862,2873,4.309]],["title/injectables/ConnectionStatusService.html",[0,0.191,2504,3.9]],["body/injectables/ConnectionStatusService.html",[0,0.273,2,1.031,3,0.089,4,0.059,5,0.066,9,0.045,10,0.317,11,1.078,14,2.434,23,0.792,29,1.023,31,0.879,32,0.007,36,0.689,37,0.43,38,0.128,39,0.381,42,0.825,43,0.811,64,0.548,67,0.628,79,0.869,80,0.825,81,0.089,82,0.471,84,1.288,97,0.953,119,4.697,125,0.005,126,0.005,157,2.554,202,4.103,211,5.134,327,4.677,427,4.171,524,0.479,631,2.332,925,7.471,1039,6.712,1044,3.678,1484,6.069,1495,3.845,1530,1.531,1931,3.411,2204,6.537,2337,5.27,2503,7.566,2504,5.579,2601,4.537,2602,7.302,2783,6.712,2785,6.069,2874,8.127,2875,4.537,2876,8.198,2877,8.198,2878,8.198,2879,6.814,2880,6.069,2881,7.678,2882,5.094,2883,5.579,2884,6.814,2885,5.094,2886,6.814,2887,6.814,2888,6.814,2889,5.094,2890,6.814,2891,6.814,2892,6.814,2893,5.094,2894,6.814,2895,6.814,2896,5.094,2897,5.094,2898,5.094,2899,5.094,2900,5.094,2901,6.814,2902,6.069,2903,5.094,2904,6.839,2905,6.839,2906,5.094,2907,5.094,2908,5.094,2909,5.094,2910,5.094,2911,5.094,2912,5.094,2913,5.094,2914,5.094,2915,8.198,2916,5.094,2917,5.094,2918,5.094,2919,4.171,2920,5.094]],["title/interfaces/CreateUserPayload.html",[762,0.139,1790,2.688]],["body/interfaces/CreateUserPayload.html",[3,0.082,4,0.074,5,0.082,9,0.056,10,0.365,32,0.007,38,0.171,39,0.586,64,0.51,81,0.111,104,3.464,115,3.219,125,0.005,126,0.005,232,1.743,509,1.871,524,0.581,565,2.668,567,2.668,584,2.668,585,2.668,588,1.062,762,0.248,764,1.178,765,3.701,793,2.169,829,1.643,1100,3.36,1119,2.86,1208,2.3,1209,2.498,1221,2.444,1223,3.255,1226,2.552,1289,3.836,1290,3.263,1787,5.19,1788,4.371,1789,4.423,1790,4.808,1791,4.336,1792,2.933,1793,4.157,1794,4.157,1795,3.836,1796,4.157]],["title/interfaces/CreateUserPayload-1.html",[391,1.112,762,0.116,1790,2.242]],["body/interfaces/CreateUserPayload-1.html",[0,0.265,3,0.086,4,0.056,5,0.063,9,0.043,10,0.308,11,0.928,12,0.979,24,2.196,32,0.007,38,0.151,39,0.494,64,0.677,65,0.83,67,0.6,79,0.83,80,0.788,81,0.098,82,0.45,84,1.708,85,1.882,97,0.935,104,2.66,115,2.835,125,0.005,126,0.004,230,1.96,232,1.817,249,1.698,283,1.839,391,1.362,509,1.95,516,1.96,524,0.57,563,1.698,565,2.048,567,2.048,584,2.048,585,2.048,588,1.139,661,2.31,677,2.842,762,0.219,764,0.905,780,2.091,785,2.58,793,2.567,829,1.512,896,1.878,900,3.515,1085,3.341,1088,3.061,1100,2.58,1119,2.519,1200,2.567,1208,1.766,1209,1.918,1221,2.059,1223,2.993,1226,1.96,1290,2.506,1293,2.436,1424,3.341,1509,2.436,1518,3.192,1520,2.096,1523,1.96,1525,2.252,1527,1.96,1528,2.096,1529,2.845,1530,1.462,1531,1.918,1532,1.96,1533,2.842,1534,3.061,1535,3.192,1536,2.67,1538,3.729,1539,3.061,1540,3.061,1541,2.747,1542,3.061,1543,3.061,1544,2.747,1545,3.061,1548,4.156,1549,3.061,1550,4.156,1551,3.061,1552,2.506,1554,2.66,1555,2.66,1788,4.107,1789,4.118,1790,4.234,1791,3.92,1792,2.252,1793,3.192,1794,3.192,1795,2.946,1796,3.192,1797,3.723,1798,3.192,1799,3.723,1800,2.946,1801,3.723,1802,3.061,1803,5.739,1804,3.723,1805,3.723,1806,3.341,1807,3.341,1808,3.341,1809,5.739,1810,3.723,1811,2.506,1812,2.946,1813,3.723,1814,3.515,1815,3.515,1816,3.515,1817,3.723]],["title/injectables/CreateUserUseCase.html",[0,0.191,1857,3.9]],["body/injectables/CreateUserUseCase.html",[0,0.326,2,1.359,3,0.087,4,0.078,5,0.087,9,0.059,10,0.378,11,1.227,12,1.295,23,0.945,29,0.926,31,0.691,32,0.007,36,0.909,37,0.567,38,0.152,39,0.502,42,1.088,43,1.069,64,0.703,65,1.146,67,0.828,75,2.172,78,3.108,79,1.146,80,1.088,81,0.087,82,0.621,97,0.781,125,0.005,126,0.005,793,2.299,829,1.46,1193,3.444,1197,4.932,1198,3.136,1287,5.869,1289,4.066,1290,3.458,1291,4.405,1790,5.125,1857,6.655,2921,8.739,2922,5.5,2923,6.218,2924,5.984,2925,5.984,2926,6.717]],["title/injectables/CustomPreloadStrategy.html",[0,0.191,2046,3.644]],["body/injectables/CustomPreloadStrategy.html",[0,0.295,2,1.161,3,0.075,4,0.067,5,0.075,9,0.051,10,0.343,11,1.142,12,1.206,23,0.856,25,6.06,29,0.839,31,0.59,32,0.007,36,0.776,37,0.484,38,0.107,39,0.429,42,0.929,43,0.913,64,0.691,65,0.979,67,0.707,79,0.979,80,0.929,81,0.075,82,0.53,83,1.963,84,1.538,89,1.926,97,1.056,115,2.784,125,0.005,126,0.005,136,2.871,143,1.821,157,1.788,471,2.47,483,2.59,563,2.001,645,2.953,664,2.871,841,6.094,866,2.361,896,2.213,1147,2.953,1293,2.871,1530,1.724,1931,4.297,2029,3.762,2034,4.697,2044,6.031,2046,5.635,2071,6.224,2074,7.029,2075,6.031,2090,6.661,2190,3.041,2927,8.136,2928,5.736,2929,8.878,2930,7.366,2931,5.736,2932,5.736,2933,4.697,2934,5.736,2935,7.366,2936,5.11,2937,5.736,2938,5.736,2939,6.561,2940,7.366,2941,5.736,2942,7.247,2943,5.736,2944,3.472,2945,5.736,2946,5.736,2947,5.736,2948,5.736,2949,7.366,2950,6.031,2951,5.736,2952,5.736,2953,5.736,2954,5.736,2955,5.736]],["title/classes/DeleteSessionUseCase.html",[82,0.44,2665,3.9]],["body/classes/DeleteSessionUseCase.html",[3,0.088,4,0.079,5,0.088,9,0.06,12,1.006,23,0.95,29,0.932,31,0.698,32,0.007,36,1.107,37,0.69,38,0.171,39,0.611,64,0.658,75,2.194,81,0.088,82,0.627,97,0.789,125,0.005,126,0.005,524,0.554,1193,3.459,1198,3.155,1202,3.591,1236,4.774,1530,2.039,1774,4.107,1931,4.393,1935,5.515,1939,3.961,2003,4.107,2011,4.268,2665,6.695,2956,8.777,2957,6.044,2958,5.191,2959,6.785,2960,5.905,2961,6.785,2962,6.785]],["title/injectables/DeleteUserUseCase.html",[0,0.191,1859,3.9]],["body/injectables/DeleteUserUseCase.html",[0,0.326,2,1.364,3,0.088,4,0.078,5,0.088,9,0.059,10,0.379,11,1.229,12,1.297,23,0.946,29,0.928,31,0.694,32,0.007,36,0.912,37,0.569,38,0.153,39,0.504,42,1.092,43,1.073,64,0.704,65,1.15,67,0.83,75,2.179,78,3.119,79,1.15,80,1.092,81,0.088,82,0.623,97,0.783,125,0.005,126,0.005,524,0.512,829,1.463,1100,3.573,1193,3.449,1197,4.939,1198,3.142,1287,5.881,1289,4.079,1291,4.42,1859,6.668,2922,5.519,2963,8.752,2964,7.254,2965,6.74,2966,6.74,2967,6.74]],["title/injectables/FilesFacade.html",[0,0.191,1113,3.9]],["body/injectables/FilesFacade.html",[0,0.253,2,0.921,3,0.059,4,0.053,5,0.082,9,0.04,10,0.294,11,1.194,12,1.457,14,2.34,23,0.733,24,2.43,25,5.129,29,1.075,31,0.845,32,0.007,36,0.854,37,0.532,38,0.169,39,0.472,42,1.461,43,1.436,46,3.248,58,2.994,64,0.583,65,0.776,66,3.237,67,0.56,73,2.159,75,1.471,79,0.776,80,0.737,81,0.082,82,0.421,83,2.159,84,1.193,85,2.34,89,2.118,90,2.655,91,3.968,97,0.842,99,2.656,101,2.754,108,3.248,125,0.004,126,0.004,189,2.568,191,5.541,194,3.725,232,2.259,249,1.587,283,2.737,391,1.766,392,3.818,410,3.448,434,3.625,509,2.425,516,2.916,518,5.984,519,5.984,524,0.266,537,4.827,542,4.33,550,4.556,554,2.487,555,2.984,558,3.818,560,5.541,561,4.556,563,1.587,569,3.725,570,3.285,571,3.481,573,3.818,579,3.123,580,3.481,581,3.561,588,0.98,779,2.04,1028,3.074,1082,2.656,1083,2.568,1084,3.818,1113,5.166,1146,3.448,1147,3.248,1160,4.052,1166,4.052,1200,1.557,1203,1.685,1792,2.919,2613,6.451,2678,5.62,2683,3.481,2968,4.052,2969,7.242,2970,4.549,2971,4.549,2972,4.549,2973,4.549,2974,6.309,2975,4.549,2976,4.549,2977,4.549,2978,4.549,2979,6.309,2980,4.549,2981,4.549,2982,4.549,2983,4.549,2984,4.549,2985,4.549,2986,3.725,2987,4.052,2988,4.549,2989,4.549,2990,4.549,2991,4.052,2992,4.549,2993,4.549,2994,7.242,2995,4.549]],["title/interfaces/FilesPort.html",[72,2.996,762,0.139]],["body/interfaces/FilesPort.html",[3,0.076,4,0.067,5,0.119,9,0.051,23,0.864,29,0.983,31,0.888,32,0.007,36,1.168,37,0.728,38,0.174,39,0.645,64,0.468,72,4.676,73,3.528,81,0.107,125,0.005,126,0.005,232,1.6,283,2.199,392,4.957,410,4.063,509,1.717,516,2.343,524,0.58,588,1.168,741,1.687,762,0.239,764,1.082,779,2.403,780,2.033,810,2.274,829,1.686,1028,3.621,1082,3.397,1083,4.871,1084,4.499,1146,4.063,1147,3.827,1200,1.991,1202,3.401,1203,3.033,1208,2.112,1209,2.293,1225,1.749,1536,1.847,1792,3.439,2135,2.343,2996,4.764,2997,6.621,2998,6.621,2999,5.102,3000,5.819,3001,5.183,3002,5.819,3003,5.102,3004,5.819,3005,5.183,3006,5.819,3007,3.994,3008,3.994,3009,3.994,3010,3.994,3011,3.994,3012,3.994,3013,3.66]],["title/injectables/FilesService.html",[0,0.191,2083,3.269]],["body/injectables/FilesService.html",[0,0.243,2,0.869,3,0.056,4,0.05,5,0.112,9,0.038,10,0.282,11,1.172,12,1.237,17,4.249,23,0.704,24,2.406,29,0.951,31,0.785,32,0.007,36,1.032,37,0.679,38,0.161,39,0.57,42,1.137,43,1.117,64,0.672,65,0.733,67,0.529,73,2.875,79,0.733,80,0.695,81,0.091,82,0.397,84,1.707,85,1.223,97,0.935,125,0.004,126,0.004,138,2.67,230,2.827,232,2.212,283,1.623,391,1.696,392,4.249,410,3.311,509,1.788,516,1.729,524,0.562,534,2.816,563,1.498,588,1.13,631,1.469,646,2.816,664,2.149,741,1.245,762,0.176,779,1.959,780,1.895,794,2.609,810,1.854,829,1.574,896,1.657,1028,2.952,1082,4.099,1083,4.539,1084,3.667,1146,3.311,1147,3.119,1200,2.752,1202,3.38,1203,2.243,1208,2.199,1209,1.692,1225,1.29,1285,2.423,1293,2.149,1520,3.023,1523,2.439,1525,2.803,1527,1.729,1528,1.849,1529,2.609,1530,1.29,1531,1.692,1532,1.729,1536,2.552,1538,3.419,1541,2.423,1544,2.423,1552,3.614,1554,2.347,1555,3.837,1744,2.599,1792,2.803,1800,2.599,1802,2.701,2083,4.159,2125,2.21,2135,1.729,2190,2.276,2594,2.599,2997,5.397,2998,5.397,2999,4.159,3001,3.824,3003,4.159,3005,3.824,3007,2.947,3008,2.947,3009,2.947,3010,2.947,3011,2.947,3012,2.947,3013,2.701,3014,3.516,3015,4.294,3016,4.294,3017,4.294,3018,4.294,3019,4.294,3020,4.294,3021,3.101,3022,3.516,3023,3.516,3024,3.516,3025,3.516,3026,2.947,3027,2.947,3028,3.285,3029,3.101,3030,3.516,3031,4.961,3032,3.101,3033,3.516,3034,3.516,3035,4.961,3036,3.516,3037,3.516,3038,3.516,3039,3.516,3040,3.516,3041,2.947,3042,3.516,3043,3.516,3044,3.516,3045,3.516,3046,3.516,3047,3.516,3048,3.516,3049,3.516,3050,3.516,3051,3.516,3052,3.516,3053,4.961,3054,3.516,3055,3.516,3056,3.516,3057,4.961,3058,3.285,3059,3.516]],["title/components/ForbiddenPage.html",[127,1.512,478,2.204]],["body/components/ForbiddenPage.html",[3,0.072,4,0.064,5,0.072,7,4.201,16,1.936,32,0.007,37,0.608,64,0.58,67,0.683,81,0.072,82,0.513,115,3.513,125,0.005,126,0.005,127,2.541,128,2.567,129,3.254,130,3.421,132,2.633,133,2.633,138,2.445,139,3.821,140,3.821,141,4.727,142,3.421,143,2.288,144,3.421,145,3.8,181,2.941,182,2.505,449,2.633,450,3.421,451,3.335,452,2.633,453,4.023,454,2.633,455,2.633,456,2.567,457,2.633,458,2.567,459,2.633,460,2.633,461,2.633,462,2.567,463,2.633,464,2.567,465,2.633,466,2.567,467,3.421,468,2.633,469,2.633,470,2.633,471,3.448,472,2.633,473,2.567,474,2.633,475,2.633,476,2.186,477,2.633,478,3.922,479,2.633,480,2.567,481,2.633,482,2.633,483,2.505,484,2.633,485,2.567,486,2.633,487,2.633,488,2.567,489,2.633,490,2.567,491,2.633,492,2.633,493,2.633,494,2.633,495,2.567,496,2.633,497,2.567,498,3.034,499,2.335,500,3.421,501,2.567,502,2.567,503,2.633,504,2.633,505,2.567,506,2.633,940,6.556,1495,4.519,3060,5.548,3061,6.421,3062,8.007,3063,8.007,3064,7.132,3065,8.007,3066,8.007,3067,8.007]],["title/injectables/GetActiveRiskWeightsUseCase.html",[0,0.191,1588,3.9]],["body/injectables/GetActiveRiskWeightsUseCase.html",[0,0.326,2,1.362,3,0.088,4,0.078,5,0.088,9,0.059,10,0.379,11,1.228,12,1.296,23,0.946,29,0.927,31,0.693,32,0.007,38,0.126,42,1.09,43,1.071,64,0.704,65,1.148,67,0.829,75,2.176,78,3.113,79,1.148,80,1.09,81,0.088,82,0.622,97,0.782,125,0.005,126,0.005,829,1.462,1193,3.446,1197,4.936,1198,3.506,1563,7.161,1588,6.662,1589,7.161,1590,7.79,1591,6.003,2086,5.148,3068,5.994,3069,5.994,3070,7.247,3071,5.994,3072,4.859,3073,4.233,3074,6.729]],["title/injectables/GetAppInfoUseCase.html",[0,0.191,1963,3.9]],["body/injectables/GetAppInfoUseCase.html",[0,0.327,2,1.366,3,0.106,4,0.078,5,0.088,7,3.686,9,0.059,10,0.38,11,1.23,13,5.722,23,0.947,29,0.929,31,0.695,32,0.007,38,0.153,42,1.093,43,1.074,44,6.675,64,0.732,65,1.152,67,0.832,74,4.634,76,4.875,79,1.152,80,1.093,81,0.088,82,0.624,86,6.014,97,0.785,125,0.005,126,0.005,829,1.465,1193,3.451,1198,3.51,1963,6.675,1999,6.014,3075,7.171,3076,6.014,3077,6.751,3078,6.014,3079,6.751,3080,6.751,3081,4.875]],["title/injectables/GetCompanyByRucUseCase.html",[0,0.191,3082,4.243]],["body/injectables/GetCompanyByRucUseCase.html",[0,0.325,2,1.355,3,0.087,4,0.078,5,0.087,9,0.059,10,0.378,11,1.225,12,1.294,23,0.943,29,0.924,31,0.689,32,0.007,36,0.906,37,0.565,38,0.152,39,0.501,42,1.084,43,1.065,64,0.702,65,1.142,67,0.825,75,2.165,78,3.098,79,1.142,80,1.084,81,0.087,82,0.619,97,0.778,125,0.005,126,0.005,524,0.51,552,4.052,732,4.626,829,1.457,1193,3.439,1197,4.925,1198,3.13,2084,5.122,2839,4.835,2844,4.835,3082,7.225,3083,8.727,3084,6.695,3085,8.111,3086,6.695,3087,7.225,3088,6.695,3089,6.695]],["title/injectables/GetKpisUseCase.html",[0,0.191,3090,4.243]],["body/injectables/GetKpisUseCase.html",[0,0.328,2,1.378,3,0.089,4,0.079,5,0.089,9,0.06,10,0.382,11,1.234,23,0.952,29,0.934,31,0.701,32,0.007,38,0.153,42,1.103,43,1.083,64,0.734,65,1.162,67,0.839,79,1.162,80,1.103,81,0.089,82,0.629,97,0.791,125,0.005,126,0.005,829,1.472,1193,3.464,1198,3.52,2088,5.574,3075,7.197,3081,4.916,3090,7.298,3091,6.808,3092,5.326,3093,6.808,3094,8.193,3095,6.808,3096,6.808,3097,4.916,3098,6.808,3099,6.808]],["title/injectables/GetProfileUseCase.html",[0,0.191,1688,3.9]],["body/injectables/GetProfileUseCase.html",[0,0.324,2,1.35,3,0.087,4,0.077,5,0.087,9,0.059,10,0.377,11,1.224,23,0.941,24,2.275,29,0.922,31,0.687,32,0.007,36,0.903,37,0.563,38,0.163,39,0.499,42,1.081,43,1.062,64,0.729,65,1.139,67,0.822,79,1.139,80,1.081,81,0.087,82,0.617,97,0.776,125,0.005,126,0.005,524,0.509,829,1.454,1193,3.434,1198,3.124,1630,3.013,1688,6.628,2081,4.819,2159,4.58,2170,4.039,2173,5.105,3081,4.819,3100,8.714,3101,6.673,3102,7.135,3103,8.095,3104,6.673,3105,6.628,3106,6.673,3107,5.464,3108,6.673]],["title/classes/GetSessionUseCase.html",[82,0.44,2682,3.9]],["body/classes/GetSessionUseCase.html",[3,0.087,4,0.078,5,0.087,9,0.059,12,0.992,23,0.943,29,0.924,31,0.689,32,0.007,36,1.098,37,0.685,38,0.174,39,0.606,64,0.702,71,3.447,75,2.165,81,0.087,82,0.619,97,0.778,125,0.005,126,0.005,524,0.552,1193,3.439,1198,3.367,1202,3.575,1236,4.736,1530,2.012,1774,4.052,1931,4.368,1935,5.49,1939,4.736,2003,4.052,2011,4.212,2146,3.351,2682,6.642,2957,5.964,2958,5.122,2960,4.835,3075,7.145,3109,6.695,3110,6.695,3111,6.695]],["title/injectables/GuestGuardService.html",[0,0.191,3112,4.243]],["body/injectables/GuestGuardService.html",[0,0.322,2,1.333,3,0.086,4,0.076,5,0.086,9,0.058,10,0.374,11,1.321,23,0.933,29,0.987,31,0.678,32,0.007,42,1.301,43,1.278,64,0.697,65,1.124,67,0.811,79,1.124,80,1.067,81,0.104,82,0.609,84,1.245,97,1.007,125,0.005,126,0.005,143,2.09,645,3.391,810,2.457,842,5.674,866,2.711,878,5.052,1630,3.912,1681,4.689,1685,3.845,1687,4.143,1714,5.393,2151,7.386,2155,6.144,2156,5.393,3112,7.153,3113,5.867,3114,6.586,3115,6.586,3116,6.586,3117,6.586,3118,5.867,3119,5.867]],["title/components/HeaderComponent.html",[127,1.512,480,2.204]],["body/components/HeaderComponent.html",[3,0.102,4,0.042,5,0.047,7,4.06,9,0.032,10,0.248,11,1.102,12,0.941,16,1.254,23,0.619,29,1.05,31,0.808,32,0.007,36,0.487,37,0.536,38,0.14,39,0.269,42,1.028,43,1.01,64,0.632,65,0.613,67,0.443,81,0.047,82,0.332,97,0.738,115,3.154,119,1.851,125,0.004,126,0.004,127,2.015,128,1.664,129,2.406,130,1.706,131,3.225,132,1.706,133,1.706,138,1.585,141,4.556,142,2.529,143,1.691,144,2.529,145,3.013,147,3.268,148,3.352,150,2.667,153,3.962,157,2.447,182,1.623,185,1.752,186,1.752,189,3.962,197,3.93,203,2.944,211,2.099,241,3.225,246,4.416,247,3.352,249,2.615,260,5.149,263,2.262,287,2.358,304,2.262,310,3.352,313,2.262,314,2.262,319,3.352,320,2.262,324,3.352,325,3.225,334,2.358,376,2.751,386,2.262,449,1.706,450,2.529,451,2.466,452,1.706,453,3.332,454,1.706,455,1.706,456,1.664,457,1.706,458,1.664,459,1.706,460,1.706,461,1.706,462,1.664,463,1.706,464,1.664,465,1.706,466,1.664,467,2.529,468,1.706,469,1.706,470,1.706,471,2.733,472,1.706,473,1.664,474,1.706,475,1.706,476,1.417,477,1.706,478,1.664,479,1.706,480,3.248,481,1.706,482,1.706,483,1.623,484,1.706,485,1.664,486,1.706,487,1.706,488,1.664,489,1.706,490,1.664,491,1.706,492,1.706,493,1.706,494,1.706,495,1.664,496,1.706,497,1.664,498,2.242,499,1.513,500,2.529,501,1.664,502,1.664,503,1.706,504,1.706,505,1.664,506,1.706,583,2.468,631,1.23,645,1.851,794,2.733,810,2.148,863,3.352,866,2.889,1152,2.944,1184,4.363,1203,1.331,1224,3.657,1332,3.842,1407,2.176,1465,2.944,1495,3.007,1617,4.358,1629,2.596,1642,3.848,1643,5.655,1647,4.746,1683,2.596,1712,2.596,2198,2.751,2204,4.857,2205,3.203,2229,2.944,2295,4.746,2351,3.657,2357,4.076,2372,5.371,2395,4.076,2399,4.746,2748,4.746,2790,2.468,2847,2.944,2856,4.363,2880,4.746,3029,2.596,3064,3.203,3120,3.595,3121,6.348,3122,5.328,3123,7.02,3124,7.02,3125,5.748,3126,7.02,3127,5.328,3128,7.496,3129,7.496,3130,6.348,3131,5.198,3132,6.348,3133,6.348,3134,6.348,3135,3.595,3136,3.595,3137,3.595,3138,3.595,3139,5.328,3140,5.328,3141,3.595,3142,3.595,3143,4.363,3144,3.595,3145,5.328,3146,6.348,3147,3.595,3148,4.746,3149,3.595,3150,3.595,3151,3.595,3152,3.595,3153,3.595,3154,3.595,3155,3.595,3156,3.203,3157,3.595,3158,3.595,3159,3.595,3160,3.595,3161,3.203,3162,3.203,3163,5.328,3164,4.746,3165,5.655,3166,3.595,3167,3.203,3168,5.328,3169,3.595,3170,3.595,3171,3.595,3172,3.203,3173,3.595,3174,2.751,3175,3.595,3176,3.595,3177,3.595,3178,3.595,3179,3.595,3180,3.595,3181,3.595,3182,5.328,3183,3.657,3184,3.595,3185,3.595,3186,5.328,3187,3.595,3188,5.328,3189,5.328,3190,5.328,3191,5.328,3192,4.076,3193,3.595,3194,2.468,3195,3.595,3196,3.595]],["title/interfaces/ImageData.html",[762,0.139,2129,2.603]],["body/interfaces/ImageData.html",[3,0.067,4,0.06,5,0.067,9,0.046,10,0.32,32,0.007,37,0.436,38,0.129,81,0.124,125,0.005,126,0.005,159,1.802,267,2.964,272,2.83,411,3.264,416,2.738,428,1.993,524,0.585,588,1.306,741,2.242,762,0.275,764,0.96,782,2.036,1119,1.734,1218,2.332,1221,2.569,1223,1.838,1225,2.067,1536,2.802,1659,2.585,1888,2.174,1892,2.08,1894,3.35,1895,3.35,2038,2.585,2095,4.226,2096,2.823,2097,2.823,2098,2.915,2099,3.646,2100,2.915,2101,3.646,2102,2.915,2103,3.759,2104,3.031,2105,3.182,2106,3.759,2107,3.031,2108,3.182,2109,3.264,2110,3.759,2111,3.264,2112,3.759,2113,3.759,2114,3.759,2115,3.759,2116,2.738,2117,2.915,2118,2.915,2119,2.915,2120,3.646,2121,2.915,2122,2.659,2123,2.915,2124,3.759,2125,2.659,2126,3.442,2127,3.759,2128,3.646,2129,4.506,2130,4.653,2131,4.226,2132,2.915,2133,4.226,2134,2.659,2135,2.08,2136,2.915,2137,2.915,2138,2.39,2139,3.182,2140,3.182,2141,3.182,2142,3.105,2143,3.182,2144,2.451,2145,2.823,2146,2.585,2147,2.915,2148,2.659]],["title/interfaces/Kpis.html",[762,0.139,3092,2.781]],["body/interfaces/Kpis.html",[3,0.084,4,0.108,5,0.084,9,0.057,10,0.368,32,0.007,38,0.175,81,0.103,125,0.005,126,0.005,524,0.554,588,1.326,700,4.919,762,0.23,764,1.195,800,4.216,1744,5.414,2336,4.044,2398,7.324,3092,4.62,3194,4.413,3197,5.727,3198,7.324,3199,7.324,3200,7.324,3201,7.324,3202,7.324,3203,6.844,3204,4.643,3205,5.727,3206,5.727,3207,4.413,3208,5.727,3209,5.264,3210,5.727,3211,5.727,3212,5.727,3213,5.727]],["title/injectables/KpisApiService.html",[0,0.191,2094,3.644]],["body/injectables/KpisApiService.html",[0,0.312,2,1.271,3,0.082,4,0.09,5,0.082,9,0.055,10,0.363,11,1.191,12,1.315,23,0.906,24,2.214,29,0.967,31,0.646,32,0.007,36,0.85,37,0.53,38,0.159,39,0.469,42,1.017,43,0.999,64,0.748,67,0.774,71,3.233,75,2.03,79,1.071,80,1.017,81,0.082,82,0.58,84,1.475,85,1.789,97,0.73,125,0.005,126,0.005,136,3.143,230,3.415,829,1.401,896,3.009,1520,3.358,1523,3.14,1527,3.572,1528,2.704,1529,2.704,1530,1.887,1531,2.475,1532,2.528,1536,1.993,1744,3.801,1812,3.801,2003,3.801,2004,5.142,2011,3.95,2094,5.966,3092,4.553,3097,5.632,3214,7.902,3215,6.28,3216,6.407,3217,7.799,3218,6.28,3219,6.28,3220,6.28,3221,6.28,3222,6.28]],["title/injectables/KpisMockService.html",[0,0.191,2093,3.644]],["body/injectables/KpisMockService.html",[0,0.329,2,1.382,3,0.089,4,0.095,5,0.089,9,0.06,23,0.954,24,2.298,29,0.778,31,0.703,32,0.007,38,0.154,64,0.709,67,0.842,71,3.517,75,2.209,79,1.165,80,1.106,81,0.089,82,0.631,97,0.794,125,0.005,126,0.005,136,3.419,202,3.419,631,2.338,829,1.475,950,6.085,2093,6.281,3092,3.988,3097,5.929,3194,4.689,3198,5.593,3199,5.593,3200,5.593,3201,5.593,3202,5.593,3203,5.226,3204,4.933,3207,4.689,3214,7.313,3216,6.594,3223,6.831,3224,6.831,3225,6.831,3226,6.831,3227,5.593,3228,6.831]],["title/interfaces/KpisPort.html",[762,0.139,3097,3.44]],["body/interfaces/KpisPort.html",[3,0.096,4,0.086,5,0.096,9,0.065,23,1,29,0.842,31,0.761,32,0.006,38,0.138,64,0.595,81,0.096,125,0.006,126,0.006,762,0.215,764,1.374,829,1.546,3092,4.316,3097,6.212,3216,6.766,3229,7.393,3230,7.393,3231,7.393]],["title/interfaces/KpisResponseDTO.html",[762,0.139,3232,3.9]],["body/interfaces/KpisResponseDTO.html",[0,0.272,3,0.066,4,0.059,5,0.066,9,0.045,10,0.317,11,1.15,12,1.008,14,1.938,24,1.776,29,0.579,32,0.007,38,0.153,39,0.682,64,0.659,65,0.867,67,0.626,79,0.867,80,0.823,81,0.088,82,0.47,83,2.328,84,1.697,85,1.938,89,2.284,90,2.863,97,1.021,119,2.616,125,0.005,126,0.005,230,2.046,411,2.411,524,0.398,588,1.283,661,2.411,664,2.543,671,2.966,762,0.148,764,0.945,773,3.502,780,2.012,829,1.378,1021,3.332,1067,2.966,1122,3.196,1200,1.739,1494,3.887,1520,2.188,1523,2.046,1525,2.351,1527,2.046,1528,2.188,1529,3.302,1530,1.527,1531,2.002,1532,2.046,1601,4.279,1708,3.887,1748,3.669,1784,4.16,2691,3.971,3092,4.477,3174,3.887,3183,3.488,3194,4.669,3204,4.912,3207,4.669,3216,3.669,3227,5.57,3232,6.99,3233,4.526,3234,7.605,3235,7.605,3236,7.605,3237,7.605,3238,5.081,3239,5.081,3240,4.16,3241,4.526,3242,7.827,3243,7.605,3244,4.526,3245,4.526,3246,4.526,3247,6.83,3248,4.526,3249,4.526,3250,4.526,3251,4.526,3252,6.059,3253,4.526,3254,4.526,3255,4.526,3256,4.526,3257,4.526,3258,4.526,3259,4.526,3260,4.526,3261,4.16,3262,4.526,3263,4.526,3264,4.526,3265,4.526,3266,4.526,3267,4.526,3268,4.526,3269,4.526,3270,6.705,3271,4.526]],["title/injectables/KpisService.html",[0,0.191,3240,3.9]],["body/injectables/KpisService.html",[0,0.267,2,0.997,3,0.064,4,0.057,5,0.064,9,0.043,10,0.31,11,1.324,12,1.291,14,1.898,23,0.774,24,2.111,29,0.963,31,0.507,32,0.007,38,0.125,42,1.31,43,1.287,64,0.651,65,0.841,67,0.607,79,0.841,80,0.798,81,0.087,82,0.455,83,2.28,84,1.684,85,1.898,89,2.237,90,2.804,97,1.012,119,2.536,125,0.004,126,0.004,230,3.039,411,2.338,524,0.288,588,1.095,661,2.338,664,2.466,671,2.876,762,0.143,773,3.43,780,2.162,829,1.518,1021,3.231,1067,2.876,1122,4.748,1200,1.686,1494,3.769,1520,3.25,1523,2.682,1525,3.083,1527,1.983,1528,2.121,1529,3.25,1530,1.48,1531,1.941,1532,1.983,1601,3.099,1708,3.769,1748,3.557,1784,4.034,2691,3.89,3092,4.407,3174,3.769,3183,3.381,3194,4.573,3204,4.811,3207,4.573,3216,5.84,3227,5.455,3232,6.917,3233,4.388,3234,5.934,3235,5.934,3236,5.934,3237,5.934,3240,5.455,3241,6.724,3242,7.756,3243,7.525,3244,4.388,3245,4.388,3246,4.388,3247,6.724,3248,4.388,3249,4.388,3250,4.388,3251,4.388,3252,5.934,3253,4.388,3254,4.388,3255,4.388,3256,4.388,3257,4.388,3258,4.388,3259,4.388,3260,4.388,3261,4.034,3262,4.388,3263,4.388,3264,4.388,3265,4.388,3266,4.388,3267,4.388,3268,4.388,3269,4.388,3270,6.622,3271,4.388,3272,4.926,3273,4.926,3274,4.926,3275,4.926,3276,4.926]],["title/interfaces/KpisSummaryDisplay.html",[762,0.139,3209,3.9]],["body/interfaces/KpisSummaryDisplay.html",[3,0.085,4,0.109,5,0.085,9,0.057,10,0.371,32,0.007,38,0.173,81,0.104,125,0.005,126,0.005,524,0.575,588,1.215,700,4.974,762,0.232,764,1.209,800,4.264,1744,5.435,2336,4.09,2398,7.353,3092,3.796,3194,4.463,3197,5.791,3198,5.323,3199,5.323,3200,5.323,3201,5.323,3202,5.323,3203,6.87,3204,4.695,3205,5.791,3206,5.791,3207,4.463,3208,5.791,3209,6.524,3210,7.999,3211,7.999,3212,7.999,3213,7.999]],["title/injectables/LanguageService.html",[0,0.191,1689,3.644]],["body/injectables/LanguageService.html",[0,0.247,2,0.891,3,0.057,4,0.051,5,0.08,9,0.039,10,0.287,11,1.358,12,1.28,19,5.292,23,0.716,24,1.857,25,2.886,29,1.045,31,0.907,32,0.007,36,1.043,37,0.651,38,0.152,39,0.576,42,1.314,43,1.374,64,0.573,65,0.751,67,0.542,79,0.751,80,0.713,81,0.057,82,0.407,83,2.435,84,1.633,85,1.254,89,2.389,97,1.004,125,0.004,126,0.004,157,2.217,185,2.144,186,2.144,197,3.561,249,1.535,524,0.568,563,2.482,655,5.567,664,3.561,665,3.603,780,1.676,829,1.278,1529,1.895,1530,1.322,1601,3.878,1623,6.623,1662,6.402,1663,5.146,1689,4.716,1700,5.491,1965,5.292,2058,5.323,2181,4.452,2539,5.491,3277,3.92,3278,7.115,3279,7.115,3280,7.709,3281,6.165,3282,5.491,3283,5.491,3284,7.709,3285,4.401,3286,4.401,3287,4.401,3288,6.165,3289,4.401,3290,6.165,3291,5.491,3292,4.401,3293,5.491,3294,4.401,3295,4.401,3296,6.165,3297,4.401,3298,4.401,3299,4.401,3300,6.165,3301,4.401,3302,4.401,3303,3.603,3304,3.92,3305,6.165,3306,6.165,3307,5.048,3308,6.165,3309,6.165,3310,6.165,3311,6.165,3312,6.165,3313,6.165,3314,6.165,3315,7.709,3316,4.401,3317,4.401,3318,4.401,3319,4.401,3320,4.401,3321,4.401,3322,4.401,3323,4.401,3324,3.92,3325,4.401,3326,4.401,3327,4.401,3328,4.401,3329,3.603,3330,3.603]],["title/components/LazyChartComponent.html",[127,1.512,485,2.204]],["body/components/LazyChartComponent.html",[3,0.033,4,0.029,5,0.033,7,3.898,9,0.022,10,0.188,11,1.338,12,1.005,16,0.875,23,0.469,24,1.77,29,1.021,31,0.763,32,0.007,36,0.685,37,0.536,38,0.158,39,0.6,42,0.938,43,0.922,64,0.325,65,0.428,67,0.309,81,0.033,82,0.232,83,2.439,84,1.695,85,1.149,89,2.277,90,1.055,97,0.862,108,1.291,110,1.919,115,2.802,125,0.003,126,0.003,127,1.605,128,1.16,129,1.82,130,1.914,131,3.061,132,1.19,133,1.19,136,2.018,138,1.105,139,2.138,140,2.138,141,4.362,142,1.914,143,2.353,144,1.914,145,2.4,157,2.31,181,1.329,182,1.132,189,3.827,237,3.181,248,1.721,249,1.765,251,3.869,256,1.577,257,1.518,323,1.577,339,1.577,341,1.577,362,1.645,386,1.577,389,1.577,391,0.702,434,3.178,436,1.577,442,1.577,449,1.19,450,1.914,451,1.866,452,1.19,453,2.75,454,1.19,455,1.19,456,1.16,457,1.19,458,1.16,459,1.19,460,1.19,461,1.19,462,1.16,463,1.19,464,1.16,465,1.19,466,1.16,467,1.914,468,1.19,469,1.19,470,1.19,471,2.178,472,1.19,473,1.16,474,1.19,475,1.19,476,0.988,477,1.19,478,1.16,479,1.19,480,1.16,481,1.19,482,1.19,483,1.132,484,1.19,485,3.138,486,2.4,487,1.19,488,1.16,489,1.19,490,1.16,491,1.19,492,1.19,493,1.19,494,1.19,495,1.16,496,1.19,497,1.16,498,1.697,499,1.055,500,1.914,501,1.16,502,1.16,503,1.19,504,1.19,505,1.16,506,1.19,524,0.339,563,1.765,581,1.415,588,0.339,631,1.731,648,3.302,671,1.464,703,2.953,725,3.085,761,3.383,780,0.591,834,6.603,862,3.317,863,1.577,866,2.384,883,1.721,896,2.236,906,5.161,913,5.161,980,3.993,998,5.353,1021,1.645,1022,4.744,1023,2.234,1031,3.302,1036,2.768,1067,3.706,1136,1.577,1301,3.592,1336,4.505,1347,4.433,1348,5.161,1376,4.505,1428,3.592,1433,4.505,1434,2.234,1436,2.053,1437,2.234,1703,3.317,1764,3.869,1896,3.167,1946,4.505,1956,3.592,1961,2.234,1962,2.234,1965,2.768,1975,3.592,2058,4.163,2186,3.592,2315,6.57,2351,2.768,2407,1.919,2451,3.592,2521,3.592,2549,1.811,2691,3.706,3331,9.016,3332,9.016,3333,2.508,3334,4.032,3335,4.032,3336,3.592,3337,8.174,3338,4.032,3339,4.032,3340,4.505,3341,4.032,3342,4.032,3343,4.032,3344,4.032,3345,3.592,3346,4.032,3347,4.032,3348,4.141,3349,5.057,3350,5.057,3351,5.057,3352,5.057,3353,5.057,3354,5.057,3355,5.057,3356,5.057,3357,5.057,3358,4.032,3359,5.794,3360,5.794,3361,4.032,3362,4.032,3363,5.057,3364,5.057,3365,2.508,3366,2.508,3367,2.508,3368,4.032,3369,2.508,3370,2.508,3371,4.032,3372,7.65,3373,6.348,3374,6.348,3375,2.508,3376,2.508,3377,2.508,3378,2.508,3379,2.508,3380,2.508,3381,4.032,3382,2.508,3383,4.032,3384,2.508,3385,4.032,3386,2.508,3387,2.508,3388,2.508,3389,2.508,3390,2.508,3391,2.508,3392,2.508,3393,5.057,3394,2.508,3395,2.234,3396,4.032,3397,2.234,3398,5.057,3399,4.032,3400,5.057,3401,2.508,3402,2.508,3403,2.508,3404,4.032,3405,2.234,3406,2.508,3407,2.508,3408,2.508,3409,6.348,3410,2.508,3411,5.057,3412,2.508,3413,4.032,3414,2.508,3415,2.508,3416,2.508,3417,2.508,3418,2.508,3419,2.508,3420,2.508,3421,2.508,3422,2.508,3423,2.508,3424,2.508,3425,2.508,3426,2.508,3427,5.057,3428,2.508,3429,2.508,3430,2.508,3431,2.508,3432,1.811,3433,2.508,3434,2.508,3435,4.032,3436,2.508,3437,2.508,3438,4.032,3439,2.508,3440,2.508,3441,4.032,3442,5.794,3443,5.794,3444,2.508,3445,2.508,3446,4.032,3447,2.508,3448,2.508,3449,4.032,3450,2.508,3451,4.032,3452,4.032,3453,2.508,3454,2.508,3455,2.234,3456,2.508,3457,2.508,3458,2.508,3459,4.032,3460,5.057,3461,2.508,3462,2.508,3463,2.508,3464,2.508,3465,4.032,3466,4.505,3467,2.508,3468,2.508,3469,2.508,3470,2.508,3471,2.508,3472,2.508,3473,2.508,3474,4.032,3475,2.508,3476,2.508,3477,2.508,3478,2.508,3479,2.508,3480,2.508]],["title/injectables/ListCompaniesUseCase.html",[0,0.191,553,3.9]],["body/injectables/ListCompaniesUseCase.html",[0,0.317,2,1.301,3,0.084,4,0.075,5,0.084,9,0.057,10,0.368,11,1.204,12,1.271,23,0.92,29,0.902,31,0.662,32,0.007,36,0.87,37,0.668,38,0.172,39,0.481,42,1.041,43,1.023,64,0.72,65,1.097,67,0.792,75,2.079,78,2.975,79,1.097,80,1.041,81,0.084,82,0.594,97,0.747,125,0.005,126,0.005,232,1.768,509,1.898,511,3.218,512,4.466,524,0.462,532,3.132,552,3.891,553,6.479,565,2.706,567,2.706,584,2.706,585,2.706,588,1.071,779,2.559,829,1.422,1193,3.378,1197,4.838,1198,3.053,1200,2.2,1203,2.381,1208,2.333,1209,2.534,1214,6.054,1929,5.727,1933,5.727,2084,4.919,2839,4.643,3087,7.049,3481,8.572,3482,6.429,3483,5.727]],["title/interfaces/ListFilesResponse.html",[762,0.139,3013,2.996]],["body/interfaces/ListFilesResponse.html",[3,0.083,4,0.074,5,0.111,9,0.056,10,0.367,32,0.007,38,0.16,64,0.515,72,4.025,73,4.238,81,0.111,125,0.005,126,0.005,232,1.76,283,3.375,392,3.873,410,4.312,509,1.889,516,3.596,524,0.574,588,1.264,741,1.855,762,0.249,764,1.19,780,2.104,810,2.414,829,1.604,1082,3.736,1083,4.453,1084,4.775,1146,4.312,1147,4.062,1202,2.522,1208,2.322,1209,2.522,1225,1.923,1536,2.031,1792,2.961,2135,2.576,2996,5.239,2999,4.392,3003,4.392,3007,4.392,3008,4.392,3009,4.392,3010,4.392,3011,4.392,3012,4.392,3013,4.963]],["title/interfaces/ListFilesResponse-1.html",[391,1.112,762,0.116,3013,2.499]],["body/interfaces/ListFilesResponse-1.html",[0,0.26,3,0.062,4,0.055,5,0.104,9,0.042,10,0.302,11,0.912,12,0.963,17,4.482,24,2.079,32,0.007,37,0.401,38,0.149,39,0.486,64,0.693,65,0.81,67,0.585,73,3.779,79,0.81,80,0.769,81,0.096,82,0.439,84,1.742,85,1.352,97,0.969,125,0.004,126,0.004,138,2.863,230,1.911,232,2.294,283,3.01,391,1.818,392,2.873,410,3.551,509,1.917,516,3.206,524,0.548,534,3.113,563,1.656,588,1.247,631,1.624,646,3.113,664,2.376,741,1.376,762,0.189,764,0.882,780,1.965,794,2.797,810,1.988,829,1.431,896,1.832,1082,5.028,1083,4.18,1084,3.932,1146,3.551,1147,3.344,1200,2.725,1202,3.138,1208,2.358,1209,1.871,1225,1.426,1285,2.679,1293,2.376,1520,2.044,1523,1.911,1525,2.196,1527,1.911,1528,2.044,1529,2.797,1530,1.426,1531,1.871,1532,1.911,1536,2.647,1538,3.666,1541,2.679,1544,2.679,1552,3.813,1554,2.594,1555,4.048,1744,2.873,1792,2.196,1800,2.873,1802,2.986,2083,3.258,2125,2.444,2135,1.911,2190,2.516,2594,2.873,2999,3.258,3003,3.258,3007,3.258,3008,3.258,3009,3.258,3010,3.258,3011,3.258,3012,3.258,3013,4.086,3014,3.887,3021,3.428,3022,3.887,3023,3.887,3024,3.887,3025,3.887,3026,3.258,3027,3.258,3028,3.632,3029,3.428,3030,3.887,3031,5.319,3032,3.428,3033,3.887,3034,3.887,3035,5.319,3036,3.887,3037,3.887,3038,3.887,3039,3.887,3040,3.887,3041,3.258,3042,3.887,3043,3.887,3044,3.887,3045,3.887,3046,3.887,3047,3.887,3048,3.887,3049,3.887,3050,3.887,3051,3.887,3052,3.887,3053,5.319,3054,3.887,3055,3.887,3056,3.887,3057,5.319,3058,3.632,3059,3.887]],["title/injectables/ListFilesUseCase.html",[0,0.191,2986,3.9]],["body/injectables/ListFilesUseCase.html",[0,0.318,2,1.309,3,0.084,4,0.075,5,0.084,9,0.057,10,0.37,11,1.207,12,1.274,16,2.999,23,0.923,29,0.905,31,0.666,32,0.007,36,0.876,37,0.546,38,0.172,39,0.484,42,1.048,43,1.03,50,6.078,64,0.722,65,1.104,67,0.797,72,4.07,73,3.071,75,2.092,77,4.441,78,2.994,79,1.104,80,1.048,81,0.084,82,0.598,97,0.752,125,0.005,126,0.005,232,1.779,410,3.536,509,1.91,524,0.378,588,1.164,779,2.569,829,1.427,1082,3.778,1083,3.652,1084,3.916,1146,3.536,1147,3.331,1193,3.388,1198,3.065,1200,2.214,1203,2.396,1208,2.348,1209,2.55,1214,6.078,2986,6.505,3484,7.039,3485,5.763,3486,6.47,3487,5.763,3488,6.47]],["title/injectables/ListSessionFilesUseCase.html",[0,0.191,3489,3.9]],["body/injectables/ListSessionFilesUseCase.html",[0,0.325,2,1.355,3,0.087,4,0.078,5,0.087,9,0.059,10,0.378,11,1.225,12,1.294,16,3.045,23,0.943,29,0.924,31,0.689,32,0.007,36,0.906,37,0.565,38,0.152,39,0.501,42,1.084,43,1.065,50,6.206,64,0.702,65,1.142,67,0.825,72,4.212,73,3.178,75,2.165,77,4.596,78,3.098,79,1.142,80,1.084,81,0.087,82,0.619,97,0.778,125,0.005,126,0.005,498,3.673,524,0.51,829,1.457,1193,3.439,1198,3.13,1199,6.642,1202,2.638,3484,7.145,3485,5.964,3487,5.964,3489,6.642,3490,6.695,3491,6.695]],["title/classes/ListSessionsUseCase.html",[82,0.44,2681,3.9]],["body/classes/ListSessionsUseCase.html",[3,0.086,4,0.077,5,0.086,9,0.058,12,0.98,23,0.935,29,0.917,31,0.68,32,0.007,36,1.089,37,0.679,38,0.178,39,0.602,64,0.698,71,3.402,75,2.136,81,0.086,82,0.611,97,0.768,125,0.005,126,0.005,232,1.817,509,1.95,524,0.507,588,1.089,779,2.602,1193,3.419,1198,3.348,1200,3.09,1203,2.447,1213,5.886,1236,4.698,1530,1.986,1774,3.999,1931,4.343,1935,5.465,1939,4.698,2003,3.999,2011,4.157,2144,3.136,2681,6.589,2958,5.055,2960,4.772,3492,8.677,3493,6.608,3494,6.608,3495,6.608]],["title/injectables/ListUsersUseCase.html",[0,0.191,1856,3.9]],["body/injectables/ListUsersUseCase.html",[0,0.318,2,1.305,3,0.084,4,0.075,5,0.084,9,0.057,10,0.369,11,1.205,12,1.273,23,0.921,29,0.903,31,0.664,32,0.007,36,0.873,37,0.544,38,0.172,39,0.482,42,1.045,43,1.026,64,0.721,65,1.1,67,0.795,75,2.085,78,2.984,79,1.1,80,1.045,81,0.084,82,0.596,97,0.75,125,0.005,126,0.005,232,1.774,509,1.904,524,0.377,565,2.714,567,2.714,584,2.714,585,2.714,588,1.073,779,2.564,829,1.424,1193,3.383,1197,4.845,1198,3.059,1200,2.207,1203,2.388,1208,2.341,1209,2.542,1214,6.066,1221,2.01,1287,5.725,1289,3.904,1290,3.32,1291,4.23,1788,3.669,1789,3.061,1856,6.492,3483,5.745,3496,8.585,3497,6.45,3498,6.45,3499,6.45]],["title/injectables/LoginFacade.html",[0,0.191,3500,3.9]],["body/injectables/LoginFacade.html",[0,0.299,2,1.186,3,0.076,4,0.068,5,0.076,9,0.052,10,0.348,11,1.283,12,1.435,14,2.341,23,0.868,24,2.145,29,1.018,31,0.603,32,0.007,36,0.793,37,0.495,38,0.14,39,0.438,42,1.401,43,1.377,46,3.844,58,3.544,64,0.697,65,1,66,2.31,67,0.722,79,1,80,0.949,81,0.076,82,0.542,83,2.006,84,1.108,85,1.669,89,1.968,90,3.143,97,0.868,99,3.422,101,4.52,108,3.017,125,0.005,126,0.005,434,4.114,554,3.203,558,3.547,573,3.547,793,2.555,829,1.342,1630,3.71,1681,4.36,1685,3.422,1686,5.221,1687,3.687,1730,4.799,1764,4.484,1767,5.221,1866,4.799,2161,5.052,2164,4.799,2165,5.052,2171,3.422,2180,5.221,3500,6.114,3501,5.861,3502,8.218,3503,5.861,3504,5.861,3505,5.861,3506,7.467,3507,5.861,3508,5.861,3509,4.799,3510,5.861,3511,5.861,3512,5.861,3513,5.221,3514,5.861,3515,5.861,3516,5.861,3517,5.861,3518,5.861,3519,5.861,3520,4.232]],["title/components/LoginPage.html",[127,1.512,488,2.204]],["body/components/LoginPage.html",[3,0.048,4,0.043,5,0.048,7,4.07,9,0.033,10,0.253,11,1.205,12,1.405,14,2.396,15,4.657,16,1.289,17,3.904,23,0.632,24,1.684,29,0.978,31,0.559,32,0.007,37,0.459,42,1.327,43,1.304,48,3.925,52,4.159,54,5.824,58,2.58,64,0.66,65,0.63,66,1.456,67,0.455,68,2.667,69,3.024,70,2.236,81,0.048,82,0.341,83,1.264,85,1.052,89,1.24,95,3.024,97,0.429,115,3.179,125,0.004,126,0.004,127,2.047,128,1.709,129,2.454,130,1.753,132,1.753,133,1.753,138,1.628,139,2.881,140,2.881,141,4.569,142,2.58,143,1.725,144,2.58,145,3.061,146,4.657,147,3.32,150,2.721,152,5.137,157,1.151,165,3.925,181,1.958,182,1.668,185,1.8,186,1.8,197,4.793,224,4.842,449,1.753,450,2.58,451,2.515,452,1.753,453,3.376,454,1.753,455,1.753,456,1.709,457,1.753,458,1.709,459,1.753,460,1.753,461,1.753,462,1.709,463,1.753,464,1.709,465,1.753,466,1.709,467,2.58,468,1.753,469,1.753,470,1.753,471,2.777,472,1.753,473,1.709,474,1.753,475,1.753,476,1.456,477,1.753,478,1.709,479,1.753,480,1.709,481,1.753,482,1.753,483,1.668,484,1.753,485,1.709,486,1.753,487,1.753,488,3.291,489,1.753,490,1.709,491,1.753,492,1.753,493,1.753,494,1.753,495,1.709,496,1.753,497,1.709,498,2.288,499,1.555,500,2.58,501,1.709,502,1.709,503,1.753,504,1.753,505,1.709,506,1.753,626,4.159,645,1.902,842,4.474,878,3.419,1292,2.324,1332,3.904,1407,2.236,1617,4.427,1788,2.984,1791,3.142,2161,3.174,2407,2.826,3307,3.024,3500,3.024,3521,3.694,3522,5.436,3523,5.745,3524,7.301,3525,6.336,3526,6.336,3527,3.694,3528,3.694,3529,3.694,3530,5.436,3531,3.694,3532,3.694,3533,4.842,3534,5.436,3535,3.694,3536,3.694,3537,3.694,3538,3.694,3539,3.694,3540,3.694,3541,3.29,3542,3.694,3543,3.29,3544,3.29,3545,3.694,3546,4.451,3547,5.436,3548,5.436,3549,5.436,3550,4.842,3551,4.842,3552,5.436,3553,5.436,3554,5.436,3555,4.842,3556,4.842,3557,5.436,3558,5.436,3559,5.436,3560,5.436]],["title/interfaces/LoginRequest.html",[762,0.139,2165,2.781]],["body/interfaces/LoginRequest.html",[3,0.081,4,0.072,5,0.081,9,0.055,10,0.361,31,0.799,32,0.007,38,0.158,39,0.661,81,0.118,125,0.005,126,0.005,524,0.588,741,1.807,762,0.265,764,1.158,794,3.64,1119,2.838,1221,2.418,1223,3.008,1226,3.125,1630,3.504,1788,4.439,1789,4.584,1791,4.434,1811,3.208,1896,3.406,2161,3.638,2165,4.531,2168,3.771,2170,3.771,2171,3.638,2172,3.771,2944,3.771,3561,4.5,3562,4.5,3563,4.5,3564,4.5,3565,4.086,3566,4.5]],["title/interfaces/LoginSuccessResponse.html",[762,0.139,2171,2.781]],["body/interfaces/LoginSuccessResponse.html",[3,0.082,4,0.073,5,0.082,9,0.056,10,0.364,31,0.804,32,0.007,38,0.174,81,0.119,125,0.005,126,0.005,524,0.584,741,1.826,762,0.266,764,1.171,779,2.872,794,3.658,1119,3.124,1221,2.435,1223,3.022,1226,3.146,1630,4.122,1788,4.306,1789,4.477,1791,3.807,1811,3.243,1896,3.443,2161,3.678,2165,3.678,2168,3.813,2170,3.813,2171,4.562,2172,3.813,2944,3.813,3561,4.549,3562,4.549,3563,4.549,3564,4.549,3565,4.131,3566,4.549]],["title/injectables/LoginUseCase.html",[0,0.191,3509,3.9]],["body/injectables/LoginUseCase.html",[0,0.324,2,1.348,3,0.087,4,0.077,5,0.087,9,0.059,10,0.377,11,1.223,12,1.291,23,0.94,24,2.273,29,0.921,31,0.686,32,0.007,36,0.902,37,0.562,38,0.163,39,0.498,42,1.079,43,1.06,64,0.729,65,1.137,67,0.821,79,1.137,80,1.079,81,0.087,82,0.616,97,0.774,125,0.005,126,0.005,793,2.28,829,1.453,1193,3.432,1198,3.12,2081,4.811,2159,4.573,2165,5.287,2171,3.89,2173,5.097,2923,6.187,3081,4.811,3102,7.13,3105,6.622,3107,5.455,3509,6.622,3567,6.662,3568,6.662,3569,6.662,3570,6.662]],["title/injectables/MessageManagerService.html",[0,0.191,2515,3.9]],["body/injectables/MessageManagerService.html",[0,0.225,2,0.781,3,0.05,4,0.045,5,0.05,9,0.034,10,0.261,11,0.929,12,0.981,14,2.198,23,0.652,29,1.005,31,0.893,32,0.007,36,1.175,37,0.733,38,0.165,39,0.649,42,0.625,43,0.614,64,0.532,65,0.658,67,0.475,79,0.658,80,0.625,81,0.05,82,0.357,84,1.373,97,0.936,119,2.89,125,0.004,126,0.004,143,1.225,157,2.509,159,2.534,199,3.681,202,4.262,211,3.277,249,1.347,267,2.961,428,2.978,471,1.662,476,3.521,516,2.26,524,0.541,563,1.958,588,0.895,682,4.596,741,2.335,866,1.588,1119,1.884,1158,4.596,1159,4.053,1163,4.294,1182,4.053,1203,1.429,1316,5.904,1335,5.416,1370,5,1408,2.787,1410,3.438,1454,3.16,1481,3.16,1659,2.81,1892,1.554,2328,5.297,2329,3.862,2332,5.983,2336,4.569,2337,3.853,2515,4.596,2599,5.416,2604,4.777,2605,3.16,2614,5,2615,5,2616,5.892,2617,5,2618,5,2619,5.416,2642,5.416,2765,5,2766,6.639,2767,6.728,2768,6.47,2783,4.596,2802,3.16,2817,3.438,2883,4.596,3183,3.853,3571,8.934,3572,3.438,3573,5,3574,6.615,3575,5.613,3576,5.613,3577,3.859,3578,8.514,3579,5.613,3580,3.859,3581,3.859,3582,3.859,3583,5.613,3584,3.859,3585,5.613,3586,3.859,3587,5,3588,3.859,3589,5.613,3590,5,3591,3.859,3592,3.859,3593,5.613,3594,3.859,3595,3.859,3596,5.613,3597,5.613,3598,3.859,3599,5.613,3600,3.859,3601,3.859,3602,3.859,3603,3.859,3604,7.263,3605,6.615,3606,3.859,3607,3.859,3608,6.615,3609,3.859,3610,3.859,3611,3.859,3612,3.859,3613,3.859,3614,5.613,3615,3.859,3616,3.859,3617,3.859,3618,7.263,3619,3.859,3620,3.859,3621,3.859,3622,3.859]],["title/interfaces/Model.html",[762,0.139,1892,1.918]],["body/interfaces/Model.html",[3,0.086,4,0.076,5,0.086,9,0.058,10,0.403,32,0.007,36,0.89,37,0.803,38,0.169,81,0.117,125,0.005,126,0.005,389,4.136,524,0.582,762,0.263,764,1.222,780,2.04,781,2.767,810,2.649,1884,4.513,1885,5.031,1886,4.312,1887,5.031,1888,2.767,1889,5.031,1890,5.031,1891,5.031,1892,3.869,1893,6.252,1894,3.203,1895,3.909,1896,3.594,1897,5.031,1898,5.031,1899,6.897]],["title/components/NotFoundPage.html",[127,1.512,490,2.204]],["body/components/NotFoundPage.html",[3,0.07,4,0.062,5,0.07,7,4.193,16,1.876,32,0.007,37,0.596,64,0.674,67,0.663,81,0.07,82,0.497,115,3.49,125,0.005,126,0.005,127,2.503,128,2.488,129,3.189,130,2.552,132,2.552,133,2.552,138,2.37,139,3.744,140,3.744,141,4.717,142,3.352,143,2.242,144,3.352,145,3.743,147,4.06,150,3.536,181,2.851,182,2.428,185,2.62,186,2.62,197,4.469,449,2.552,450,3.352,451,3.268,452,2.552,453,3.975,454,2.552,455,2.552,456,2.488,457,2.552,458,2.488,459,2.552,460,2.552,461,2.552,462,2.488,463,2.552,464,2.488,465,2.552,466,2.488,467,3.352,468,2.552,469,2.552,470,2.552,471,3.396,472,2.552,473,2.488,474,2.552,475,2.552,476,2.119,477,2.552,478,2.488,479,2.552,480,2.488,481,2.552,482,2.552,483,2.428,484,2.552,485,2.488,486,2.552,487,2.552,488,2.488,489,2.552,490,3.876,491,2.552,492,2.552,493,2.552,494,2.552,495,2.488,496,2.552,497,2.488,498,2.973,499,2.263,500,3.352,501,2.488,502,2.488,503,2.552,504,2.552,505,2.488,506,2.552,645,2.769,1390,5.404,1617,5.414,3546,5.783,3623,5.378,3624,5.378,3625,5.378,3626,7.063,3627,7.063,3628,7.063]],["title/interfaces/Paginated.html",[762,0.139,1208,1.729]],["body/interfaces/Paginated.html",[3,0.093,4,0.083,5,0.093,9,0.063,10,0.392,32,0.006,38,0.173,81,0.093,125,0.006,126,0.006,232,2.547,283,3.501,509,2.734,516,3.73,588,1.327,762,0.208,764,1.326,1208,3.057,1509,4.487,3629,7.132]],["title/interfaces/PaginatedApi.html",[762,0.139,1533,2.781]],["body/interfaces/PaginatedApi.html",[3,0.114,4,0.064,5,0.072,9,0.049,10,0.334,32,0.007,38,0.164,39,0.632,64,0.444,81,0.093,84,1.731,97,0.983,125,0.006,126,0.005,232,2.552,249,3.238,283,3.397,391,2.454,509,2.769,516,3.619,524,0.419,588,1.239,661,2.615,664,2.758,762,0.16,764,1.024,779,2.32,780,1.691,785,2.921,896,3.079,1082,3.217,1088,3.466,1200,1.886,1208,2.896,1509,4.388,1533,4.659,1534,3.466,1535,3.613,1553,3.782,1554,4.621,1555,4.621,1744,4.343,2029,3.613,2691,4.19,3021,3.979,3630,4.908,3631,4.908,3632,7.176,3633,5.51,3634,5.51,3635,5.51,3636,5.51,3637,7.176,3638,5.51,3639,5.51,3640,5.51,3641,5.51,3642,5.51,3643,5.51,3644,5.51,3645,5.51,3646,4.215]],["title/interfaces/PaginatedApi-1.html",[391,1.112,762,0.116,1533,2.319]],["body/interfaces/PaginatedApi-1.html",[0,0.26,3,0.108,4,0.055,5,0.062,9,0.042,10,0.302,11,0.911,12,0.961,24,1.693,32,0.007,38,0.161,64,0.693,65,0.808,67,0.583,75,1.531,79,0.808,80,0.767,81,0.062,82,0.438,84,1.697,85,1.847,97,0.925,125,0.006,126,0.004,136,2.371,230,1.907,232,2.367,249,3.003,272,1.949,283,3.007,391,2.227,509,2.54,511,2.371,516,3.203,524,0.465,565,1.993,567,1.993,584,1.993,585,1.993,588,1.193,661,2.248,677,3.787,762,0.138,764,0.88,779,2.097,780,2.144,785,2.51,829,1.165,896,3.663,1088,2.979,1200,2.852,1202,1.866,1206,4.08,1207,2.979,1208,1.719,1209,1.866,1217,2.979,1218,2.138,1227,3.251,1228,3.42,1509,3.703,1517,3.42,1518,3.106,1519,4.218,1520,2.039,1523,1.907,1525,2.191,1527,1.907,1528,2.039,1529,2.039,1530,1.423,1531,1.866,1532,1.907,1533,3.787,1534,2.979,1535,3.106,1536,2.059,1537,3.878,1538,4.49,1539,4.08,1540,4.08,1541,3.661,1542,4.08,1543,4.08,1544,3.661,1545,4.08,1546,5.659,1547,3.623,1548,4.08,1549,2.979,1550,4.08,1551,2.979,1552,3.339,1553,4.452,1554,4.348,1555,4.348,1556,6.087,1557,5.777,1558,5.777,1559,7.087,1560,5.777,1561,3.878]],["title/interfaces/PaginatedApi-2.html",[762,0.116,980,2.499,1533,2.319]],["body/interfaces/PaginatedApi-2.html",[0,0.269,3,0.11,4,0.058,5,0.065,9,0.044,10,0.312,11,0.942,12,0.994,24,2.213,32,0.007,38,0.152,64,0.682,65,0.849,67,0.613,79,0.849,80,0.806,81,0.099,82,0.46,84,1.716,85,1.91,97,0.944,104,2.719,115,1.88,125,0.006,126,0.004,230,2.003,232,1.844,249,1.736,283,1.88,391,1.392,509,1.979,516,2.003,524,0.559,563,1.736,565,2.094,567,2.094,584,2.094,585,2.094,588,1.147,661,2.361,677,2.904,762,0.221,764,0.925,779,2.168,780,2.103,785,2.637,793,2.596,829,1.523,896,1.92,900,3.592,1085,3.415,1088,3.129,1100,2.637,1119,1.67,1200,2.596,1208,1.805,1209,1.96,1221,2.09,1223,2.386,1226,2.003,1290,2.561,1293,2.49,1424,3.415,1509,3.797,1518,3.262,1520,2.142,1523,2.003,1525,2.302,1527,2.003,1528,2.142,1529,2.888,1530,1.495,1531,1.96,1532,2.003,1533,3.915,1534,3.129,1535,3.262,1536,2.69,1538,3.785,1539,3.129,1540,3.129,1541,2.808,1542,3.129,1543,3.129,1544,2.808,1545,3.129,1548,4.218,1549,3.129,1550,4.218,1551,3.129,1552,2.561,1554,2.719,1555,2.719,1788,3.757,1789,3.601,1790,3.785,1791,2.424,1792,2.302,1793,3.262,1794,3.262,1795,3.011,1796,3.262,1797,3.806,1798,3.262,1799,3.806,1800,3.011,1801,3.806,1802,3.129,1803,5.804,1804,3.806,1805,3.806,1806,3.415,1807,3.415,1808,3.415,1809,5.804,1810,3.806,1811,2.561,1812,3.011,1813,3.806,1814,3.592,1815,3.592,1816,3.592,1817,3.806]],["title/injectables/PerformanceService.html",[0,0.191,2933,3.9]],["body/injectables/PerformanceService.html",[0,0.319,2,1.311,3,0.084,4,0.075,5,0.084,9,0.057,23,0.924,29,0.738,31,0.667,32,0.007,64,0.522,67,0.798,79,1.106,80,1.05,81,0.084,82,0.599,83,2.218,84,1.741,89,2.176,125,0.005,126,0.005,157,2.019,269,4.077,391,2.408,563,2.774,664,3.98,665,6.511,1703,5.215,2035,5.306,2058,5.883,2071,6.582,2319,5.773,2933,6.511,2936,5.773,2950,5.306,3455,7.083,3647,6.481,3648,6.481,3649,6.481,3650,6.481,3651,6.481,3652,6.481,3653,6.481,3654,8.603,3655,6.481,3656,7.952,3657,6.481,3658,6.481,3659,6.481,3660,6.481,3661,6.481,3662,6.481,3663,6.481,3664,6.481,3665,6.481,3666,6.481]],["title/interfaces/PlaygroundAgentExtraData.html",[762,0.139,2133,2.603]],["body/interfaces/PlaygroundAgentExtraData.html",[3,0.067,4,0.06,5,0.067,9,0.045,10,0.319,32,0.007,37,0.434,38,0.128,39,0.615,81,0.123,125,0.005,126,0.005,159,1.793,267,2.96,272,2.821,411,3.253,416,2.724,428,1.983,524,0.583,588,1.305,741,2.236,762,0.275,764,0.955,782,2.025,1119,1.725,1218,2.32,1221,2.564,1223,1.828,1225,2.06,1536,2.448,1659,2.572,1888,2.163,1892,2.069,1894,3.339,1895,3.339,2038,2.572,2095,4.215,2096,2.809,2097,2.809,2098,2.9,2099,3.633,2100,2.9,2101,3.633,2102,2.9,2103,3.746,2104,3.021,2105,3.174,2106,3.746,2107,3.021,2108,3.171,2109,3.253,2110,3.746,2111,3.253,2112,3.746,2113,3.746,2114,3.746,2115,4.496,2116,2.724,2117,2.9,2118,2.9,2119,2.9,2120,3.633,2121,2.9,2122,2.646,2123,2.9,2124,4.496,2125,2.646,2126,4.29,2127,3.746,2128,3.633,2129,4.215,2130,2.9,2131,4.215,2132,2.9,2133,4.496,2134,4.235,2135,2.069,2136,2.9,2137,2.9,2138,2.378,2139,3.171,2140,3.171,2141,3.171,2142,3.094,2143,3.171,2144,2.439,2145,2.809,2146,2.572,2147,2.9,2148,2.646]],["title/interfaces/ReasoningSteps.html",[762,0.139,2115,2.603]],["body/interfaces/ReasoningSteps.html",[3,0.064,4,0.057,5,0.064,9,0.044,10,0.311,32,0.007,37,0.418,38,0.163,39,0.652,81,0.123,125,0.004,126,0.004,159,1.727,267,2.928,272,3.483,411,3.172,416,4.295,428,1.91,524,0.586,588,1.309,741,2.194,762,0.273,764,0.92,782,1.951,1119,1.662,1218,2.235,1221,2.525,1223,1.761,1225,2.009,1536,2.402,1659,2.478,1888,2.083,1892,1.993,1894,3.256,1895,3.256,2038,2.478,2095,4.136,2096,2.706,2097,2.706,2098,2.794,2099,3.543,2100,2.794,2101,3.543,2102,2.794,2103,3.653,2104,2.946,2105,3.114,2106,3.653,2107,2.946,2108,3.093,2109,3.172,2110,3.653,2111,3.172,2112,3.653,2113,3.653,2114,3.653,2115,4.136,2116,4.295,2117,4.573,2118,4.573,2119,4.573,2120,3.543,2121,2.794,2122,2.548,2123,2.794,2124,3.653,2125,2.548,2126,3.346,2127,3.653,2128,3.543,2129,4.136,2130,2.794,2131,4.136,2132,2.794,2133,4.136,2134,2.548,2135,1.993,2136,2.794,2137,2.794,2138,2.291,2139,3.093,2140,3.093,2141,3.093,2142,3.018,2143,3.093,2144,2.349,2145,2.706,2146,2.478,2147,2.794,2148,2.548]],["title/interfaces/Reference.html",[762,0.139,2120,2.525]],["body/interfaces/Reference.html",[3,0.066,4,0.059,5,0.066,9,0.045,10,0.318,32,0.007,37,0.693,38,0.16,81,0.123,125,0.005,126,0.005,159,1.782,267,3.104,272,2.809,411,3.239,416,2.707,428,1.97,524,0.585,588,1.304,741,2.229,762,0.274,764,0.949,779,2.207,782,2.012,1119,1.714,1218,2.305,1221,2.557,1223,1.817,1225,2.051,1536,2.44,1659,2.556,1888,2.149,1892,2.056,1894,3.325,1895,3.325,2038,2.556,2095,4.202,2096,2.791,2097,2.791,2098,2.882,2099,3.618,2100,2.882,2101,3.618,2102,2.882,2103,3.73,2104,3.008,2105,3.164,2106,3.73,2107,3.008,2108,3.158,2109,3.239,2110,3.73,2111,3.239,2112,3.73,2113,3.73,2114,3.73,2115,3.73,2116,2.707,2117,2.882,2118,2.882,2119,2.882,2120,4.075,2121,4.631,2122,2.629,2123,2.882,2124,3.73,2125,2.629,2126,3.416,2127,3.73,2128,3.618,2129,4.202,2130,2.882,2131,4.202,2132,2.882,2133,4.202,2134,2.629,2135,2.056,2136,2.882,2137,2.882,2138,2.363,2139,3.158,2140,3.158,2141,3.158,2142,3.081,2143,3.158,2144,2.424,2145,2.791,2146,2.556,2147,2.882,2148,2.629]],["title/interfaces/ReferenceData.html",[762,0.139,2124,2.603]],["body/interfaces/ReferenceData.html",[3,0.066,4,0.059,5,0.066,9,0.045,10,0.318,32,0.007,37,0.431,38,0.144,39,0.51,81,0.123,125,0.005,126,0.005,159,1.782,267,2.954,272,2.809,411,3.239,416,2.707,428,1.97,524,0.584,588,1.314,741,2.229,762,0.274,764,0.949,782,2.012,1119,1.714,1218,2.305,1221,2.557,1223,1.817,1225,2.051,1536,2.44,1659,2.556,1888,2.149,1892,2.056,1894,3.325,1895,3.325,2038,4.107,2095,4.202,2096,2.791,2097,2.791,2098,2.882,2099,3.618,2100,2.882,2101,3.618,2102,2.882,2103,3.73,2104,3.008,2105,3.164,2106,3.73,2107,3.008,2108,3.158,2109,3.239,2110,3.73,2111,3.239,2112,3.73,2113,3.73,2114,3.73,2115,3.73,2116,2.707,2117,2.882,2118,2.882,2119,2.882,2120,4.35,2121,2.882,2122,2.629,2123,2.882,2124,4.202,2125,4.225,2126,4.281,2127,3.73,2128,3.618,2129,4.202,2130,2.882,2131,4.202,2132,2.882,2133,4.202,2134,2.629,2135,2.056,2136,2.882,2137,2.882,2138,2.363,2139,3.158,2140,3.158,2141,3.158,2142,3.081,2143,3.158,2144,2.424,2145,2.791,2146,2.556,2147,2.882,2148,2.629]],["title/injectables/RegisterFacade.html",[0,0.191,3667,3.9]],["body/injectables/RegisterFacade.html",[0,0.286,2,1.109,3,0.071,4,0.064,5,0.071,9,0.048,10,0.333,11,1.118,12,1.389,14,2.403,23,0.831,24,2.078,29,0.961,31,0.564,32,0.007,36,0.742,37,0.463,38,0.149,39,0.41,42,1.289,43,1.267,46,3.681,58,3.394,64,0.576,65,0.935,66,2.16,67,0.675,79,0.935,80,0.887,81,0.071,82,0.507,83,1.875,84,1.036,85,1.561,89,1.84,90,3.009,97,0.637,99,3.199,108,2.821,119,2.821,125,0.005,126,0.005,199,5.533,202,2.743,434,3.984,524,0.493,554,2.995,558,3.317,573,3.317,779,2.312,793,1.875,1162,6.09,1494,5.471,1764,4.192,1788,3.309,1789,2.601,1791,2.67,1811,3.681,1866,4.487,2167,5.855,2552,4.192,2599,7.591,2766,3.957,3167,4.881,3520,3.957,3667,5.855,3668,5.48,3669,7.96,3670,5.48,3671,5.48,3672,5.48,3673,7.151,3674,5.48,3675,4.487,3676,5.48,3677,5.48,3678,7.151,3679,5.48,3680,5.48,3681,5.48,3682,5.48,3683,5.48,3684,5.48,3685,5.48,3686,5.48,3687,7.515,3688,8.437,3689,7.96,3690,7.96,3691,5.48,3692,5.48,3693,5.48,3694,5.48,3695,5.48,3696,5.48,3697,5.48,3698,5.48,3699,4.192,3700,4.881,3701,5.48,3702,5.48,3703,5.48]],["title/components/RegisterPage.html",[127,1.512,495,2.204]],["body/components/RegisterPage.html",[3,0.047,4,0.042,5,0.047,7,4.051,9,0.032,10,0.248,11,1.103,12,1.346,14,2.315,15,3.85,16,1.255,17,3.227,23,0.62,24,1.658,29,0.972,31,0.549,32,0.007,37,0.45,42,1.316,43,1.357,48,2.599,52,2.753,54,5.201,58,1.708,64,0.654,65,0.614,66,1.418,67,0.443,68,2.599,69,2.946,70,2.178,81,0.047,83,1.231,84,1.418,85,1.025,89,1.208,95,2.946,97,0.738,115,3.155,125,0.004,126,0.004,127,1.692,128,1.665,129,2.407,130,1.708,132,1.708,133,1.708,138,1.586,139,1.908,140,1.908,141,4.544,142,1.708,143,1.142,144,1.708,145,2.53,146,3.85,147,2.745,150,1.801,152,4.587,157,1.121,165,2.599,181,1.908,182,1.625,185,1.753,186,1.753,197,4.806,202,1.801,449,1.708,450,2.53,451,2.467,452,1.708,453,3.333,454,1.708,455,1.708,456,1.665,457,1.708,458,1.665,459,1.708,460,1.708,461,1.708,462,1.665,463,1.708,464,1.665,465,1.708,466,1.665,467,2.53,468,1.708,469,1.708,470,1.708,471,2.735,472,1.708,473,1.665,474,1.708,475,1.708,476,1.418,477,1.708,478,1.665,479,1.708,480,1.665,481,1.708,482,1.708,483,1.625,484,1.708,485,1.665,486,1.708,487,1.708,488,1.665,489,1.708,490,1.665,491,1.708,492,1.708,493,1.708,494,1.708,495,2.939,496,1.708,497,1.665,498,2.244,499,1.514,500,2.53,501,1.665,502,1.665,503,1.708,504,1.708,505,1.665,506,1.708,524,0.312,578,2.753,626,2.753,630,2.753,645,1.853,671,2.101,709,2.36,780,1.256,842,3.995,878,2.264,1136,2.264,1159,2.599,1332,3.227,1407,2.178,1495,2.031,1617,3.66,1726,2.946,1788,2.939,1789,3.015,1791,3.422,1811,1.853,2029,2.36,2407,2.753,3523,4.749,3524,6.996,3525,6.256,3526,5.658,3533,3.205,3541,3.205,3543,3.205,3544,3.205,3546,4.366,3550,4.749,3551,4.749,3555,4.749,3556,4.749,3667,2.946,3687,4.749,3704,3.205,3705,3.598,3706,3.598,3707,3.598,3708,3.598,3709,3.598,3710,3.598,3711,3.598,3712,3.598,3713,4.749,3714,3.598,3715,3.598,3716,3.598,3717,3.598,3718,4.749,3719,4.749,3720,3.598,3721,3.598,3722,3.598,3723,3.598,3724,3.598,3725,3.598,3726,3.598,3727,3.598,3728,3.598,3729,3.205,3730,3.598,3731,3.598,3732,3.598,3733,3.598,3734,3.598,3735,3.598,3736,3.598,3737,5.332,3738,5.332,3739,5.332,3740,5.332,3741,5.332,3742,5.332,3743,5.332,3744,5.332,3745,5.332,3746,5.332,3747,5.332,3748,5.332,3749,5.332,3750,5.332]],["title/interfaces/RegisterRequest.html",[762,0.139,2168,2.883]],["body/interfaces/RegisterRequest.html",[3,0.082,4,0.073,5,0.082,9,0.055,10,0.363,31,0.802,32,0.007,38,0.159,81,0.119,125,0.005,126,0.005,524,0.588,741,1.818,762,0.266,764,1.166,794,3.65,1119,2.846,1221,2.428,1223,3.016,1226,3.137,1630,3.517,1788,4.444,1789,4.588,1791,4.442,1811,3.228,1896,3.427,2161,3.661,2165,3.661,2168,4.716,2170,3.795,2171,3.661,2172,3.795,2944,3.795,3561,4.528,3562,4.528,3563,4.528,3564,4.528,3565,4.112,3566,4.528]],["title/interfaces/RegisterSuccessResponse.html",[762,0.139,2172,2.883]],["body/interfaces/RegisterSuccessResponse.html",[3,0.08,4,0.071,5,0.08,9,0.054,10,0.357,31,0.79,32,0.007,38,0.17,39,0.574,81,0.118,125,0.005,126,0.005,524,0.589,741,1.774,762,0.264,764,1.137,794,3.61,1119,2.814,1221,2.821,1223,3.287,1226,3.645,1630,3.464,1788,4.425,1789,4.571,1791,3.738,1811,3.15,1896,3.344,2161,3.572,2165,3.572,2168,3.703,2170,3.703,2171,3.572,2172,4.644,2944,3.703,3561,4.418,3562,4.418,3563,4.418,3564,4.418,3565,4.012,3566,4.418]],["title/injectables/RegisterUseCase.html",[0,0.191,3675,3.9]],["body/injectables/RegisterUseCase.html",[0,0.324,2,1.348,3,0.087,4,0.077,5,0.087,9,0.059,10,0.377,11,1.223,12,1.291,23,0.94,24,2.273,29,0.921,31,0.686,32,0.007,36,0.902,37,0.562,38,0.163,39,0.498,42,1.079,43,1.06,64,0.729,65,1.137,67,0.821,79,1.137,80,1.079,81,0.087,82,0.616,97,0.774,125,0.005,126,0.005,793,2.28,829,1.453,1193,3.432,1198,3.12,2081,4.811,2159,4.573,2168,5.481,2172,4.032,2173,5.097,2923,6.187,3081,4.811,3102,7.13,3105,6.622,3107,5.455,3675,6.622,3751,6.662,3752,6.662,3753,6.662,3754,6.662]],["title/interfaces/ResponseAudio.html",[762,0.139,2127,2.603]],["body/interfaces/ResponseAudio.html",[3,0.065,4,0.058,5,0.065,9,0.044,10,0.312,32,0.007,37,0.419,38,0.159,39,0.695,81,0.123,125,0.004,126,0.004,159,1.733,267,3.087,272,2.758,411,3.18,416,2.634,428,1.917,524,0.585,588,1.318,741,2.531,762,0.273,764,0.924,782,1.958,1119,1.668,1218,2.243,1221,2.529,1223,1.768,1225,2.014,1536,2.406,1659,2.487,1888,2.091,1892,2.001,1894,3.264,1895,3.264,2038,2.487,2095,4.144,2096,2.716,2097,2.716,2098,2.804,2099,4.492,2100,2.804,2101,4.492,2102,2.804,2103,3.662,2104,2.953,2105,3.12,2106,3.662,2107,2.953,2108,3.101,2109,3.18,2110,3.662,2111,3.18,2112,3.662,2113,3.662,2114,3.662,2115,3.662,2116,2.634,2117,2.804,2118,2.804,2119,2.804,2120,3.552,2121,2.804,2122,2.558,2123,2.804,2124,3.662,2125,2.558,2126,3.354,2127,4.144,2128,4.492,2129,4.144,2130,2.804,2131,4.144,2132,2.804,2133,4.144,2134,2.558,2135,2.001,2136,2.804,2137,2.804,2138,2.299,2139,3.101,2140,3.101,2141,3.101,2142,3.025,2143,3.101,2144,2.358,2145,2.716,2146,2.487,2147,2.804,2148,2.558]],["title/injectables/RiskFacade.html",[0,0.191,3755,4.243]],["body/injectables/RiskFacade.html",[0,0.278,2,1.059,3,0.068,4,0.061,5,0.101,9,0.046,10,0.323,11,1.244,12,1.458,14,2.456,23,0.806,24,2.313,29,1.059,31,0.714,32,0.007,36,0.708,37,0.442,38,0.098,39,0.391,42,1.464,43,1.438,46,4.561,58,3.292,64,0.667,65,0.893,66,3.066,67,0.645,79,0.893,80,0.847,81,0.068,82,0.484,83,2.374,84,1.567,85,1.976,89,2.329,90,2.919,91,4.363,97,0.806,99,4.05,108,3.571,125,0.005,126,0.005,189,2.953,191,5.953,194,4.284,273,2.619,434,3.895,558,4.198,573,4.198,631,1.79,1146,2.86,1520,3.35,1523,2.793,1525,3.209,1527,2.107,1528,2.253,1529,3.35,1530,1.572,1531,2.062,1532,2.107,1663,3.055,2116,3.677,2991,4.66,3032,5.619,3755,6.178,3756,5.232,3757,5.619,3758,7.781,3759,7.781,3760,7.781,3761,6.936,3762,8.286,3763,6.936,3764,5.232,3765,5.232,3766,5.232,3767,5.232,3768,5.232,3769,5.232,3770,5.232,3771,5.232,3772,5.232,3773,5.232,3774,5.232,3775,5.232,3776,5.232,3777,5.232,3778,5.232,3779,5.232,3780,5.232,3781,5.232,3782,5.232]],["title/interfaces/RiskWeightsConfig.html",[762,0.139,3073,2.996]],["body/interfaces/RiskWeightsConfig.html",[3,0.092,4,0.082,5,0.092,9,0.062,10,0.39,32,0.007,38,0.167,81,0.109,125,0.006,126,0.006,524,0.522,588,1.249,741,2.676,762,0.244,764,1.312,781,3.885,829,1.504,1565,5.096,1566,5.096,1567,5.928,1568,6.469,3072,5.096,3073,5.266,3783,6.286,3784,6.286]],["title/interfaces/RiskWeightsConfig-1.html",[391,1.112,762,0.116,3073,2.499]],["body/interfaces/RiskWeightsConfig-1.html",[0,0.316,3,0.083,4,0.074,5,0.083,9,0.056,10,0.367,11,1.108,12,1.17,24,2.06,32,0.007,38,0.16,64,0.719,65,1.092,67,0.788,79,1.092,80,1.036,81,0.103,82,0.591,84,1.492,97,0.917,125,0.005,126,0.005,230,2.576,524,0.5,588,1.209,741,2.589,762,0.186,764,1.19,781,3.758,829,1.417,1520,2.755,1523,2.576,1525,2.961,1527,2.576,1528,2.755,1529,3.397,1530,1.923,1531,2.522,1532,2.576,1536,2.504,1552,3.294,1565,4.621,1566,4.621,1567,5.876,1568,6.412,2087,4.621,3041,4.392,3073,4.963,3785,5.7,3786,5.7,3787,5.7,3788,5.7]],["title/interfaces/RiskWeightsPort.html",[762,0.139,3072,3.44]],["body/interfaces/RiskWeightsPort.html",[3,0.09,4,0.081,5,0.09,9,0.061,23,0.964,29,0.945,31,0.854,32,0.007,36,0.94,37,0.586,38,0.13,39,0.519,81,0.108,125,0.006,126,0.006,524,0.406,588,1.243,741,2.015,762,0.242,764,1.292,781,3.865,829,1.65,1565,6.632,1566,6.403,1567,5.578,1568,6.304,3072,5.99,3073,4.371,3783,7.898,3784,6.189,3789,6.948,3790,6.189,3791,6.948]],["title/injectables/RiskWeightsService.html",[0,0.191,2087,3.44]],["body/injectables/RiskWeightsService.html",[0,0.304,2,1.216,3,0.078,4,0.07,5,0.078,9,0.053,10,0.353,11,1.291,12,1.363,23,0.882,24,2.401,29,0.995,31,0.781,32,0.007,36,0.813,37,0.507,38,0.113,39,0.449,42,1.229,43,1.207,64,0.703,65,1.025,67,0.74,79,1.025,80,0.973,81,0.099,82,0.555,84,1.435,97,0.882,125,0.005,126,0.005,230,3.348,524,0.351,588,1.182,741,1.742,762,0.175,781,3.675,829,1.569,1520,3.58,1523,3.055,1525,3.51,1527,2.419,1528,2.587,1529,3.267,1530,1.806,1531,2.368,1532,2.419,1536,2.408,1552,3.094,1565,6.306,1566,6.004,1567,5.493,1568,6.181,2087,5.478,3041,4.125,3073,3.78,3785,8.021,3786,5.353,3787,5.353,3788,5.353,3790,5.353,3792,6.009,3793,6.009,3794,6.009,3795,6.009]],["title/injectables/RoleGuardService.html",[0,0.191,3796,4.243]],["body/injectables/RoleGuardService.html",[0,0.311,2,1.261,3,0.081,4,0.072,5,0.081,9,0.055,10,0.361,11,1.303,12,1.376,23,0.902,29,0.963,31,0.641,32,0.007,36,0.843,37,0.526,38,0.117,39,0.466,42,1.257,43,1.235,64,0.68,65,1.063,67,0.768,79,1.063,80,1.009,81,0.101,82,0.576,84,1.598,97,1.028,125,0.005,126,0.005,143,2.463,426,4.767,524,0.364,645,3.208,810,2.375,841,5.327,842,5.565,866,2.564,878,4.882,1223,2.761,1630,3.816,1681,4.531,1685,3.638,1687,3.92,2151,6.355,2155,5.938,2156,5.102,2944,3.771,3796,6.913,3797,5.55,3798,7.761,3799,8.108,3800,6.231,3801,6.231,3802,6.231,3803,6.231,3804,6.231,3805,6.231,3806,6.231,3807,6.231,3808,6.231,3809,6.231,3810,5.55,3811,5.55]],["title/interfaces/RunResponse.html",[762,0.139,2105,1.96]],["body/interfaces/RunResponse.html",[3,0.057,4,0.051,5,0.057,9,0.039,10,0.287,32,0.007,37,0.371,38,0.179,39,0.734,81,0.12,125,0.004,126,0.004,159,2.688,267,3.006,272,2.535,411,3.991,416,2.33,428,1.696,524,0.584,588,1.291,741,2.062,762,0.267,764,0.817,782,2.802,1119,1.476,1218,1.985,1221,2.691,1223,1.564,1225,2.438,1536,2.257,1659,2.201,1888,3.243,1892,3.103,1894,3.952,1895,3.952,2038,2.201,2095,4.434,2096,2.403,2097,2.403,2098,2.481,2099,3.265,2100,2.481,2101,3.265,2102,2.481,2103,4.212,2104,2.715,2105,3.171,2106,3.367,2107,2.715,2108,2.85,2109,2.924,2110,3.367,2111,2.924,2112,3.367,2113,3.367,2114,3.367,2115,3.367,2116,2.33,2117,2.481,2118,2.481,2119,2.481,2120,3.265,2121,2.481,2122,2.263,2123,2.481,2124,3.367,2125,2.263,2126,3.083,2127,4.212,2128,3.265,2129,4.434,2130,2.481,2131,4.434,2132,2.481,2133,4.434,2134,2.263,2135,3.103,2136,4.349,2137,4.349,2138,3.566,2139,3.754,2140,3.754,2141,3.754,2142,3.663,2143,3.754,2144,2.086,2145,2.403,2146,2.201,2147,2.481,2148,2.263]],["title/interfaces/SSEMessage.html",[762,0.139,3812,3.644]],["body/interfaces/SSEMessage.html",[0,0.187,3,0.039,4,0.035,5,0.074,9,0.027,10,0.217,11,0.974,12,0.845,14,1.976,16,1.052,32,0.007,38,0.169,39,0.678,43,0.48,64,0.516,65,0.514,66,1.188,67,0.371,79,0.514,80,0.488,81,0.074,82,0.279,83,1.595,84,1.736,85,1.328,89,1.565,90,1.268,97,0.919,125,0.003,126,0.003,143,2.202,159,3.234,267,2.913,273,3.672,391,1.305,428,1.163,476,2.529,498,1.268,524,0.561,556,2.933,563,1.052,588,0.868,631,2.511,703,1.76,709,1.977,741,0.874,761,1.76,762,0.136,764,0.56,771,3.746,780,1.911,781,1.268,793,1.031,794,2.455,810,1.427,866,3.148,896,1.799,1017,2.306,1067,2.722,1119,1.012,1122,2.933,1221,2.528,1222,2.822,1225,2.535,1226,1.214,1285,2.631,1457,5.688,1523,1.214,1530,0.906,1531,1.188,1532,1.214,1536,0.957,1630,2.897,1681,1.76,1685,1.76,1687,1.896,1812,1.824,1888,3.414,1892,2.794,1931,2.334,1940,2.177,2069,2.177,2079,2.069,2104,2.055,2105,1.919,2107,2.055,2108,2.157,2122,2.4,2135,3.266,2138,3.754,2139,2.969,2140,2.969,2141,2.969,2142,2.897,2143,2.969,2148,1.552,2190,3.022,2195,3.567,2197,2.177,2329,2.722,2334,4.283,2358,2.822,2405,2.306,2472,3.913,2549,2.177,2571,2.069,2576,2.306,2594,2.822,2687,3.367,2691,1.76,2705,4.763,2709,1.824,2718,2.306,3026,2.069,3027,2.069,3520,2.177,3699,2.306,3757,2.177,3812,6.638,3813,2.468,3814,2.468,3815,4.633,3816,3.567,3817,2.468,3818,2.468,3819,2.306,3820,5.533,3821,5.036,3822,5.036,3823,5.036,3824,4.668,3825,2.468,3826,2.468,3827,4.668,3828,2.468,3829,2.468,3830,2.468,3831,3.817,3832,2.468,3833,2.468,3834,2.468,3835,3.817,3836,2.468,3837,2.468,3838,2.468,3839,2.468,3840,2.468,3841,2.468,3842,2.468,3843,2.468,3844,2.468,3845,2.468,3846,2.468,3847,2.468,3848,2.468,3849,2.468,3850,2.468,3851,3.817,3852,2.468,3853,2.468,3854,2.468,3855,3.817,3856,2.468,3857,2.468,3858,2.468,3859,4.668,3860,5.254,3861,5.681,3862,6.264,3863,6.471,3864,3.817,3865,5.681,3866,2.468,3867,2.468,3868,2.306,3869,2.306,3870,2.468,3871,2.468,3872,6.007,3873,2.468,3874,2.468,3875,2.468,3876,2.468,3877,2.468,3878,2.468,3879,2.468,3880,2.468,3881,2.069,3882,2.468,3883,3.817,3884,3.817,3885,2.468,3886,2.468,3887,3.817,3888,2.468,3889,2.468,3890,2.468,3891,2.468,3892,2.468,3893,2.468,3894,3.817,3895,2.468,3896,3.817,3897,2.468,3898,2.468,3899,2.468,3900,2.468,3901,2.468,3902,2.468,3903,2.468,3904,2.468,3905,2.468,3906,3.567,3907,2.468,3908,2.468,3909,2.468,3910,2.468,3911,2.468,3912,2.468]],["title/interfaces/SSEMessageModel.html",[762,0.139,3913,3.9]],["body/interfaces/SSEMessageModel.html",[3,0.077,4,0.068,5,0.077,9,0.052,10,0.349,32,0.007,38,0.184,39,0.739,81,0.097,125,0.005,126,0.005,159,3.124,267,2.911,476,3.417,524,0.583,588,1.115,762,0.218,764,1.096,771,5.063,810,2.293,1221,2.702,1225,2.606,1888,3.65,1892,3.492,2135,3.492,2138,4.013,2139,4.013,2140,4.013,2141,4.013,2142,3.915,2143,4.013,2334,3.442,2519,3.708,3815,6.262,3820,3.866,3821,4.047,3822,4.047,3823,4.047,3913,6.747,3914,5.251]],["title/injectables/ScrollManagerService.html",[0,0.191,2508,3.9]],["body/injectables/ScrollManagerService.html",[0,0.256,2,0.938,3,0.06,4,0.054,5,0.06,9,0.041,10,0.297,11,1.027,23,0.742,29,1.032,31,0.919,32,0.007,36,1.119,37,0.698,38,0.16,39,0.618,42,1.184,43,1.164,64,0.373,67,0.571,79,0.79,80,0.75,81,0.06,82,0.428,83,2.502,84,1.383,89,2.145,97,0.538,119,4.595,125,0.004,126,0.004,143,1.47,157,2.857,211,3.73,235,5.971,249,1.616,451,2.144,588,1.067,810,1.955,862,6.205,866,3.009,1001,4.127,1036,4.385,1162,5.594,1182,4.613,1186,4.127,1406,5.231,1423,8.317,1495,4.449,1663,3.73,2312,5.691,2337,3.18,2508,5.231,2552,5.594,2766,4.613,2790,5.41,3174,4.888,3183,4.385,3405,5.691,3432,3.346,3572,4.127,3906,4.888,3915,9.168,3916,7.312,3917,7.312,3918,6.389,3919,7.312,3920,6.389,3921,7.882,3922,6.389,3923,6.389,3924,6.389,3925,4.633,3926,4.633,3927,7.882,3928,6.389,3929,4.633,3930,6.389,3931,4.633,3932,4.127,3933,4.633,3934,4.633,3935,4.633,3936,4.633,3937,4.633,3938,4.633,3939,4.633,3940,6.389,3941,8.269,3942,7.882,3943,6.389,3944,6.389,3945,6.389,3946,4.633,3947,7.882,3948,5.691,3949,6.389,3950,8.269,3951,4.633,3952,7.312,3953,6.389,3954,6.389,3955,6.389,3956,6.389,3957,6.389,3958,4.633,3959,4.633,3960,4.633,3961,4.633,3962,7.312,3963,4.633,3964,6.389,3965,6.389,3966,4.633,3967,4.633,3968,4.633,3969,4.633,3970,4.633,3971,4.633,3972,4.633]],["title/classes/SendMessageRestUseCase.html",[82,0.44,3973,4.243]],["body/classes/SendMessageRestUseCase.html",[3,0.082,4,0.073,5,0.11,9,0.055,12,0.932,16,2.194,23,0.907,29,0.889,31,0.647,32,0.007,36,1.057,37,0.659,38,0.174,39,0.584,64,0.683,71,3.238,75,2.034,81,0.082,82,0.581,97,0.731,125,0.005,126,0.005,143,1.996,159,2.194,428,3.425,524,0.544,779,2.524,793,2.905,1193,3.345,1198,3.275,1225,1.89,1226,2.532,1236,4.558,1285,3.55,1530,1.89,1774,3.807,1931,4.249,1935,5.372,1939,4.558,2003,3.807,2011,3.956,2105,2.588,2334,3.672,2519,3.956,2685,6.95,2709,3.807,2958,4.812,2960,4.542,3820,4.125,3821,4.317,3822,4.317,3823,4.317,3973,6.953,3974,6.289,3975,6.289,3976,6.289,3977,6.289,3978,6.289,3979,6.289,3980,7.806,3981,6.289,3982,6.289,3983,5.602]],["title/classes/SendMessageUseCase.html",[82,0.44,2684,3.9]],["body/classes/SendMessageUseCase.html",[3,0.082,4,0.074,5,0.111,9,0.056,12,0.94,16,2.212,23,0.912,29,0.971,31,0.807,32,0.007,36,1.062,37,0.662,38,0.177,39,0.586,64,0.686,71,3.263,75,2.049,81,0.082,82,0.586,97,0.737,125,0.005,126,0.005,157,2.444,428,2.446,524,0.552,779,2.536,793,3.13,1193,3.508,1198,3.287,1222,3.836,1225,1.905,1226,2.552,1530,1.905,1774,3.836,1931,4.264,1939,4.58,2003,3.836,2011,3.987,2358,5.387,2519,3.987,2604,4.577,2608,6.987,2680,6.81,2684,6.423,2685,7.288,2709,3.836,2767,4.577,2960,4.577,3984,6.339,3985,6.339,3986,6.339,3987,6.339,3988,6.339,3989,5.646,3990,6.339,3991,6.339]],["title/interfaces/SessionCompaniesAnalysis.html",[762,0.139,1924,2.781]],["body/interfaces/SessionCompaniesAnalysis.html",[3,0.08,4,0.072,5,0.08,9,0.054,10,0.359,14,1.759,32,0.007,38,0.165,39,0.577,81,0.118,125,0.005,126,0.005,499,3.711,524,0.583,532,3.008,588,1.229,732,3.273,754,4.049,762,0.264,764,1.148,767,3.737,768,3.737,773,3.179,774,3.737,775,4.505,780,2.139,781,2.598,782,2.433,1225,2.65,1900,6.053,1901,4.459,1902,4.459,1903,4.459,1904,4.459,1905,4.459,1906,4.459,1907,4.238,1908,5.297,1909,4.459,1910,4.459,1911,5.297,1912,4.459,1913,4.459,1914,4.459,1915,4.459,1916,4.459,1917,4.238,1918,4.459,1919,4.459,1920,4.459,1921,4.459,1922,6.053,1923,4.459,1924,4.505,1925,6.368,1926,6.368]],["title/components/SessionCompaniesModalComponent.html",[127,1.512,497,2.204]],["body/components/SessionCompaniesModalComponent.html",[3,0.021,4,0.018,5,0.021,7,3.622,9,0.024,10,0.128,11,0.511,12,1.047,14,1.957,16,0.961,23,0.32,29,0.873,31,0.554,32,0.007,36,0.373,37,0.367,38,0.108,39,0.402,42,0.795,43,0.782,46,2.236,58,1.307,64,0.433,65,0.271,66,0.626,67,0.196,80,0.446,81,0.021,82,0.147,84,0.929,90,0.669,91,1,97,0.571,111,1.301,115,2.309,125,0.002,126,0.002,127,1.156,128,0.735,129,1.243,130,2.74,131,0.962,132,0.754,133,0.754,136,1.378,137,2.787,138,0.701,141,4.033,142,1.307,143,1.379,144,1.307,145,1.729,147,1.875,148,1.732,150,1.378,153,2.452,157,1.677,159,0.555,182,0.718,185,0.774,186,0.774,189,2.056,197,3.949,227,2.107,237,3.632,239,4.85,240,4.391,241,5.07,245,3.221,246,5.968,247,4.652,248,2.982,249,3.294,250,4.006,253,5.297,254,5.262,255,4.564,256,4.652,257,4.939,258,4.652,259,4.006,260,3.786,262,4.85,263,4.652,264,3.324,265,4.801,266,3.547,267,2.483,268,1.732,269,2.291,271,1.091,273,0.796,274,3.221,275,3.528,276,5.174,277,4.36,278,4.193,279,3.547,280,4.006,281,4.158,282,4.195,283,1.642,284,1.806,285,4.006,286,5.297,287,2.389,289,1.216,292,2.849,295,1.042,296,2.389,297,3.221,303,4.505,304,2.733,309,4.006,310,5.709,311,4.505,312,4.36,313,1.732,314,1.732,315,1.89,316,1.042,319,4.895,320,4.554,323,4.182,324,3.843,325,3.256,327,1.89,328,1.091,331,1.042,332,1.042,334,4.633,335,1.806,337,1.091,338,2.849,339,4.444,341,3.384,342,3.256,343,3.528,344,3.221,345,2.849,346,2.389,348,3.137,349,3.693,350,2.849,351,3.137,352,1.042,353,3.324,354,1.042,356,1.042,361,1.148,362,1.806,363,1.89,364,1.988,365,1.806,370,1.148,371,1.89,374,2.849,375,1.091,379,4.673,380,4.116,381,1.301,384,4.673,386,2.733,387,1.301,391,1.71,394,1.806,397,1.091,400,1.042,401,1.091,403,1.148,407,1.988,409,1.416,415,1.148,434,2.175,435,1.216,436,2.291,437,1.148,442,1,443,1.89,444,1.732,445,1.042,449,0.754,450,1.307,451,1.274,452,0.754,453,2.062,454,0.754,455,0.754,456,0.735,457,0.754,458,0.735,459,0.754,460,0.754,461,0.754,462,0.735,463,0.754,464,0.735,465,0.754,466,0.735,467,1.307,468,0.754,469,0.754,470,0.754,471,1.568,472,0.754,473,0.735,474,0.754,475,0.754,476,0.626,477,0.754,478,0.735,479,0.754,480,0.735,481,0.754,482,0.754,483,0.718,484,0.754,485,0.735,486,0.754,487,0.754,488,0.735,489,0.754,490,0.735,491,0.754,492,0.754,493,0.754,494,0.754,495,0.735,496,0.754,497,2.01,498,2.798,499,3.622,500,1.307,501,0.735,502,0.735,503,0.754,504,0.754,505,0.735,506,0.754,524,0.161,554,0.869,558,0.962,573,0.962,581,0.897,588,0.215,631,0.544,649,2.107,661,0.754,689,2.453,701,1.091,704,2.255,710,1.216,714,2.453,720,1.148,733,3.245,734,1.416,745,1.301,750,1.091,780,0.375,810,0.486,862,3.221,863,2.291,865,2.107,866,1.133,883,1.091,896,1.406,977,2.255,989,2.453,991,2.453,998,1.988,1019,3.245,1028,0.774,1043,5.256,1044,1.988,1057,2.107,1058,2.107,1067,1.608,1068,1.301,1152,1.301,1202,1.436,1332,2.205,1347,3.324,1407,0.962,1430,1.216,1470,2.255,1591,2.5,1642,1.988,1683,1.148,1896,1.505,1907,2.982,1924,0.928,1927,1.301,1928,1.416,1937,1.216,1938,1.148,1980,1.416,2036,1.89,2190,1.46,2351,1.89,2357,2.107,2372,2.787,2395,2.107,2427,2.787,2443,1.216,2445,1.416,2446,2.107,2449,1.301,2464,2.255,2467,2.107,2471,2.255,2477,1.301,2757,1.301,2844,3.137,2919,2.983,3125,3.557,3131,2.983,3143,2.255,3192,2.107,3348,2.983,3432,1.148,3565,1.042,3646,1.216,3881,1.091,3992,7.782,3993,1.416,3994,6.54,3995,3.245,3996,2.453,3997,3.643,3998,3.245,3999,3.245,4000,3.643,4001,2.753,4002,3.87,4003,2.453,4004,2.983,4005,1.416,4006,1.416,4007,2.753,4008,2.753,4009,1.589,4010,2.753,4011,1.589,4012,1.416,4013,1.416,4014,2.453,4015,2.983,4016,1.589,4017,2.753,4018,1.589,4019,2.753,4020,1.589,4021,1.589,4022,1.416,4023,1.416,4024,2.453,4025,1.416,4026,1.589,4027,1.589,4028,1.416,4029,1.589,4030,1.589,4031,2.753,4032,1.589,4033,1.589,4034,1.589,4035,1.589,4036,2.453,4037,1.589,4038,1.301,4039,1.416,4040,1.416,4041,1.301,4042,1.416,4043,1.416,4044,1.416,4045,1.416,4046,1.301,4047,1.416,4048,1.416,4049,1.416,4050,1.416,4051,1.301,4052,1.416,4053,1.416,4054,2.453,4055,1.416,4056,2.753,4057,2.753,4058,2.753,4059,2.753,4060,4.344,4061,4.344,4062,4.344,4063,2.753,4064,2.753,4065,2.753,4066,2.753,4067,2.753,4068,2.753,4069,2.753,4070,2.753,4071,2.753,4072,2.753,4073,2.753,4074,2.753,4075,2.753,4076,2.753,4077,2.753,4078,2.753,4079,2.453,4080,1.589,4081,1.416,4082,1.416,4083,1.416,4084,2.255,4085,2.453,4086,1.301,4087,1.416,4088,1.301,4089,1.301,4090,1.416,4091,1.301,4092,1.301,4093,1.416,4094,1.416,4095,1.589,4096,2.753,4097,1.589,4098,2.753,4099,1.589,4100,1.589,4101,1.589,4102,1.589,4103,1.589,4104,3.643,4105,2.753,4106,1.589,4107,1.589,4108,2.753,4109,2.753,4110,1.589,4111,1.589,4112,4.344,4113,1.589,4114,1.589,4115,1.416,4116,1.416,4117,1.416,4118,1.416]],["title/interfaces/SessionCompanyItem.html",[762,0.139,1922,3.269]],["body/interfaces/SessionCompanyItem.html",[3,0.079,4,0.071,5,0.079,9,0.054,10,0.357,14,2.501,32,0.007,38,0.164,39,0.69,81,0.118,125,0.005,126,0.005,499,2.567,524,0.584,532,4.278,588,1.133,732,3.233,754,5.758,762,0.263,764,1.134,767,3.692,768,3.692,773,3.14,774,3.692,775,4.471,780,2.131,781,3.523,782,2.404,1225,1.833,1900,5.257,1901,4.405,1902,4.405,1903,4.405,1904,4.405,1905,4.405,1906,4.405,1907,4.187,1908,6.027,1909,4.405,1910,4.405,1911,6.027,1912,4.405,1913,4.405,1914,4.405,1915,4.405,1916,4.405,1917,4.187,1918,4.405,1919,4.405,1920,4.405,1921,4.405,1922,5.746,1923,6.34,1924,3.561,1925,4.405,1926,4.405]],["title/interfaces/SessionEntry.html",[762,0.139,2144,2.261]],["body/interfaces/SessionEntry.html",[3,0.065,4,0.058,5,0.065,9,0.044,10,0.314,32,0.007,37,0.422,38,0.159,39,0.609,81,0.123,125,0.004,126,0.004,159,1.746,267,2.937,272,3.496,411,3.196,416,2.653,428,1.931,524,0.585,588,1.319,741,2.206,762,0.273,764,0.931,782,1.973,1119,1.68,1218,3.675,1221,2.786,1223,1.781,1225,2.553,1536,2.415,1659,2.505,1888,2.107,1892,2.015,1894,3.281,1895,3.281,2038,2.505,2095,4.159,2096,2.736,2097,2.736,2098,2.825,2099,3.57,2100,2.825,2101,3.57,2102,2.825,2103,3.681,2104,2.968,2105,3.132,2106,3.681,2107,2.968,2108,3.116,2109,3.196,2110,3.681,2111,3.196,2112,3.681,2113,3.681,2114,3.681,2115,3.681,2116,2.653,2117,2.825,2118,2.825,2119,2.825,2120,3.57,2121,2.825,2122,2.577,2123,2.825,2124,3.681,2125,2.577,2126,3.371,2127,3.681,2128,3.57,2129,4.159,2130,2.825,2131,4.159,2132,2.825,2133,4.159,2134,2.577,2135,2.015,2136,2.825,2137,2.825,2138,2.316,2139,3.116,2140,3.116,2141,3.116,2142,3.04,2143,3.116,2144,3.196,2145,4.449,2146,2.505,2147,2.825,2148,2.577]],["title/components/SessionFilesModalComponent.html",[127,1.512,501,2.204]],["body/components/SessionFilesModalComponent.html",[3,0.023,4,0.021,5,0.087,7,3.7,9,0.027,10,0.142,11,0.805,12,0.997,16,3.111,23,0.353,24,1.038,29,0.903,31,0.692,32,0.007,36,0.635,37,0.517,38,0.13,39,0.429,42,0.644,43,0.632,58,1.443,64,0.462,65,0.678,66,1.566,67,0.22,73,2.905,75,0.577,80,0.493,81,0.023,82,0.165,83,0.611,84,1.157,85,0.508,97,0.666,108,0.919,111,1.461,113,1.365,115,2.437,125,0.002,126,0.002,127,1.261,128,0.826,129,1.373,130,1.886,131,1.08,132,0.847,133,0.847,136,1.522,137,3.041,138,0.786,141,4.126,142,1.443,143,1.49,144,1.443,145,1.886,147,2.046,148,1.913,150,1.522,153,2.65,157,1.907,159,0.623,182,0.806,185,0.869,186,0.869,189,2.243,197,3.487,227,2.327,237,4.055,239,4.569,240,2.728,241,4.797,245,3.76,246,5.851,247,4.383,248,2.728,249,3.329,250,4.569,253,5.12,254,4.782,255,4.782,256,4.383,257,5.118,258,4.383,259,4.014,260,3.76,262,3.079,263,2.953,264,4.03,265,5.317,266,4.14,267,2.472,268,1.913,269,3.85,271,1.225,273,2.35,274,3.76,275,4.228,276,4.569,277,4.014,278,2.728,279,1.289,280,3.454,281,4.217,282,5.12,283,1.991,284,2.606,285,3.454,286,4.411,287,2.606,289,1.365,290,1.994,292,3.079,295,1.17,296,2.606,297,4.228,303,4.829,304,2.953,308,2.327,309,3.454,310,5.399,311,4.014,312,3.454,313,3.607,314,3.607,315,3.936,316,1.17,319,4.383,320,3.85,321,2.327,322,3.592,323,4.231,324,4.055,325,3.47,327,2.088,328,1.225,331,3.079,332,3.079,334,4.014,335,1.994,337,1.225,338,3.76,339,4.055,341,2.5,342,3.902,343,4.014,344,4.014,345,4.014,346,3.454,348,3.804,349,2.728,350,3.76,351,2.87,352,3.079,353,3.592,354,1.994,356,1.994,362,3.079,363,2.088,364,1.289,365,3.079,369,1.365,370,1.289,371,1.225,374,3.76,375,2.728,379,4.03,380,2.327,381,1.461,382,2.49,384,2.327,386,2.5,389,1.913,391,1.95,394,2.606,396,1.225,397,2.088,398,1.365,400,1.994,401,2.088,403,1.289,407,2.196,410,0.975,411,0.847,422,1.589,430,1.365,434,2.35,435,1.365,436,1.913,437,1.289,442,1.122,443,2.088,444,1.913,445,1.17,449,0.847,450,1.443,451,1.407,452,0.847,453,2.228,454,0.847,455,0.847,456,0.826,457,0.847,458,0.826,459,0.847,460,0.847,461,0.847,462,0.826,463,0.847,464,0.826,465,0.847,466,0.826,467,1.443,468,0.847,469,0.847,470,0.847,471,1.711,472,0.847,473,0.826,474,0.847,475,0.847,476,0.703,477,0.847,478,0.826,479,0.847,480,0.826,481,0.847,482,0.847,483,0.806,484,0.847,485,0.826,486,0.847,487,0.847,488,0.826,489,0.847,490,0.826,491,0.847,492,0.847,493,0.847,494,0.847,495,0.826,496,0.847,497,0.826,498,2.932,499,0.751,500,1.443,501,2.172,502,0.826,503,0.847,504,0.847,505,0.826,506,0.847,524,0.308,554,0.975,558,1.08,573,1.08,631,0.611,649,3.041,701,1.225,702,1.461,710,1.365,720,1.289,750,1.225,753,2.49,755,1.461,780,0.42,810,0.931,862,2.606,863,1.913,865,2.327,866,1.252,883,1.225,1015,2.088,1028,0.869,1029,3.54,1043,3.041,1057,2.327,1058,2.327,1073,1.589,1146,0.975,1175,2.709,1177,2.709,1179,2.49,1184,2.49,1202,1.566,1244,1.994,1332,2.405,1347,3.592,1407,1.08,1470,2.49,1536,0.566,1591,2.728,1642,2.196,1683,1.289,1722,1.589,1896,1.662,2036,2.088,2190,1.612,2351,2.088,2357,2.327,2372,3.041,2395,2.327,2427,1.365,2443,1.365,2446,3.041,2449,1.461,2461,1.461,2462,1.461,2463,2.709,2464,3.844,2467,2.327,2471,2.49,2472,1.225,2474,1.589,2477,1.461,2479,2.49,2757,1.461,2919,4.313,3125,3.844,3131,3.254,3143,2.49,3192,2.327,3348,3.254,3397,1.589,3432,2.196,3484,1.461,3489,4.313,3565,1.17,3646,1.365,3993,1.589,3994,6.66,3995,3.54,3996,2.709,3998,2.709,3999,3.54,4002,4.182,4003,2.709,4004,3.254,4005,1.589,4006,1.589,4012,1.589,4013,1.589,4014,2.709,4015,3.254,4022,1.589,4023,1.589,4024,2.709,4025,1.589,4028,1.589,4036,2.709,4038,2.49,4039,1.589,4040,1.589,4041,2.49,4042,1.589,4043,1.589,4044,1.589,4045,1.589,4046,2.49,4047,1.589,4048,1.589,4049,1.589,4050,1.589,4051,1.461,4052,1.589,4053,1.589,4054,2.709,4055,1.589,4079,2.709,4081,1.589,4082,1.589,4083,1.589,4084,2.49,4085,2.709,4086,1.461,4087,1.589,4088,1.461,4089,1.461,4090,1.589,4091,1.461,4092,1.461,4093,1.589,4094,2.709,4115,1.589,4116,1.589,4117,1.589,4118,1.589,4119,8.035,4120,3.974,4121,3.041,4122,3.041,4123,4.695,4124,3.041,4125,3.041,4126,1.784,4127,4.695,4128,1.784,4129,1.784,4130,1.784,4131,1.784,4132,3.041,4133,1.784,4134,1.784,4135,1.784,4136,1.784,4137,1.784,4138,1.784,4139,1.784,4140,1.784,4141,1.784,4142,1.784,4143,1.784,4144,1.589,4145,1.589,4146,1.784,4147,1.784,4148,3.041,4149,3.041,4150,3.041,4151,3.041,4152,3.041,4153,3.041,4154,1.784,4155,1.784,4156,1.784,4157,1.784,4158,5.734,4159,1.784,4160,1.784,4161,3.974,4162,1.784,4163,3.041,4164,1.784,4165,1.784]],["title/injectables/SessionsEventsService.html",[0,0.191,2510,3.644]],["body/injectables/SessionsEventsService.html",[0,0.26,2,0.957,3,0.062,4,0.055,5,0.062,9,0.042,10,0.302,11,1.316,12,1.389,23,0.753,29,1.087,31,0.957,32,0.007,36,0.877,37,0.547,38,0.121,39,0.485,42,1.288,43,1.265,64,0.522,67,0.583,79,0.807,80,0.766,81,0.062,82,0.437,97,0.924,125,0.004,126,0.004,143,2.057,157,2.745,159,2.261,389,2.976,416,4.56,520,5.463,524,0.503,631,3.07,780,2.027,866,2.667,1202,3.134,1203,2.4,1236,3.784,1244,5.215,1530,1.421,1698,6.053,2494,3.873,2510,4.958,3340,5.773,3816,6.961,4166,9.583,4167,5.773,4168,6.481,4169,7.392,4170,7.392,4171,7.392,4172,7.952,4173,7.952,4174,7.952,4175,7.952,4176,7.952,4177,7.952,4178,7.952,4179,6.481,4180,6.481,4181,7.952,4182,7.952,4183,4.73,4184,4.73,4185,4.73,4186,4.73,4187,4.73,4188,4.73,4189,4.73,4190,6.481,4191,4.73,4192,6.481,4193,4.73,4194,4.73,4195,4.73,4196,4.73,4197,4.73,4198,4.73,4199,4.73,4200,4.73,4201,4.73,4202,4.73,4203,8.603,4204,6.585,4205,6.481,4206,4.73,4207,6.481,4208,4.73]],["title/interfaces/SessionsPort.html",[762,0.139,1935,2.883]],["body/interfaces/SessionsPort.html",[3,0.075,4,0.067,5,0.106,9,0.051,16,2.001,23,0.856,29,1.012,31,0.914,32,0.007,36,1.202,37,0.749,38,0.181,39,0.664,64,0.655,71,2.953,81,0.075,125,0.005,126,0.005,232,1.578,428,2.213,509,1.693,524,0.584,588,0.997,762,0.167,764,1.066,779,2.776,793,2.784,1200,2.784,1202,3.726,1203,2.124,1225,1.724,1226,2.31,1530,1.724,1924,3.349,1931,4.803,1935,4.458,1937,4.389,1938,4.142,1939,5.52,2144,2.722,2146,2.871,2620,6.031,2622,6.661,2624,6.661,2709,3.472,4209,5.736,4210,7.247,4211,7.247,4212,5.11,4213,5.736,4214,6.561,4215,5.736,4216,5.11,4217,5.736,4218,5.11,4219,5.736,4220,5.11,4221,5.736]],["title/injectables/SessionsService.html",[0,0.191,2080,3.644]],["body/injectables/SessionsService.html",[0,0.203,2,0.682,3,0.044,4,0.039,5,0.088,9,0.03,10,0.236,11,1.076,12,1.008,14,1.74,16,1.176,23,0.59,29,0.933,31,0.789,32,0.007,36,1.077,37,0.671,38,0.168,39,0.595,42,0.546,43,0.972,64,0.64,67,0.415,71,1.735,75,1.09,79,0.575,80,0.546,81,0.044,82,0.312,84,1.756,92,2.76,93,3.002,97,1.06,119,1.735,125,0.003,126,0.003,136,1.687,143,1.939,202,1.687,230,2.46,232,0.927,249,1.772,267,1.132,272,1.387,283,3.007,391,0.943,428,2.624,509,0.995,524,0.56,556,2.12,563,1.772,588,0.92,631,1.153,635,3.002,691,2.76,730,3.002,779,2.198,780,0.794,782,2.874,793,2.09,794,1.451,896,1.959,994,4.523,1015,2.314,1039,4.157,1158,2.76,1159,2.434,1162,2.579,1181,2.76,1189,3.002,1200,2.496,1202,3.301,1203,1.248,1218,1.522,1221,1.05,1225,1.836,1226,2.044,1236,2.965,1285,1.902,1304,3.002,1392,3.002,1487,3.002,1488,3.002,1509,2.542,1520,2.186,1523,2.044,1527,2.738,1528,1.451,1530,1.013,1531,1.328,1532,1.357,1536,2.525,1537,2.76,1553,3.485,1561,2.76,1663,1.968,1744,2.04,1785,4.157,1812,3.073,1822,5.441,1924,1.968,1931,4.273,1935,3.073,1937,2.579,1938,2.434,1939,4.891,2003,2.04,2004,2.76,2008,3.002,2011,2.12,2013,3.002,2029,2.21,2080,3.885,2144,2.41,2145,1.842,2146,3.403,2184,4.523,2438,4.157,2594,3.697,2620,4.157,2622,5.002,2624,5.002,2687,2.434,2700,2.76,2709,2.04,2767,3.667,2790,2.314,3028,2.579,3029,2.434,3032,3.667,3041,2.314,3172,3.002,3983,4.523,3989,3.002,4210,4.523,4211,5.441,4212,4.523,4214,4.523,4216,3.002,4218,3.002,4220,3.002,4222,3.002,4223,5.078,4224,5.078,4225,3.371,4226,3.371,4227,3.371,4228,3.371,4229,5.078,4230,3.371,4231,3.371,4232,3.371,4233,3.371,4234,3.371,4235,5.078,4236,5.078,4237,5.078,4238,3.371,4239,3.371,4240,3.371,4241,3.371,4242,3.371,4243,3.371,4244,3.371,4245,3.371,4246,3.371,4247,3.371,4248,6.109,4249,3.371,4250,6.109,4251,6.109,4252,3.371,4253,3.371,4254,7.294,4255,3.371,4256,3.371,4257,3.371,4258,3.371,4259,5.078,4260,3.371,4261,3.371,4262,3.371,4263,5.078,4264,3.371,4265,3.371,4266,3.371,4267,5.078,4268,5.078,4269,7.294,4270,3.371,4271,3.371,4272,3.371,4273,3.371,4274,3.371,4275,6.109,4276,3.371,4277,3.371,4278,3.371,4279,3.371,4280,3.371,4281,3.371,4282,5.078,4283,3.371,4284,3.371,4285,3.371,4286,6.109,4287,3.371,4288,6.799,4289,3.371,4290,3.371,4291,3.371,4292,3.371,4293,3.371,4294,3.371,4295,3.371,4296,3.371,4297,3.371,4298,3.371,4299,3.371,4300,3.371,4301,3.371,4302,3.371,4303,3.371,4304,3.371,4305,3.371,4306,3.371,4307,3.371,4308,3.371,4309,3.371,4310,3.371,4311,3.371,4312,3.371,4313,3.371,4314,3.371,4315,3.371,4316,3.371,4317,3.371,4318,3.002,4319,2.76,4320,3.002,4321,3.371]],["title/components/ShellLayout.html",[127,1.512,502,2.204]],["body/components/ShellLayout.html",[3,0.018,4,0.016,5,0.018,7,3.535,9,0.043,10,0.112,11,1.187,12,1.063,14,0.688,16,0.843,19,2.685,23,0.281,25,0.897,29,0.944,31,0.705,32,0.007,36,0.327,37,0.33,38,0.112,39,0.483,42,1.008,43,0.949,64,0.501,65,0.233,67,0.169,71,0.704,81,0.018,82,0.223,83,1.687,84,1.128,89,1.655,90,0.576,97,0.659,107,1.219,115,2.142,125,0.002,126,0.002,127,1.029,128,0.633,129,1.09,130,0.649,131,0.828,132,0.649,133,0.649,136,1.209,137,2.48,138,0.603,139,1.28,140,1.28,141,3.903,142,1.146,143,1.417,144,1.146,145,1.539,147,1.669,148,1.519,150,1.209,153,2.208,157,2.013,159,0.843,181,0.725,182,0.618,185,0.666,186,0.666,197,3.658,202,1.958,211,0.799,232,0.664,236,4.308,237,3.565,238,2.48,239,4.084,241,5.115,244,1.12,245,3.912,246,5.737,247,4.938,248,2.225,249,3.344,250,4.084,251,1.047,253,4.493,256,3.565,257,4.851,258,3.753,259,3.912,260,2.928,262,2.126,263,2.461,265,5.278,266,3.56,267,2.091,268,0.861,269,4.88,271,2.685,274,2.565,275,2.565,276,3.233,277,2.565,278,1.658,280,2.565,281,4.034,282,4.603,283,1.225,284,2.126,285,1.584,286,1.584,287,3.717,290,1.584,292,1.584,296,1.584,297,4.493,301,1.12,303,3.233,304,2.461,309,3.493,310,4.415,311,1.584,312,2.126,313,3.101,314,3.101,315,2.685,316,2.565,319,4.75,320,3.101,321,2.48,322,3.772,323,4.063,324,4.88,325,4.636,326,4.336,329,1.12,331,0.897,332,0.897,335,2.565,337,0.939,338,0.897,339,3.565,341,0.861,342,4.034,343,3.493,344,2.126,345,4.084,346,3.717,348,2.825,349,4.575,350,4.371,351,3.56,352,1.584,354,2.565,356,2.126,362,2.565,363,0.939,365,0.897,371,0.939,374,3.233,375,1.658,386,0.861,388,1.12,391,2.046,393,1.047,394,3.493,396,0.939,397,0.939,400,1.584,401,2.685,402,2.151,403,2.341,413,3.656,415,0.988,430,1.848,431,1.047,433,1.977,435,2.993,436,3.101,437,3.846,442,1.519,444,0.861,445,0.897,449,0.649,450,1.146,451,1.81,452,0.649,453,1.856,454,0.649,455,0.649,456,0.633,457,0.649,458,0.633,459,0.649,460,0.649,461,0.649,462,0.633,463,0.649,464,0.633,465,0.649,466,0.633,467,1.146,468,0.649,469,0.649,470,0.649,471,1.684,472,0.649,473,0.633,474,0.649,475,0.649,476,0.539,477,0.649,478,0.633,479,0.649,480,0.633,481,0.649,482,0.649,483,0.618,484,0.649,485,0.633,486,0.649,487,0.649,488,0.633,489,0.649,490,0.633,491,0.649,492,0.649,493,0.649,494,0.649,495,0.633,496,0.649,497,0.633,498,1.879,499,1.016,500,1.146,501,0.633,502,1.81,503,1.856,504,2.955,505,0.633,506,0.649,520,0.897,524,0.141,563,1.558,581,0.772,645,0.704,655,0.988,661,0.649,664,1.958,671,2.607,677,0.799,680,1.658,701,0.939,703,0.799,709,0.897,720,0.988,725,2.48,741,0.397,753,4.885,761,1.41,780,1.779,810,1.197,841,0.939,842,2.461,862,3.493,863,2.461,866,2.455,878,1.519,883,0.939,925,2.654,980,0.861,998,1.744,1021,0.897,1022,1.977,1026,1.219,1028,1.177,1031,1.12,1036,0.939,1043,4.075,1044,1.744,1045,1.219,1057,4.336,1058,4.075,1059,1.12,1063,2.654,1067,0.799,1068,1.12,1136,2.039,1236,1.41,1244,2.126,1292,1.519,1293,0.685,1332,1.962,1407,0.828,1412,3.484,1430,2.993,1497,2.151,1498,2.151,1591,2.225,1616,2.151,1617,2.225,1618,2.654,1619,2.151,1621,2.888,1637,3.484,1641,3.484,1642,1.744,1644,2.888,1655,2.151,1683,0.988,1684,2.151,1698,2.654,1701,4.391,1702,4.391,1703,2.565,1708,1.047,1710,3.977,1711,1.219,1712,0.988,1713,1.12,1730,2.654,1731,1.219,1774,0.828,1823,2.48,1938,0.988,2144,2.34,2190,1.28,2198,1.047,2204,2.993,2301,1.219,2303,1.219,2315,1.977,2321,2.888,2358,2.367,2402,1.219,2422,2.151,2427,1.848,2443,1.047,2444,5.547,2446,4.564,2448,1.219,2461,1.977,2462,1.977,2467,2.48,2472,0.939,2479,1.977,2481,1.219,2489,1.12,2491,1.219,2502,2.993,2509,2.888,2510,1.047,2532,1.219,2535,2.888,2537,2.888,2547,2.151,2700,1.12,2902,1.219,2944,1.462,3148,2.151,3156,1.219,3161,1.219,3162,1.219,3192,2.48,3207,0.939,3270,1.12,3345,1.219,3432,2.825,3868,1.047,3881,0.939,3994,6.497,4004,1.12,4015,2.654,4038,2.654,4041,1.12,4046,2.654,4051,1.977,4084,1.12,4086,1.12,4088,1.12,4089,1.12,4091,1.12,4092,1.12,4144,3.977,4145,1.219,4167,2.151,4204,1.219,4322,1.368,4323,3.242,4324,3.242,4325,3.242,4326,3.242,4327,3.242,4328,3.242,4329,3.242,4330,3.912,4331,3.912,4332,3.912,4333,3.912,4334,4.93,4335,2.415,4336,2.415,4337,3.912,4338,3.912,4339,3.912,4340,2.415,4341,1.368,4342,1.368,4343,1.368,4344,1.368,4345,1.368,4346,1.368,4347,2.415,4348,1.368,4349,2.415,4350,1.368,4351,1.368,4352,1.368,4353,1.368,4354,1.368,4355,1.368,4356,2.415,4357,1.368,4358,2.415,4359,1.368,4360,2.415,4361,1.368,4362,2.415,4363,1.368,4364,2.415,4365,1.368,4366,1.368,4367,1.368,4368,1.368,4369,1.368,4370,1.368,4371,2.415,4372,1.368,4373,1.368,4374,1.368,4375,1.368,4376,1.368,4377,1.368,4378,1.368,4379,2.415,4380,1.368,4381,2.415,4382,6.666,4383,1.368,4384,2.415,4385,1.368,4386,2.415,4387,2.415,4388,2.415,4389,2.151,4390,1.368,4391,1.368,4392,1.368,4393,1.368,4394,2.415,4395,1.368,4396,1.368,4397,1.368,4398,1.368,4399,1.368,4400,2.415,4401,1.368,4402,1.368,4403,2.415,4404,2.415,4405,2.415,4406,2.415,4407,2.415,4408,1.368,4409,1.368,4410,3.912,4411,1.368,4412,1.368,4413,2.415,4414,3.242,4415,1.368,4416,2.415,4417,1.368,4418,1.368,4419,3.242,4420,1.368,4421,1.368,4422,1.368,4423,1.368,4424,1.368,4425,1.368,4426,1.368,4427,1.368,4428,1.368,4429,1.368,4430,1.368,4431,1.368,4432,1.368,4433,1.368,4434,2.415,4435,2.415,4436,2.415,4437,2.415,4438,2.415,4439,1.368,4440,1.368,4441,1.219,4442,1.368,4443,2.415,4444,1.368,4445,2.415,4446,1.368,4447,1.368,4448,1.368,4449,2.415,4450,3.912,4451,1.368,4452,1.368,4453,1.368,4454,1.368,4455,1.368,4456,1.368,4457,2.415,4458,2.415,4459,1.368,4460,1.368,4461,1.368,4462,1.219,4463,1.368,4464,1.368,4465,1.368,4466,1.368,4467,1.368,4468,1.368,4469,1.368,4470,1.368,4471,1.368,4472,1.368,4473,2.415,4474,6.227,4475,7.17,4476,5.668,4477,3.912,4478,1.368,4479,1.368,4480,2.415,4481,1.368,4482,1.368,4483,1.368,4484,1.368,4485,2.415,4486,1.368,4487,1.368,4488,1.368,4489,1.368,4490,1.368,4491,1.368]],["title/injectables/SseService.html",[0,0.191,2079,3.269]],["body/injectables/SseService.html",[0,0.188,2,0.614,3,0.039,4,0.035,5,0.074,9,0.027,10,0.218,11,1.246,12,1.205,14,1.982,16,1.058,23,0.544,29,0.874,31,0.482,32,0.007,36,0.41,37,0.256,38,0.138,39,0.227,42,1.127,43,1.17,64,0.518,65,0.517,66,1.195,67,0.374,79,0.517,80,0.491,81,0.074,82,0.28,83,1.603,84,1.737,85,1.334,89,1.572,90,1.276,97,0.92,125,0.003,126,0.003,143,2.208,157,0.945,159,3.188,267,2.787,273,3.681,391,1.311,428,1.17,476,1.195,498,1.276,524,0.545,556,2.946,563,1.058,588,0.634,631,2.624,703,1.77,709,1.988,741,0.879,761,1.77,762,0.136,771,1.77,779,1.514,780,2.047,781,1.276,793,1.958,794,2.464,810,1.433,866,3.155,896,1.807,1017,2.32,1067,2.735,1119,1.018,1122,2.946,1221,2.292,1222,2.835,1225,2.38,1226,1.221,1285,2.643,1457,5.698,1523,1.886,1530,0.911,1531,1.195,1532,1.221,1536,0.962,1630,2.906,1681,2.735,1685,1.77,1687,1.907,1812,1.835,1888,3.095,1892,1.886,1931,2.865,1940,2.19,2069,2.19,2079,3.215,2104,2.064,2105,1.928,2107,2.064,2108,2.167,2122,2.411,2135,2.961,2138,3.403,2139,1.403,2140,1.403,2141,1.403,2142,1.369,2143,1.403,2148,1.561,2190,3.034,2195,3.583,2197,2.19,2329,2.735,2334,4.294,2358,4.64,2405,2.32,2472,3.928,2549,2.19,2571,2.081,2576,2.32,2594,2.835,2687,3.382,2691,1.77,2705,4.776,2709,1.835,2718,4.378,3026,2.081,3027,2.081,3520,2.19,3699,2.32,3757,4.133,3812,6.562,3813,6.484,3814,2.483,3815,2.19,3816,4.378,3817,2.483,3818,2.483,3819,2.32,3820,5.541,3821,5.048,3822,5.048,3823,5.048,3824,6.022,3825,4.686,3826,4.686,3827,4.686,3828,2.483,3829,2.483,3830,3.835,3831,3.835,3832,2.483,3833,2.483,3834,2.483,3835,3.835,3836,2.483,3837,2.483,3838,2.483,3839,2.483,3840,2.483,3841,2.483,3842,2.483,3843,2.483,3844,2.483,3845,2.483,3846,2.483,3847,2.483,3848,2.483,3849,2.483,3850,2.483,3851,3.835,3852,2.483,3853,2.483,3854,2.483,3855,3.835,3856,2.483,3857,2.483,3858,2.483,3859,4.686,3860,5.27,3861,5.697,3862,6.277,3863,6.484,3864,3.835,3865,5.697,3866,2.483,3867,2.483,3868,2.32,3869,2.32,3870,2.483,3871,2.483,3872,6.022,3873,2.483,3874,2.483,3875,2.483,3876,2.483,3877,2.483,3878,2.483,3879,2.483,3880,2.483,3881,2.081,3882,2.483,3883,3.835,3884,3.835,3885,2.483,3886,2.483,3887,3.835,3888,2.483,3889,2.483,3890,2.483,3891,2.483,3892,2.483,3893,2.483,3894,3.835,3895,2.483,3896,3.835,3897,2.483,3898,2.483,3899,2.483,3900,2.483,3901,2.483,3902,2.483,3903,2.483,3904,2.483,3905,2.483,3906,3.583,3907,2.483,3908,2.483,3909,2.483,3910,2.483,3911,2.483,3912,2.483,4492,3.032,4493,3.032,4494,3.032,4495,3.032,4496,3.032,4497,3.032,4498,3.032,4499,3.032]],["title/interfaces/Storage.html",[762,0.139,1893,3.44]],["body/interfaces/Storage.html",[3,0.088,4,0.078,5,0.088,9,0.059,10,0.407,32,0.007,36,0.911,37,0.807,38,0.152,81,0.118,125,0.005,126,0.005,389,4.233,524,0.578,762,0.265,764,1.251,780,2.061,781,2.832,810,2.676,1884,4.619,1885,5.148,1886,4.413,1887,5.148,1888,2.832,1889,5.148,1890,5.148,1891,5.148,1892,3.658,1893,6.561,1894,3.278,1895,3.964,1896,3.678,1897,5.148,1898,5.148,1899,5.148]],["title/interfaces/StreamResponse.html",[762,0.139,3819,3.644]],["body/interfaces/StreamResponse.html",[0,0.195,3,0.041,4,0.037,5,0.077,9,0.028,10,0.226,11,0.999,12,0.875,14,2.026,16,1.111,32,0.007,38,0.146,43,0.507,64,0.532,65,0.543,66,1.255,67,0.392,79,0.543,80,0.516,81,0.077,82,0.294,83,1.664,84,1.75,85,1.385,89,1.633,90,1.34,97,0.935,125,0.003,126,0.003,143,2.258,159,3.259,267,2.824,273,3.754,391,1.361,428,1.229,476,1.255,498,1.34,524,0.554,556,3.06,563,1.111,588,0.658,631,2.566,703,1.859,709,2.089,741,0.923,761,1.859,762,0.142,764,0.592,771,1.859,780,1.942,781,1.34,793,1.09,794,2.541,810,2.295,866,3.211,896,1.877,1017,2.437,1067,2.84,1119,1.069,1122,3.06,1221,2.337,1222,2.944,1225,2.417,1226,1.282,1285,2.745,1457,5.774,1523,1.282,1530,0.957,1531,1.255,1532,1.282,1536,1.011,1630,2.982,1681,1.859,1685,1.859,1687,2.003,1812,1.928,1888,3.156,1892,1.958,1931,2.435,1940,2.3,2069,2.3,2079,2.186,2104,2.144,2105,2.002,2107,2.144,2108,2.251,2122,2.504,2135,3.02,2138,3.47,2139,1.474,2140,1.474,2141,1.474,2142,1.438,2143,1.474,2148,1.64,2190,3.128,2195,3.721,2197,2.3,2329,2.84,2334,4.813,2358,2.944,2405,2.437,2472,4.05,2549,2.3,2571,2.186,2576,2.437,2594,2.944,2687,3.512,2691,1.859,2705,4.883,2709,1.928,2718,2.437,3026,2.186,3027,2.186,3520,2.3,3699,2.437,3757,2.3,3812,6.789,3813,2.608,3814,2.608,3815,2.3,3816,3.721,3817,2.608,3818,2.608,3819,3.721,3820,5.819,3821,5.659,3822,5.659,3823,5.659,3824,4.832,3825,2.608,3826,2.608,3827,4.832,3828,2.608,3829,2.608,3830,2.608,3831,3.983,3832,2.608,3833,2.608,3834,2.608,3835,3.983,3836,2.608,3837,2.608,3838,2.608,3839,2.608,3840,2.608,3841,2.608,3842,2.608,3843,2.608,3844,2.608,3845,2.608,3846,2.608,3847,2.608,3848,2.608,3849,2.608,3850,2.608,3851,3.983,3852,2.608,3853,2.608,3854,2.608,3855,3.983,3856,2.608,3857,2.608,3858,2.608,3859,4.832,3860,5.408,3861,5.825,3862,6.388,3863,6.587,3864,3.983,3865,5.825,3866,2.608,3867,2.608,3868,2.437,3869,2.437,3870,2.608,3871,2.608,3872,6.141,3873,2.608,3874,2.608,3875,2.608,3876,2.608,3877,2.608,3878,2.608,3879,2.608,3880,2.608,3881,2.186,3882,2.608,3883,3.983,3884,3.983,3885,2.608,3886,2.608,3887,3.983,3888,2.608,3889,2.608,3890,2.608,3891,2.608,3892,2.608,3893,2.608,3894,3.983,3895,2.608,3896,3.983,3897,2.608,3898,2.608,3899,2.608,3900,2.608,3901,2.608,3902,2.608,3903,2.608,3904,2.608,3905,2.608,3906,3.721,3907,2.608,3908,2.608,3909,2.608,3910,2.608,3911,2.608,3912,2.608]],["title/interfaces/StreamResponseModel.html",[762,0.139,2519,2.996]],["body/interfaces/StreamResponseModel.html",[3,0.086,4,0.076,5,0.086,9,0.058,10,0.374,32,0.007,38,0.176,81,0.104,125,0.005,126,0.005,159,3.227,267,2.211,476,2.596,524,0.581,588,0.891,762,0.234,764,1.224,771,3.845,810,2.878,1221,2.052,1225,1.979,1888,2.772,1892,2.652,2135,2.652,2138,3.048,2139,3.048,2140,3.048,2141,3.048,2142,2.973,2143,3.048,2334,5.266,2519,5.052,3815,4.756,3820,5.915,3821,6.191,3822,6.191,3823,6.191,3913,7.386,3914,5.867]],["title/injectables/ThemeService.html",[0,0.191,1691,3.644]],["body/injectables/ThemeService.html",[0,0.225,2,0.782,3,0.05,4,0.045,5,0.05,9,0.034,10,0.262,11,1.361,12,0.981,19,5.299,23,0.653,29,1.055,31,0.92,32,0.007,36,0.896,37,0.559,38,0.151,39,0.495,42,1.177,43,1.355,64,0.311,66,1.522,67,0.476,79,0.659,80,1.072,81,0.05,82,0.357,83,2.487,84,1.642,89,2.44,97,1.039,119,1.989,125,0.004,126,0.004,157,2.51,202,1.934,258,3.533,444,4.163,524,0.522,563,1.96,655,4.056,661,1.833,664,2.812,780,2.196,810,2.223,866,2.724,1147,3.407,1178,4.599,1187,3.441,1465,5.95,1495,2.18,1509,4.032,1601,3.533,1629,6.453,1638,5.003,1657,6.973,1658,7.529,1659,4.161,1663,3.279,1691,4.297,1703,3.684,1712,2.79,2058,4.765,2190,2.048,2790,3.855,2883,3.163,2950,5.95,3282,5.003,3283,5.003,3291,5.003,3293,5.003,3303,3.163,3324,3.441,3329,3.163,3330,3.163,3395,3.441,4441,3.441,4500,3.163,4501,6.618,4502,6.618,4503,7.266,4504,7.266,4505,7.266,4506,7.266,4507,7.266,4508,7.266,4509,3.863,4510,3.863,4511,5.617,4512,3.863,4513,3.863,4514,5.617,4515,5.617,4516,5.617,4517,5.617,4518,3.863,4519,3.863,4520,3.863,4521,3.863,4522,5.617,4523,3.863,4524,3.863,4525,3.863,4526,5.617,4527,3.863,4528,6.618,4529,3.863,4530,3.863,4531,5.617,4532,3.863,4533,3.441,4534,3.863,4535,3.863,4536,3.863,4537,3.863,4538,5.617,4539,3.863,4540,6.618,4541,3.863,4542,3.863,4543,5.617,4544,3.863,4545,3.863,4546,3.863,4547,3.863,4548,3.863,4549,3.863,4550,3.863,4551,3.863,4552,3.863,4553,3.863,4554,3.863,4555,3.863,4556,3.863,4557,3.863,4558,6.618,4559,3.863,4560,5.617,4561,7.72,4562,3.863,4563,3.863,4564,3.863,4565,3.863]],["title/interfaces/TimeSeriesPoint.html",[762,0.139,783,3.44]],["body/interfaces/TimeSeriesPoint.html",[3,0.075,4,0.067,5,0.075,9,0.051,10,0.344,14,1.643,32,0.007,37,0.487,38,0.138,81,0.112,82,0.533,125,0.005,126,0.005,512,3.256,524,0.583,532,3.601,588,1.232,602,3.629,631,1.974,732,3.058,762,0.238,763,3.783,764,1.073,765,3.368,766,4.414,767,3.492,768,3.492,769,4.414,770,4.414,771,3.368,772,4.414,773,2.97,774,3.492,775,3.368,776,4.414,777,4.414,778,3.96,780,2.263,781,3.621,782,2.274,783,5.338,784,6.212,785,4.56,786,3.783,787,4.414,788,4.414,789,4.414,790,3.96,791,4.414,792,3.96,793,1.974,794,2.484,795,3.629,796,4.414,797,4.166,798,4.414,799,4.414,800,3.783,801,4.414,802,4.414,803,4.414,804,4.414,805,4.414,806,4.414,807,4.414,808,4.166,809,4.414,810,2.831,811,4.414,812,4.414,813,4.414,814,4.414,815,4.414,816,4.414,817,4.414,818,4.414,819,4.414,820,4.414,821,4.414,822,4.414,823,4.166,824,3.629,825,4.414,826,6.241,827,3.96,828,4.166,829,1.328,830,4.166]],["title/injectables/TokenStorageService.html",[0,0.191,1685,2.781]],["body/injectables/TokenStorageService.html",[0,0.298,2,1.181,3,0.076,4,0.068,5,0.076,9,0.051,23,0.865,29,1.04,31,0.939,32,0.007,36,1.008,37,0.629,38,0.139,39,0.557,64,0.47,67,0.719,79,0.996,80,0.945,81,0.076,82,0.539,83,3.054,84,1.408,89,2.997,97,1.037,125,0.005,126,0.005,157,2.556,524,0.559,780,2.15,810,2.279,1223,2.65,1601,3.671,1630,3.362,1632,7.696,1685,4.348,3329,4.778,3330,4.778,4566,8.263,4567,5.198,4568,8.64,4569,8.64,4570,8.64,4571,7.447,4572,7.447,4573,5.836,4574,5.836,4575,5.836,4576,5.836,4577,7.447,4578,5.836,4579,7.447,4580,5.836,4581,5.198,4582,5.198,4583,5.198,4584,5.836,4585,5.836,4586,5.836,4587,5.836,4588,5.836]],["title/interfaces/Tool.html",[762,0.139,1895,2.321]],["body/interfaces/Tool.html",[3,0.084,4,0.075,5,0.084,9,0.057,10,0.401,32,0.007,36,1.214,37,0.801,38,0.178,81,0.117,125,0.005,126,0.005,389,4.077,524,0.575,762,0.261,764,1.205,779,2.571,780,2.027,781,2.727,810,2.904,1884,4.448,1885,4.958,1886,4.25,1887,4.958,1888,2.727,1889,4.958,1890,4.958,1891,4.958,1892,3.612,1893,6.212,1894,3.157,1895,4.191,1896,3.542,1897,6.862,1898,6.862,1899,4.958]],["title/injectables/TtsService.html",[0,0.191,2513,3.9]],["body/injectables/TtsService.html",[0,0.181,2,0.588,3,0.038,4,0.034,5,0.038,9,0.026,10,0.211,11,1.222,12,1.36,14,1.942,23,0.526,24,2.094,29,1.02,31,0.803,32,0.007,36,0.851,37,0.531,38,0.128,39,0.47,42,1.375,43,1.33,46,2.332,58,2.985,64,0.234,66,1.144,67,0.358,79,0.495,80,0.47,81,0.038,82,0.268,83,2.807,84,1.627,85,1.942,89,2.754,90,1.906,97,0.932,110,3.465,125,0.003,126,0.004,143,1.767,157,2.125,159,1.58,249,2.521,251,2.221,257,2.741,273,3.148,524,0.422,542,3.109,563,2.194,581,2.556,588,1.021,631,1.905,646,1.904,661,1.378,664,3.148,710,2.221,761,3.672,780,1.932,823,2.097,829,1,866,2.291,1024,2.586,1028,1.415,1055,2.378,1096,4.034,1118,4.559,1128,2.221,1136,2.849,1144,2.586,1203,1.075,1235,2.378,1292,1.827,1293,1.453,1319,3.109,1390,2.221,1623,4.924,1662,3.109,1703,4.472,2036,1.993,2057,2.378,2182,2.586,2358,1.757,2396,2.586,2489,3.708,2512,7.306,2513,3.708,2541,2.586,2593,6.074,2604,6.287,2691,2.644,2705,4.317,2756,5.602,2944,1.757,3466,2.586,3646,2.221,3869,2.221,4389,2.586,4589,2.904,4590,5.568,4591,5.568,4592,5.568,4593,5.568,4594,6.289,4595,6.289,4596,5.568,4597,6.289,4598,5.568,4599,5.568,4600,6.289,4601,6.289,4602,6.289,4603,4.529,4604,6.289,4605,4.529,4606,2.904,4607,7.546,4608,7.546,4609,2.904,4610,8.021,4611,4.529,4612,2.904,4613,2.904,4614,4.529,4615,6.289,4616,2.904,4617,2.904,4618,4.529,4619,2.904,4620,2.904,4621,4.529,4622,2.904,4623,2.904,4624,4.529,4625,2.904,4626,2.904,4627,2.904,4628,4.529,4629,2.904,4630,2.904,4631,6.289,4632,2.904,4633,2.904,4634,2.904,4635,4.529,4636,2.904,4637,2.904,4638,2.904,4639,4.529,4640,4.529,4641,2.904,4642,2.904,4643,2.904,4644,4.529,4645,2.904,4646,4.529,4647,6.819,4648,5.568,4649,2.904,4650,2.904,4651,2.904,4652,4.529,4653,2.904,4654,2.904,4655,6.289,4656,2.904,4657,4.529,4658,4.529,4659,2.904,4660,2.904,4661,2.904,4662,5.568,4663,2.904,4664,4.529,4665,2.904,4666,4.529,4667,2.904,4668,4.529,4669,2.904,4670,4.529,4671,2.904,4672,2.904,4673,2.904,4674,6.289,4675,2.904,4676,6.289,4677,4.529,4678,2.904,4679,5.568,4680,4.529,4681,2.904,4682,2.904,4683,2.904,4684,2.904,4685,2.904,4686,2.904,4687,2.904,4688,6.819,4689,2.904,4690,2.904,4691,7.225,4692,4.529,4693,4.529,4694,2.904,4695,2.904,4696,2.904,4697,2.904,4698,4.529,4699,2.904,4700,2.904,4701,6.436,4702,2.904,4703,2.904,4704,2.904,4705,2.904,4706,4.529,4707,2.904,4708,4.529,4709,2.904,4710,2.904,4711,2.904,4712,2.904,4713,4.529,4714,4.529,4715,2.904,4716,2.904,4717,2.904,4718,2.904,4719,2.904,4720,2.904,4721,4.529,4722,2.904,4723,2.904,4724,2.904,4725,2.904,4726,2.904,4727,2.904,4728,5.568,4729,2.904,4730,2.904,4731,2.904,4732,6.289,4733,2.904,4734,2.904,4735,2.904,4736,4.529,4737,2.904,4738,2.904,4739,2.904,4740,2.904]],["title/injectables/TypewriterService.html",[0,0.191,2506,3.9]],["body/injectables/TypewriterService.html",[0,0.286,2,1.109,3,0.071,4,0.064,5,0.071,9,0.048,10,0.333,11,1.26,12,1.18,23,0.831,29,1.023,31,0.868,32,0.007,36,0.968,37,0.604,38,0.168,39,0.535,42,1.289,43,1.267,64,0.641,67,0.675,79,0.935,80,0.887,81,0.071,82,0.507,84,1.352,97,0.831,119,4.506,125,0.005,126,0.005,157,2.797,428,3.377,588,1.142,691,4.487,698,5.471,780,1.988,810,1.677,1481,4.487,1495,4.036,1530,1.647,1892,2.206,2029,3.594,2332,5.432,2505,7.796,2506,5.855,2552,4.192,2604,3.957,2766,5.164,2767,5.748,2790,3.761,2802,4.487,3573,6.37,3587,4.881,3590,4.881,3700,4.881,3820,3.594,3932,4.881,3948,4.881,4319,4.487,4741,5.48,4742,7.96,4743,7.96,4744,7.96,4745,7.96,4746,7.96,4747,5.48,4748,5.48,4749,5.48,4750,5.48,4751,5.48,4752,7.96,4753,7.09,4754,5.48,4755,7.151,4756,8.437,4757,7.151,4758,5.48,4759,5.48,4760,5.48,4761,7.96,4762,5.48,4763,5.48,4764,5.48,4765,7.151,4766,5.48,4767,5.48,4768,5.48,4769,7.151,4770,5.48]],["title/injectables/UpdateAppInfoUseCase.html",[0,0.191,4771,4.243]],["body/injectables/UpdateAppInfoUseCase.html",[0,0.323,2,1.342,3,0.105,4,0.077,5,0.086,7,3.657,9,0.058,10,0.375,11,1.22,12,1.288,13,5.687,23,0.937,29,0.919,31,0.682,32,0.007,36,0.897,37,0.56,38,0.163,39,0.496,42,1.074,43,1.055,44,6.602,64,0.728,65,1.131,67,0.817,74,4.55,75,2.143,76,4.787,78,3.068,79,1.131,80,1.074,81,0.086,82,0.613,97,0.77,104,4.749,125,0.005,126,0.005,793,2.269,829,1.449,1193,3.424,1198,3.111,2010,5.905,2923,6.168,3076,5.905,3078,5.905,4771,7.182,4772,8.689,4773,6.629,4774,6.629]],["title/injectables/UpdateUserUseCase.html",[0,0.191,1858,3.9]],["body/injectables/UpdateUserUseCase.html",[0,0.323,2,1.339,3,0.086,4,0.077,5,0.086,9,0.058,10,0.375,11,1.219,12,1.287,23,0.936,29,0.918,31,0.681,32,0.007,36,0.896,37,0.559,38,0.151,39,0.495,42,1.072,43,1.053,64,0.699,65,1.129,67,0.815,75,2.14,78,3.063,79,1.129,80,1.072,81,0.086,82,0.612,97,0.769,104,4.746,125,0.005,126,0.005,524,0.507,793,3.092,829,1.447,1100,4.27,1193,3.422,1197,4.901,1198,3.35,1287,5.817,1289,4.006,1290,3.407,1291,4.34,1790,3.735,1858,6.595,2922,5.419,2924,5.896,2925,5.896,2964,5.896,4775,8.683,4776,6.619]],["title/injectables/UploadFileUseCase.html",[0,0.191,2683,3.644]],["body/injectables/UploadFileUseCase.html",[0,0.319,2,1.316,3,0.085,4,0.075,5,0.122,9,0.057,10,0.371,11,1.21,12,1.277,16,3.006,23,0.926,29,0.908,31,0.669,32,0.007,36,0.88,37,0.549,38,0.149,39,0.486,42,1.29,43,1.268,50,6.096,64,0.693,65,1.109,67,0.801,72,4.09,73,3.086,75,2.102,77,4.463,78,3.008,79,1.109,80,1.053,81,0.085,82,0.601,97,0.756,125,0.005,126,0.005,524,0.539,829,1.431,1083,5.068,1193,3.395,1198,3.324,1202,3.539,1203,2.408,2683,6.096,4777,8.615,4778,6.502,4779,6.502,4780,6.502,4781,6.502,4782,6.502]],["title/interfaces/UploadedFileMeta.html",[73,2.261,762,0.139]],["body/interfaces/UploadedFileMeta.html",[3,0.072,4,0.064,5,0.104,9,0.049,10,0.335,32,0.007,38,0.18,39,0.718,64,0.445,72,3.48,73,3.795,81,0.104,125,0.005,126,0.005,232,1.521,283,2.091,392,3.349,410,4.628,509,1.633,516,2.228,524,0.584,588,1.146,741,2.455,762,0.233,764,1.029,780,2.262,810,2.753,829,1.521,1082,3.23,1083,4.061,1084,5.313,1146,4.628,1147,4.359,1202,2.18,1208,2.008,1209,2.18,1225,2.545,1536,2.688,1792,2.56,2135,3.409,2996,4.53,2999,3.798,3003,3.798,3007,5.812,3008,5.812,3009,5.812,3010,5.812,3011,5.812,3012,5.812,3013,3.48]],["title/interfaces/UploadedFileMeta-1.html",[73,1.885,391,1.112,762,0.116]],["body/interfaces/UploadedFileMeta-1.html",[0,0.243,3,0.056,4,0.05,5,0.099,9,0.038,10,0.282,11,0.851,12,0.898,17,4.249,24,1.991,32,0.007,37,0.362,38,0.173,39,0.689,64,0.672,65,0.733,67,0.529,73,3.332,79,0.733,80,0.695,81,0.091,82,0.397,84,1.707,85,1.223,97,0.935,125,0.004,126,0.004,138,2.67,230,1.729,232,2.212,283,1.623,391,1.696,392,2.599,410,4.168,509,1.788,516,1.729,524,0.573,534,2.816,563,1.498,588,1.13,631,1.469,646,2.816,664,2.149,741,2.211,762,0.176,764,0.798,780,2.189,794,2.609,810,2.554,829,1.37,896,1.657,1082,4.099,1083,3.962,1084,4.867,1146,4.168,1147,3.926,1200,2.61,1202,3.005,1208,2.199,1209,1.692,1225,2.292,1285,2.423,1293,2.149,1520,1.849,1523,1.729,1525,1.987,1527,1.729,1528,1.849,1529,2.609,1530,1.29,1531,1.692,1532,1.729,1536,2.78,1538,3.419,1541,2.423,1544,2.423,1552,3.614,1554,2.347,1555,3.837,1744,2.599,1792,1.987,1800,2.599,1802,2.701,2083,2.947,2125,2.21,2135,3.07,2190,2.276,2594,2.599,2999,2.947,3003,2.947,3007,5.234,3008,5.234,3009,5.234,3010,5.234,3011,5.234,3012,5.234,3013,2.701,3014,3.516,3021,3.101,3022,3.516,3023,3.516,3024,3.516,3025,3.516,3026,2.947,3027,2.947,3028,3.285,3029,3.101,3030,3.516,3031,4.961,3032,3.101,3033,3.516,3034,3.516,3035,4.961,3036,3.516,3037,3.516,3038,3.516,3039,3.516,3040,3.516,3041,2.947,3042,3.516,3043,3.516,3044,3.516,3045,3.516,3046,3.516,3047,3.516,3048,3.516,3049,3.516,3050,3.516,3051,3.516,3052,3.516,3053,4.961,3054,3.516,3055,3.516,3056,3.516,3057,4.961,3058,3.285,3059,3.516]],["title/injectables/UpsertRiskWeightsUseCase.html",[0,0.191,1593,3.9]],["body/injectables/UpsertRiskWeightsUseCase.html",[0,0.321,2,1.328,3,0.085,4,0.076,5,0.085,9,0.058,10,0.373,11,1.215,12,1.283,23,0.931,29,0.913,31,0.676,32,0.007,36,0.889,37,0.554,38,0.15,39,0.491,42,1.063,43,1.045,64,0.696,65,1.12,67,0.809,75,2.123,78,3.038,79,1.12,80,1.063,81,0.085,82,0.607,97,0.763,125,0.005,126,0.005,588,1.171,781,3.641,829,1.44,1193,3.41,1197,4.883,1198,3.338,1563,7.084,1567,5.042,1568,6.184,1589,7.084,1593,6.563,1594,7.707,2086,5.022,3068,5.848,3069,5.848,3070,7.139,3071,5.848,3072,4.741,3073,4.13,4783,6.565,4784,6.565]],["title/interfaces/UserProfile.html",[762,0.139,2170,2.883]],["body/interfaces/UserProfile.html",[3,0.08,4,0.072,5,0.08,9,0.054,10,0.36,31,0.795,32,0.007,38,0.165,39,0.578,81,0.118,125,0.005,126,0.005,524,0.588,741,2.558,762,0.265,764,1.15,794,3.627,1119,2.828,1221,2.407,1223,3.296,1226,3.11,1630,3.487,1788,4.433,1789,4.578,1791,3.763,1811,3.183,1896,3.38,2161,3.61,2165,3.61,2168,3.743,2170,4.675,2171,3.61,2172,3.743,2944,3.743,3561,4.465,3562,4.465,3563,4.465,3564,4.465,3565,4.055,3566,4.465]],["title/interfaces/VideoData.html",[762,0.139,2131,2.603]],["body/interfaces/VideoData.html",[3,0.067,4,0.059,5,0.067,9,0.045,10,0.318,32,0.007,37,0.432,38,0.144,81,0.123,125,0.005,126,0.005,159,1.786,267,2.956,272,2.814,411,3.245,416,2.714,428,1.975,524,0.584,588,1.322,741,2.553,762,0.274,764,0.952,782,2.017,1119,1.719,1218,2.311,1221,2.56,1223,1.821,1225,2.054,1536,2.795,1659,2.563,1888,2.155,1892,2.061,1894,3.331,1895,3.331,2038,2.563,2095,4.207,2096,2.798,2097,2.798,2098,2.889,2099,3.624,2100,2.889,2101,3.624,2102,2.889,2103,3.737,2104,3.013,2105,3.168,2106,3.737,2107,3.013,2108,3.163,2109,3.245,2110,3.737,2111,3.245,2112,3.737,2113,3.737,2114,3.737,2115,3.737,2116,2.714,2117,2.889,2118,2.889,2119,2.889,2120,3.624,2121,2.889,2122,2.636,2123,2.889,2124,3.737,2125,2.636,2126,3.422,2127,3.737,2128,3.624,2129,4.207,2130,2.889,2131,4.49,2132,4.636,2133,4.207,2134,2.636,2135,2.061,2136,2.889,2137,2.889,2138,2.369,2139,3.163,2140,3.163,2141,3.163,2142,3.086,2143,3.163,2144,2.43,2145,2.798,2146,2.563,2147,2.889,2148,2.636]],["title/dependencies.html",[4785,3.539,4786,5.106]],["body/dependencies.html",[32,0.007,67,0.852,70,4.184,125,0.006,126,0.006,182,3.121,185,4.31,186,3.368,645,3.559,1406,5.66,1530,2.077,1964,7.365,1965,5.676,2051,5.66,2187,5.66,2188,5.288,3336,6.157,4786,6.157,4787,6.913,4788,9.808,4789,6.913,4790,6.913,4791,6.913,4792,8.269,4793,6.913,4794,6.913,4795,6.913,4796,6.913,4797,6.913,4798,6.913,4799,6.913,4800,6.913,4801,6.913,4802,6.913,4803,6.913,4804,6.913,4805,6.913]],["title/miscellaneous/enumerations.html",[4806,2.499,4807,5.106]],["body/miscellaneous/enumerations.html",[9,0.063,32,0.007,43,1.573,125,0.006,126,0.006,2096,3.878,2097,4.59,2103,4.59,2104,3.701,2105,3.456,2106,4.59,2107,3.701,2108,3.886,2109,3.985,2110,4.59,2111,3.985,2112,4.59,2113,4.59,2114,4.59,4806,4.463,4807,6.319,4808,7.094]],["title/miscellaneous/functions.html",[4806,2.499,4809,4.693]],["body/miscellaneous/functions.html",[9,0.055,31,0.968,32,0.007,36,1.287,37,0.803,38,0.174,39,0.711,43,1.234,125,0.005,126,0.005,588,1.049,709,4.08,780,1.466,800,4.08,896,2.401,1200,2.653,1203,2.304,1208,2.258,1436,5.094,1527,3.122,1884,5.322,2016,5.094,2030,5.542,2053,6.349,2332,3.766,2336,3.914,2351,4.271,3021,5.599,3058,4.76,3630,5.542,3631,6.907,3704,5.542,3713,6.907,3718,6.907,3719,5.542,4222,5.542,4318,5.542,4319,5.094,4320,5.542,4806,3.914,4809,5.094,4810,7.754,4811,7.754,4812,9.098,4813,7.754,4814,7.754,4815,5.542,4816,5.542,4817,6.222,4818,6.222,4819,7.754,4820,7.754,4821,7.754,4822,6.222,4823,6.222,4824,6.222,4825,6.222,4826,6.222,4827,6.222,4828,6.222,4829,6.222,4830,6.222,4831,6.222,4832,6.222,4833,6.222,4834,6.222,4835,6.222]],["title/index.html",[9,0.035,4701,3.539,4836,3.973]],["body/index.html",[4,0.072,16,2.154,32,0.005,42,1.25,125,0.005,126,0.005,127,2.672,129,2.787,232,1.698,505,2.857,631,2.113,646,5.061,703,5.406,761,3.605,773,3.179,808,4.459,1028,3.008,1198,2.382,1244,4.049,1319,4.238,1567,3.884,1800,5.095,1894,3.008,1965,4.238,2070,5.055,2120,3.273,2126,3.09,2181,4.459,2188,6.44,2758,7.221,3165,5.5,3513,6.874,3729,5.5,3881,4.238,4753,5.5,4837,8.418,4838,6.174,4839,8.086,4840,6.174,4841,7.717,4842,9.078,4843,9.259,4844,9.259,4845,6.174,4846,6.874,4847,6.174,4848,6.174,4849,6.174,4850,6.174,4851,6.174,4852,6.174,4853,7.717,4854,7.717,4855,6.174,4856,6.174,4857,8.418,4858,6.174,4859,6.174,4860,6.174,4861,6.174,4862,6.174,4863,6.174,4864,6.174,4865,6.174,4866,6.174,4867,6.174,4868,6.174,4869,6.174,4870,6.174,4871,7.717,4872,8.418,4873,6.174,4874,6.174,4875,6.174,4876,6.174,4877,8.418,4878,6.174,4879,6.174,4880,7.717,4881,6.174,4882,6.174,4883,6.174,4884,6.174,4885,6.174,4886,6.174,4887,6.174,4888,6.174,4889,6.174,4890,6.174,4891,6.174,4892,6.174,4893,6.174]],["title/modules.html",[4894,5.8]],["body/modules.html",[32,0.006,125,0.006,126,0.006,4894,6.953]],["title/overview.html",[773,3.352]],["body/overview.html",[2,1.556,32,0.006,125,0.006,126,0.006,129,3.471,764,1.429,773,3.958,1774,4.653,4895,7.688,4896,7.688,4897,7.688,4898,7.688]],["title/properties.html",[10,0.267,4785,3.539]],["body/properties.html",[10,0.361,32,0.006,125,0.006,126,0.006,1567,4.882,4899,7.761]],["title/miscellaneous/typealiases.html",[4806,2.499,4900,5.732]],["body/miscellaneous/typealiases.html",[9,0.059,14,2.299,32,0.007,38,0.151,42,1.075,125,0.005,126,0.005,273,3.324,410,3.629,524,0.388,779,2.147,790,4.558,1146,3.629,1147,3.419,1629,5.828,1657,5.437,1658,5.437,1659,3.324,1886,5.702,2104,2.927,2105,2.733,2107,2.927,2108,3.073,2109,3.151,2111,3.151,2199,5.437,2207,7.189,2225,7.189,2254,5.915,2255,5.915,2256,5.915,2257,5.915,2326,5.437,2327,6.608,2328,5.54,2329,3.877,2330,5.08,2331,5.437,2337,4.558,2493,5.437,2494,6.608,2503,6.608,2518,7.189,2874,5.915,2875,7.189,2904,5.915,2905,5.915,2968,5.915,2987,7.189,4500,5.437,4806,4.177,4815,7.745,4901,6.64,4902,7.189,4903,6.64,4904,6.64,4905,5.915]],["title/miscellaneous/variables.html",[4806,2.499,4906,5.106]],["body/miscellaneous/variables.html",[7,2.543,9,0.029,32,0.007,38,0.171,42,1.566,43,1.539,76,4.363,77,4.147,84,1.44,89,1.111,97,0.946,115,2.735,125,0.003,126,0.003,143,1.918,157,1.031,202,1.657,342,2.003,391,0.926,411,2.377,471,1.425,483,1.494,520,2.171,524,0.476,631,2.954,661,1.571,703,1.933,794,1.425,829,0.595,841,2.272,980,2.082,1036,2.272,1210,5.154,1223,1.178,1224,2.272,1291,4.418,1293,2.507,1450,2.71,1495,2.827,1509,2.507,1517,2.39,1527,1.333,1531,2.655,1534,3.15,1601,3.15,1630,3.267,1662,2.272,1663,1.933,1669,2.71,1671,2.532,1681,1.933,1723,2.71,1798,2.171,1800,2.003,1811,1.704,1934,4.622,1940,2.39,1965,2.272,2000,2.532,2016,2.71,2017,2.948,2021,4.461,2022,2.948,2023,2.948,2024,2.948,2025,5.382,2031,4.461,2032,4.461,2033,2.948,2034,2.71,2035,2.71,2036,2.272,2037,6.001,2038,1.657,2039,2.948,2040,2.948,2041,2.948,2042,2.948,2043,7.794,2044,2.71,2045,4.461,2046,2.532,2047,2.948,2048,2.948,2049,2.948,2050,2.948,2051,2.71,2052,2.948,2053,2.71,2054,2.948,2055,2.948,2056,5.382,2057,2.71,2058,2.171,2059,2.948,2060,2.948,2061,5.382,2062,3.832,2063,2.948,2064,2.948,2065,2.948,2066,2.948,2067,2.948,2068,2.948,2069,2.39,2070,2.71,2071,2.532,2072,2.948,2073,2.948,2074,2.71,2075,2.71,2076,2.948,2077,5.516,2078,7.424,2079,2.272,2080,2.532,2081,4.363,2082,2.532,2083,2.272,2084,5.154,2085,2.39,2086,5.154,2087,2.39,2088,5.516,2089,4.461,2090,4.101,2091,2.948,2092,2.948,2093,2.532,2094,2.532,2150,2.948,2155,4.622,2157,4.461,2158,2.948,2161,1.933,2187,2.71,2188,3.832,2196,2.948,2197,2.39,2199,2.71,2258,4.461,2259,2.948,2260,4.461,2261,2.948,2262,4.461,2263,2.948,2264,4.461,2265,2.948,2691,1.933,2758,2.71,2939,2.948,2942,7.69,3061,2.948,3092,1.933,3113,2.948,3118,4.461,3119,2.948,3164,2.948,3183,2.272,3203,2.532,3261,2.71,3277,2.948,3303,5.516,3304,2.948,3307,2.71,3757,3.617,3797,2.948,3799,2.948,3810,4.461,3811,2.948,4462,2.948,4500,2.71,4533,2.948,4566,2.948,4567,5.382,4581,2.948,4582,4.461,4583,2.948,4806,2.082,4809,2.71,4816,2.948,4839,2.948,4846,2.948,4902,6.001,4905,2.948,4906,2.948,4907,8.496,4908,5.008,4909,6.737,4910,3.31,4911,5.008,4912,3.31,4913,3.31,4914,5.008,4915,6.042,4916,5.008,4917,3.31,4918,3.31,4919,3.31,4920,5.008,4921,5.008,4922,3.31,4923,6.042,4924,5.008,4925,3.31,4926,3.31,4927,3.31,4928,7.236,4929,3.31,4930,3.31,4931,3.31,4932,3.31,4933,3.31,4934,3.31,4935,3.31,4936,3.31,4937,3.31,4938,3.31,4939,3.31,4940,5.008,4941,3.31,4942,3.31,4943,3.31,4944,3.31,4945,3.31,4946,5.008,4947,3.31,4948,3.31,4949,3.31,4950,3.31,4951,3.31,4952,3.31,4953,3.31,4954,3.31,4955,3.31,4956,3.31,4957,3.31,4958,5.008,4959,3.31,4960,3.31,4961,3.31,4962,3.31,4963,3.31,4964,3.31,4965,3.31,4966,3.31,4967,3.31,4968,3.31,4969,3.31,4970,8.633,4971,7.236,4972,3.31,4973,3.31,4974,3.31,4975,7.613,4976,3.31,4977,3.31,4978,3.31,4979,3.31,4980,3.31,4981,3.31]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":249,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"components/HeaderComponent.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["0.0.0",{"_index":4899,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":4805,"title":{},"body":{"dependencies.html":{}}}],["0.02",{"_index":4114,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["0.03",{"_index":1027,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["0.05",{"_index":341,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.08",{"_index":361,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["0.1",{"_index":339,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.12",{"_index":699,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["0.15",{"_index":248,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.16",{"_index":3196,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.18",{"_index":3194,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["0.2",{"_index":323,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.25",{"_index":4083,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["0.25rem",{"_index":364,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["0.2s",{"_index":4443,"title":{},"body":{"components/ShellLayout.html":{}}}],["0.3",{"_index":256,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.35",{"_index":3207,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"components/ShellLayout.html":{}}}],["0.375rem",{"_index":745,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["0.3s",{"_index":343,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.4",{"_index":362,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.4s",{"_index":4086,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.5",{"_index":436,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.5rem",{"_index":280,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.5s",{"_index":430,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.6",{"_index":386,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.65",{"_index":3469,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["0.6rem",{"_index":4488,"title":{},"body":{"components/ShellLayout.html":{}}}],["0.7",{"_index":354,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.75rem",{"_index":312,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.8",{"_index":304,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.85",{"_index":4484,"title":{},"body":{"components/ShellLayout.html":{}}}],["0.85rem",{"_index":390,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["0.875rem",{"_index":371,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.8].map((x",{"_index":3454,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["0.8rem",{"_index":414,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["0.9",{"_index":401,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["0.95",{"_index":4483,"title":{},"body":{"components/ShellLayout.html":{}}}],["0.95rem",{"_index":2491,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["0.9rem",{"_index":369,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["0.overflow",{"_index":4464,"title":{},"body":{"components/ShellLayout.html":{}}}],["047857",{"_index":424,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["059669",{"_index":418,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["1",{"_index":391,"title":{"interfaces/AdminUserItem-1.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/UploadedFileMeta-1.html":{}},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"classes/AppTranslateLoader.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/variables.html":{}}}],["1..1",{"_index":2317,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["1.125rem",{"_index":4097,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["1.1rem",{"_index":388,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ShellLayout.html":{}}}],["1.25rem",{"_index":365,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["1.2rem",{"_index":301,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ShellLayout.html":{}}}],["1.4",{"_index":4107,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["1.5",{"_index":2452,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["1.5rem",{"_index":309,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["1.5s",{"_index":2469,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["1.6",{"_index":1068,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{}}}],["1.6rem",{"_index":448,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["1.8rem",{"_index":446,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{}}}],["1.min",{"_index":4463,"title":{},"body":{"components/ShellLayout.html":{}}}],["10",{"_index":677,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"components/ShellLayout.html":{}}}],["100",{"_index":257,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["1000",{"_index":2438,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/ChatUtilsService.html":{},"injectables/SessionsService.html":{}}}],["1000000000000",{"_index":2805,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["1000px",{"_index":330,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["100vh",{"_index":238,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ShellLayout.html":{}}}],["1024px",{"_index":759,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["10b981",{"_index":417,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["10px",{"_index":432,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["120",{"_index":3408,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["1200",{"_index":4611,"title":{},"body":{"injectables/TtsService.html":{}}}],["1200px",{"_index":270,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["120][i",{"_index":3456,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["120px",{"_index":409,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["129",{"_index":421,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["12px",{"_index":376,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{}}}],["135deg",{"_index":4476,"title":{},"body":{"components/ShellLayout.html":{}}}],["140px",{"_index":399,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["15",{"_index":2804,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["15.0.12",{"_index":4799,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":4654,"title":{},"body":{"injectables/TtsService.html":{}}}],["1500",{"_index":4660,"title":{},"body":{"injectables/TtsService.html":{}}}],["150px",{"_index":752,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["15px",{"_index":360,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["16",{"_index":1456,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["160",{"_index":3938,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["160px",{"_index":422,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["16px",{"_index":2464,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["17.0.0",{"_index":4792,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":3206,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["180px",{"_index":743,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["185",{"_index":420,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["18rem",{"_index":4450,"title":{},"body":{"components/ShellLayout.html":{}}}],["1e12",{"_index":4315,"title":{},"body":{"injectables/SessionsService.html":{}}}],["1fr",{"_index":384,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["1px",{"_index":319,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["1rem",{"_index":286,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["2",{"_index":980,"title":{"interfaces/PaginatedApi-2.html":{}},"body":{"components/AdminCompanyPage.html":{},"classes/AppTranslateLoader.html":{},"injectables/BackgroundService.html":{},"injectables/ChatUtilsService.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":4803,"title":{},"body":{"dependencies.html":{}}}],["2.4",{"_index":3204,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["2.4x",{"_index":3205,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["2.5rem",{"_index":291,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["20",{"_index":244,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ShellLayout.html":{}}}],["20.0.0",{"_index":4800,"title":{},"body":{"dependencies.html":{}}}],["20.1.3",{"_index":4840,"title":{},"body":{"index.html":{}}}],["20.1.5",{"_index":4788,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":2489,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["2000",{"_index":111,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["200px",{"_index":749,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["20px",{"_index":336,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{}}}],["2100",{"_index":4478,"title":{},"body":{"components/ShellLayout.html":{}}}],["220",{"_index":3368,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["2200",{"_index":438,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["22d3ee",{"_index":3450,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["24",{"_index":4895,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":2465,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["25",{"_index":698,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/TypewriterService.html":{}}}],["255",{"_index":322,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["25px",{"_index":316,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["28rem",{"_index":4482,"title":{},"body":{"components/ShellLayout.html":{}}}],["2px",{"_index":352,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["2rem",{"_index":240,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["2s",{"_index":328,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["3",{"_index":1036,"title":{},"body":{"components/AdminCompanyPage.html":{},"classes/AppTranslateLoader.html":{},"components/LazyChartComponent.html":{},"injectables/ScrollManagerService.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":1021,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["300",{"_index":4719,"title":{},"body":{"injectables/TtsService.html":{}}}],["300px",{"_index":705,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["300x100px",{"_index":222,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["30px",{"_index":358,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{}}}],["32px",{"_index":4084,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["32x32px",{"_index":213,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["346683647039.southamerica",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34d399",{"_index":3462,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["35",{"_index":3208,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["35px",{"_index":712,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["3px",{"_index":340,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["3rem",{"_index":264,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["3s",{"_index":294,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["4",{"_index":3455,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/PerformanceService.html":{}}}],["4.1.11",{"_index":4795,"title":{},"body":{"dependencies.html":{}}}],["4.4.6",{"_index":4796,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1022,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["400",{"_index":302,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["404",{"_index":4296,"title":{},"body":{"injectables/SessionsService.html":{}}}],["405].includes(err?.status",{"_index":4297,"title":{},"body":{"injectables/SessionsService.html":{}}}],["40px",{"_index":2445,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["45deg",{"_index":4479,"title":{},"body":{"components/ShellLayout.html":{}}}],["480px",{"_index":447,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["480px)').matches",{"_index":3652,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["4px",{"_index":375,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["4rem",{"_index":2480,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["5",{"_index":1071,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["5.1.0",{"_index":4797,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":245,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["500",{"_index":415,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{}}}],["50px",{"_index":337,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["5px",{"_index":357,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["5rem",{"_index":4487,"title":{},"body":{"components/ShellLayout.html":{}}}],["6",{"_index":3227,"title":{},"body":{"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["60",{"_index":1024,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/TtsService.html":{}}}],["600",{"_index":363,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["60a5fa",{"_index":3471,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["60px",{"_index":408,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["61",{"_index":4896,"title":{},"body":{"overview.html":{}}}],["66",{"_index":4898,"title":{},"body":{"overview.html":{}}}],["68",{"_index":318,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["6px",{"_index":2463,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["7",{"_index":4897,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":4801,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1023,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{}}}],["700",{"_index":279,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["70px",{"_index":359,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["72",{"_index":4449,"title":{},"body":{"components/ShellLayout.html":{}}}],["75",{"_index":700,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["768px",{"_index":445,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["768px)').matches",{"_index":4387,"title":{},"body":{"components/ShellLayout.html":{}}}],["8",{"_index":3699,"title":{},"body":{"injectables/RegisterFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["8/i.test(errormessage",{"_index":3697,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["80",{"_index":251,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["800",{"_index":3438,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["8px",{"_index":315,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["8rem",{"_index":2450,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["90deg",{"_index":4477,"title":{},"body":{"components/ShellLayout.html":{}}}],["90vh",{"_index":4082,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["94a3b8",{"_index":3461,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["95vw",{"_index":4115,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["96vw",{"_index":4081,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["_",{"_index":4031,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["_agentid",{"_index":3830,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["_bg",{"_index":2200,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["_blank",{"_index":4140,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["_http",{"_index":4829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_neon",{"_index":2201,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["_palette",{"_index":2202,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["_parallax",{"_index":2203,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["_theme",{"_index":4501,"title":{},"body":{"injectables/ThemeService.html":{}}}],["a.localecompare(b",{"_index":636,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["a[href",{"_index":4045,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["abajo",{"_index":3942,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["abortcontroller",{"_index":3824,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["aborterror",{"_index":3908,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["aborts",{"_index":3903,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["absolute",{"_index":348,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["abstract",{"_index":826,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["abstractcontrol",{"_index":3718,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["accent",{"_index":252,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["accept",{"_index":3836,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["accepts",{"_index":4834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["acceso",{"_index":3062,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["access_token",{"_index":3563,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["accessibility",{"_index":4145,"title":{},"body":{"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["accessors",{"_index":2880,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"components/HeaderComponent.html":{}}}],["acciones",{"_index":1001,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ScrollManagerService.html":{}}}],["accumulated",{"_index":3893,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["action",{"_index":416,"title":{},"body":{"components/AdminAppInfoPage.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsEventsService.html":{},"interfaces/VideoData.html":{}}}],["action_recommendations",{"_index":1903,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["actions",{"_index":753,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["activatedroute",{"_index":884,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["activatedroutesnapshot",{"_index":3799,"title":{},"body":{"injectables/RoleGuardService.html":{},"miscellaneous/variables.html":{}}}],["active",{"_index":1591,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"components/ChatComposerComponent.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["activo",{"_index":4750,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["actual",{"_index":2902,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"components/ShellLayout.html":{}}}],["actual_component",{"_index":506,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["actualiza",{"_index":2894,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["actualizado",{"_index":945,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["adaptagent",{"_index":4810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptagent(rawagent",{"_index":4823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptagents",{"_index":4813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptagents(rawagents",{"_index":4825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptchatentriestomessages",{"_index":4814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptchatentriestomessages(entries",{"_index":4828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adapter",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adapter.ts",{"_index":4812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add_context",{"_index":1887,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["adderrormessage",{"_index":2614,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/MessageManagerService.html":{}}}],["adderrormessage(content",{"_index":2629,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["adderrormessage(messages",{"_index":3576,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["additional",{"_index":808,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{},"index.html":{}}}],["addkey",{"_index":1569,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["addmessage",{"_index":2615,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/MessageManagerService.html":{}}}],["addmessage(messages",{"_index":3579,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["addmessage(msg",{"_index":2631,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["address",{"_index":804,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["addsystemmessage",{"_index":2616,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/MessageManagerService.html":{}}}],["addsystemmessage(content",{"_index":2633,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["addsystemmessage(messages",{"_index":3581,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["addusermessage",{"_index":2617,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/MessageManagerService.html":{}}}],["addusermessage(content",{"_index":2635,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["addusermessage(messages",{"_index":3583,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["adicionales",{"_index":955,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["admin",{"_index":115,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"interfaces/PaginatedApi-2.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["admin.app_info.fields.site_icon",{"_index":209,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.app_info.fields.site_logo",{"_index":220,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.app_info.fields.site_name",{"_index":206,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.app_info.save",{"_index":225,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.app_info.saved",{"_index":226,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.app_info.upload",{"_index":216,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["admin.companies.columns.name",{"_index":685,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["admin.companies.columns.sector",{"_index":686,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["admin.companies.columns.tax_id",{"_index":684,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["admin.companies.dashboard_title",{"_index":918,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["admin.companies.limit",{"_index":676,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["admin.companies.llm_insights",{"_index":987,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["admin.companies.metrics",{"_index":976,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["admin.companies.open_dashboard",{"_index":694,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["admin.companies.search_button",{"_index":675,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["admin.companies.sector",{"_index":678,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["admin.companies.signals",{"_index":982,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["admin.companies.title",{"_index":669,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["admin.files.title",{"_index":1157,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["admin.files.type_all",{"_index":1167,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["admin.messages.filter",{"_index":1486,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["admin.messages.loading_more",{"_index":1512,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["admin.messages.select_session",{"_index":1492,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["admin.messages.title",{"_index":1482,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["admin.sidenav.app_info",{"_index":196,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminShellLayout.html":{}}}],["admin.sidenav.companies",{"_index":1741,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin.sidenav.dashboard",{"_index":1737,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin.sidenav.files",{"_index":1739,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin.sidenav.header",{"_index":1736,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin.sidenav.messages",{"_index":1740,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin.sidenav.users",{"_index":1738,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin/companies",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin/companies/:taxid",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin_messages_port",{"_index":1210,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["admin_panel_settings",{"_index":1735,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["admin_users_port",{"_index":1291,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"classes/AppTranslateLoader.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"miscellaneous/variables.html":{}}}],["adminappinfofacade",{"_index":1,"title":{"injectables/AdminAppInfoFacade.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{}}}],["adminappinfopage",{"_index":128,"title":{"components/AdminAppInfoPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["admincompaniesfacade",{"_index":507,"title":{"injectables/AdminCompaniesFacade.html":{}},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{}}}],["admincompaniespage",{"_index":456,"title":{"components/AdminCompaniesPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["admincompanydashboarddto",{"_index":763,"title":{"interfaces/AdminCompanyDashboardDTO.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["admincompanypage",{"_index":458,"title":{"components/AdminCompanyPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["admindashboardpage",{"_index":460,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["adminfilespage",{"_index":462,"title":{"components/AdminFilesPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["adminlistmessagesusecase",{"_index":1192,"title":{"injectables/AdminListMessagesUseCase.html":{}},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminMessagesFacade.html":{}}}],["adminlistsessionsusecase",{"_index":1212,"title":{"injectables/AdminListSessionsUseCase.html":{}},"body":{"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{}}}],["adminmessageitem",{"_index":1207,"title":{"interfaces/AdminMessageItem.html":{}},"body":{"injectables/AdminListMessagesUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/PaginatedApi-1.html":{}}}],["adminmessagesfacade",{"_index":1115,"title":{"injectables/AdminMessagesFacade.html":{}},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["adminmessagespage",{"_index":464,"title":{"components/AdminMessagesPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["adminmessagesport",{"_index":1206,"title":{"interfaces/AdminMessagesPort.html":{}},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/PaginatedApi-1.html":{}}}],["adminmessagesservice",{"_index":1517,"title":{"injectables/AdminMessagesService.html":{}},"body":{"injectables/AdminMessagesService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/PaginatedApi-1.html":{},"miscellaneous/variables.html":{}}}],["adminriskweightsfacade",{"_index":1562,"title":{"injectables/AdminRiskWeightsFacade.html":{}},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["adminsessionitem",{"_index":1217,"title":{"interfaces/AdminSessionItem.html":{}},"body":{"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/PaginatedApi-1.html":{}}}],["adminshelllayout",{"_index":466,"title":{"components/AdminShellLayout.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["adminsidebarcollapsed",{"_index":1732,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["adminstatsdto",{"_index":786,"title":{"interfaces/AdminStatsDTO.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["adminstatsfacade",{"_index":886,"title":{"injectables/AdminStatsFacade.html":{}},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{}}}],["adminstatsport",{"_index":827,"title":{"classes/AdminStatsPort.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["adminstatsservice",{"_index":1761,"title":{"injectables/AdminStatsService.html":{}},"body":{"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{}}}],["adminuseritem",{"_index":1290,"title":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{}},"body":{"injectables/AdminMessagesFacade.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/UpdateUserUseCase.html":{}}}],["adminusersfacade",{"_index":1818,"title":{"injectables/AdminUsersFacade.html":{}},"body":{"injectables/AdminUsersFacade.html":{}}}],["adminuserspage",{"_index":468,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["adminusersport",{"_index":1289,"title":{"interfaces/AdminUsersPort.html":{}},"body":{"injectables/AdminMessagesFacade.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUsersPort.html":{},"interfaces/CreateUserPayload.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["adminusersservice",{"_index":1798,"title":{"injectables/AdminUsersService.html":{}},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{},"miscellaneous/variables.html":{}}}],["advertencias",{"_index":997,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["afterviewinit",{"_index":3348,"title":{},"body":{"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["agent",{"_index":1224,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["agent/message/stream",{"_index":3832,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["agent_id",{"_index":1888,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/Model.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/Tool.html":{},"interfaces/VideoData.html":{}}}],["agente",{"_index":1972,"title":{},"body":{"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/ChatEventsService.html":{}}}],["agentid",{"_index":1939,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["agentmodel",{"_index":1884,"title":{"interfaces/AgentModel.html":{}},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{},"miscellaneous/functions.html":{}}}],["agg.overview",{"_index":4072,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["aggregate",{"_index":4112,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["aggregate::before",{"_index":4113,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["aggregate_insights",{"_index":1926,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["aggregateinsights",{"_index":1900,"title":{"interfaces/AggregateInsights.html":{}},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["agrega",{"_index":3578,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["agregado",{"_index":3602,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["ai",{"_index":3164,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["al",{"_index":1162,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/RegisterFacade.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsService.html":{}}}],["alert",{"_index":305,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["alertas",{"_index":1009,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["alerts",{"_index":1053,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["aliases",{"_index":4901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":274,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["alineado",{"_index":4284,"title":{},"body":{"injectables/SessionsService.html":{}}}],["allow",{"_index":2944,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RoleGuardService.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{},"interfaces/UserProfile.html":{}}}],["allowed",{"_index":426,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/RoleGuardService.html":{}}}],["allowed.includes(role",{"_index":3808,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["allowed.length",{"_index":3806,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["allowupload",{"_index":2352,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["already",{"_index":2407,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["already|exists)/i.test(errormessage",{"_index":3701,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["always",{"_index":4649,"title":{},"body":{"injectables/TtsService.html":{}}}],["analizando",{"_index":3782,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["analysis",{"_index":1938,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{}}}],["analysis.ts",{"_index":1902,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["analytics",{"_index":4061,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["analyze",{"_index":3997,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["analyzecompanies",{"_index":4210,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["analyzecompanies(agentid",{"_index":4212,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["analyzepdf",{"_index":3761,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["analyzepdf(input",{"_index":3763,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["analyzesessioncompaniesusecase",{"_index":1927,"title":{"injectables/AnalyzeSessionCompaniesUseCase.html":{}},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["analyzetext",{"_index":3762,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["angular",{"_index":2758,"title":{},"body":{"injectables/ChatUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular's",{"_index":2760,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["angular/cdk",{"_index":4787,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":182,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1528,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["angular/compiler",{"_index":4789,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":67,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":70,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/ChatComposerComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4790,"title":{},"body":{"dependencies.html":{}}}],["angular/material/icon",{"_index":1407,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["angular/platform",{"_index":1964,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/router",{"_index":645,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"injectables/AuthGuardService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"injectables/RoleGuardService.html":{},"components/ShellLayout.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":4791,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":4908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":4935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animación",{"_index":4748,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["animate",{"_index":2915,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["animation",{"_index":292,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["anterior",{"_index":4379,"title":{},"body":{"components/ShellLayout.html":{}}}],["antes",{"_index":4401,"title":{},"body":{"components/ShellLayout.html":{}}}],["antigua",{"_index":4272,"title":{},"body":{"injectables/SessionsService.html":{}}}],["any).addcontrol",{"_index":1605,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["any).devicememory",{"_index":3661,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["any).hardwareconcurrency",{"_index":3659,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["any).pending",{"_index":4646,"title":{},"body":{"injectables/TtsService.html":{}}}],["any).version",{"_index":1598,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["any)?.rawmessage?.session_id",{"_index":2543,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["any)[k",{"_index":903,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["anyway",{"_index":4385,"title":{},"body":{"components/ShellLayout.html":{}}}],["análisis",{"_index":3777,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["api",{"_index":1744,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"injectables/FilesService.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisSummaryDisplay.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["api.info",{"_index":3634,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["api.info?.count",{"_index":3638,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["api.info?.page_number",{"_index":3636,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["api.results",{"_index":3635,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["api.results?.length",{"_index":3637,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["api.service.ts",{"_index":3215,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["api.service.ts:10",{"_index":3217,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["api.service.ts:14",{"_index":3218,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["api.ts",{"_index":3631,"title":{},"body":{"interfaces/PaginatedApi.html":{},"miscellaneous/functions.html":{}}}],["aplicación",{"_index":204,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["app",{"_index":7,"title":{"components/App.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"injectables/GetAppInfoUseCase.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/UpdateAppInfoUseCase.html":{},"miscellaneous/variables.html":{}}}],["app.css",{"_index":1944,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":1943,"title":{},"body":{"components/App.html":{}}}],["app/application",{"_index":2533,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["app/application/admin/admin",{"_index":183,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["app/application/auth/login.facade",{"_index":3539,"title":{},"body":{"components/LoginPage.html":{}}}],["app/application/auth/register.facade",{"_index":3720,"title":{},"body":{"components/RegisterPage.html":{}}}],["app/application/chat/chat.facade",{"_index":4377,"title":{},"body":{"components/ShellLayout.html":{}}}],["app/application/files/files.facade",{"_index":1114,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["app_info_port",{"_index":76,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"classes/AppTranslateLoader.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":3318,"title":{},"body":{"injectables/LanguageService.html":{}}}],["app_lang",{"_index":3304,"title":{},"body":{"injectables/LanguageService.html":{},"miscellaneous/variables.html":{}}}],["app_theme",{"_index":4533,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":2031,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["append",{"_index":1318,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["appinfo",{"_index":13,"title":{"interfaces/AppInfo.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["appinfoport",{"_index":74,"title":{"interfaces/AppInfoPort.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["appinfoservice",{"_index":2000,"title":{"injectables/AppInfoService.html":{}},"body":{"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":3513,"title":{},"body":{"injectables/LoginFacade.html":{},"index.html":{}}}],["application/json",{"_index":3838,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["application/pdf",{"_index":1176,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["applicationconfig",{"_index":2021,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["applybodyclasses",{"_index":2210,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["applyfilters",{"_index":1086,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["applysearch",{"_index":517,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{}}}],["applysearch(value",{"_index":523,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["applysessionssearch",{"_index":1239,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["applysessionssearch(q",{"_index":1352,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["applysessionssearch(value",{"_index":1248,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["applytheme",{"_index":4503,"title":{},"body":{"injectables/ThemeService.html":{}}}],["approval_delta",{"_index":3234,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["approvaldelta",{"_index":3198,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["approvaldisplay",{"_index":3211,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["apptranslateloader",{"_index":2015,"title":{"classes/AppTranslateLoader.html":{}},"body":{"classes/AppTranslateLoader.html":{}}}],["archivo",{"_index":1166,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{}}}],["archivos",{"_index":1160,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{}}}],["area",{"_index":4462,"title":{},"body":{"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["arialabelledby",{"_index":3363,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["arr",{"_index":616,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/ChatFacade.html":{}}}],["arr.filter((i",{"_index":618,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["arr.length",{"_index":2695,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["arr.slice(0",{"_index":2696,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["array",{"_index":782,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsService.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/VideoData.html":{}}}],["array.from",{"_index":1131,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{}}}],["array.from(e.datatransfer.types",{"_index":2420,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["array.from(input.files",{"_index":2992,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["array.from(set).sort((a",{"_index":634,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["array.isarray(api.results",{"_index":3633,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["array.isarray(data",{"_index":1553,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"injectables/SessionsService.html":{}}}],["array.isarray(data?.chats",{"_index":4246,"title":{},"body":{"injectables/SessionsService.html":{}}}],["array.isarray(data?.items",{"_index":3640,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["array.isarray(data?.messages",{"_index":4244,"title":{},"body":{"injectables/SessionsService.html":{}}}],["array.isarray(data?.results",{"_index":4236,"title":{},"body":{"injectables/SessionsService.html":{}}}],["array.isarray(data?.sessions",{"_index":4238,"title":{},"body":{"injectables/SessionsService.html":{}}}],["array.isarray(detail",{"_index":3680,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["array.isarray(obj",{"_index":4033,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["artifacts",{"_index":4866,"title":{},"body":{"index.html":{}}}],["asc",{"_index":584,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["asistente",{"_index":2811,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["assessment",{"_index":4069,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["asset",{"_index":385,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["assets",{"_index":378,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["assistant",{"_index":2147,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["async",{"_index":24,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetProfileUseCase.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"components/SessionFilesModalComponent.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["asíncronos",{"_index":3956,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["atributos",{"_index":954,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["attach",{"_index":2396,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/TtsService.html":{}}}],["attempt",{"_index":3244,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["attempt().finally",{"_index":3271,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["attributes",{"_index":2831,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["audio",{"_index":2142,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["audiodata",{"_index":2095,"title":{"interfaces/AudioData.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["audiofile",{"_index":2709,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["aurora",{"_index":2254,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["auth",{"_index":3102,"title":{},"body":{"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["auth_port",{"_index":2081,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{},"miscellaneous/variables.html":{}}}],["auth_role",{"_index":4583,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["auth_token",{"_index":4581,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":2157,"title":{},"body":{"injectables/AuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["authguardservice",{"_index":2149,"title":{"injectables/AuthGuardService.html":{}},"body":{"injectables/AuthGuardService.html":{}}}],["authinterceptorfn",{"_index":4911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":2196,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authport",{"_index":2159,"title":{"interfaces/AuthPort.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["authservice",{"_index":2082,"title":{"injectables/AuthService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":271,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["automatically",{"_index":4849,"title":{},"body":{"index.html":{}}}],["autorenew",{"_index":4078,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["available",{"_index":1319,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/TtsService.html":{},"index.html":{}}}],["avg_time_minutes",{"_index":3235,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["avoid",{"_index":1293,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"classes/AppTranslateLoader.html":{},"components/ChatComposerComponent.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-2.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/variables.html":{}}}],["avoided",{"_index":3309,"title":{},"body":{"injectables/LanguageService.html":{}}}],["await",{"_index":85,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["b",{"_index":635,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/SessionsService.html":{}}}],["back",{"_index":843,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["backdrop",{"_index":324,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["backend",{"_index":794,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"interfaces/CompaniesPort.html":{},"interfaces/CompanyItem.html":{},"injectables/FilesService.html":{},"components/HeaderComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["backend's",{"_index":1810,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["backend_repository",{"_index":3132,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backends",{"_index":3038,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["background",{"_index":241,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["backgroundcolor",{"_index":908,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["backgroundservice",{"_index":2198,"title":{"injectables/BackgroundService.html":{}},"body":{"injectables/BackgroundService.html":{},"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["badge",{"_index":744,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["badge:hover",{"_index":2484,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["badges",{"_index":1038,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["banderas",{"_index":1013,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["banner",{"_index":2482,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["bar",{"_index":906,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{}}}],["base",{"_index":230,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["base64_audio",{"_index":2098,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["baseagentevent",{"_index":2325,"title":{"interfaces/BaseAgentEvent.html":{}},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{}}}],["basebody",{"_index":4285,"title":{},"body":{"injectables/SessionsService.html":{}}}],["basebody).pipe",{"_index":4294,"title":{},"body":{"injectables/SessionsService.html":{}}}],["based",{"_index":3317,"title":{},"body":{"injectables/LanguageService.html":{}}}],["baseline",{"_index":2298,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["baseurl",{"_index":3757,"title":{},"body":{"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":3565,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/UserProfile.html":{}}}],["bearer",{"_index":2197,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["becomes",{"_index":3338,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["before",{"_index":2400,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/ChatUtilsService.html":{}}}],["beginatzero",{"_index":916,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["behaviorsubject",{"_index":2903,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["behaviorsubject('idle",{"_index":2895,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["belongs_to_mv",{"_index":813,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["between",{"_index":720,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["bezier(0",{"_index":4444,"title":{},"body":{"components/ShellLayout.html":{}}}],["bezier(0.4",{"_index":1058,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["bg",{"_index":2204,"title":{},"body":{"injectables/BackgroundService.html":{},"injectables/ConnectionStatusService.html":{},"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["bgstyle",{"_index":2225,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["bh",{"_index":3460,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["bic",{"_index":970,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["bic_impact_areas",{"_index":817,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["bic_since_year",{"_index":816,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["binary",{"_index":3044,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["binding",{"_index":3160,"title":{},"body":{"components/HeaderComponent.html":{}}}],["black\\/50",{"_index":4452,"title":{},"body":{"components/ShellLayout.html":{}}}],["block",{"_index":2427,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["blocks",{"_index":1427,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{}}}],["blocktags",{"_index":2824,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["blue",{"_index":4489,"title":{},"body":{"components/ShellLayout.html":{}}}],["blue:hover",{"_index":4490,"title":{},"body":{"components/ShellLayout.html":{}}}],["blur",{"_index":4470,"title":{},"body":{"components/ShellLayout.html":{}}}],["blur(0px",{"_index":4481,"title":{},"body":{"components/ShellLayout.html":{}}}],["blur(10px",{"_index":326,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["blur(12px",{"_index":3192,"title":{},"body":{"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["blur(15px",{"_index":2471,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["blur(20px",{"_index":335,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["blur(4px",{"_index":4473,"title":{},"body":{"components/ShellLayout.html":{}}}],["blur(5px",{"_index":439,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["body",{"_index":2190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["body.classlist.add(`bg",{"_index":2290,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.classlist.add(`palette",{"_index":2293,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.classlist.remove",{"_index":2292,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.classlist.remove('bg",{"_index":2289,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.classlist.toggle('neon",{"_index":2296,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.neon",{"_index":3193,"title":{},"body":{"components/HeaderComponent.html":{}}}],["body.style.getpropertyvalue",{"_index":2300,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["body.style.setproperty",{"_index":2302,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["bodykeys",{"_index":4299,"title":{},"body":{"injectables/SessionsService.html":{}}}],["bokeh",{"_index":2255,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":810,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AgentModel.html":{},"injectables/AuthGuardService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/Model.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TypewriterService.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["booleano",{"_index":4517,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":2037,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":310,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["bordercolor",{"_index":910,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["borderwidth",{"_index":912,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["bot",{"_index":2768,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["both",{"_index":2857,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["botmessage",{"_index":3608,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["bottom",{"_index":263,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["bounce",{"_index":2917,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["bouncein",{"_index":2476,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["box",{"_index":313,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["brand",{"_index":2399,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{}}}],["breadcrumb",{"_index":1025,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["break",{"_index":2549,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/LazyChartComponent.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["brightness(1.2",{"_index":2487,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["browser",{"_index":1965,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":4914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":394,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["btn::before",{"_index":2461,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["btn:active",{"_index":402,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ShellLayout.html":{}}}],["btn:disabled",{"_index":425,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{}}}],["btn:disabled:hover",{"_index":2466,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["btn:hover",{"_index":400,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["btn:hover::before",{"_index":2462,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["btn:hover:not(:disabled",{"_index":423,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["btn:nth",{"_index":4163,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["buffer",{"_index":3859,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["buffer.indexof('\\n",{"_index":3888,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["buffer.slice(0",{"_index":3889,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["buffer.slice(lineendidx",{"_index":3891,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["build",{"_index":1800,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buildformdata",{"_index":4267,"title":{},"body":{"injectables/SessionsService.html":{}}}],["buildjson",{"_index":4282,"title":{},"body":{"injectables/SessionsService.html":{}}}],["buildthis",{"_index":4863,"title":{},"body":{"index.html":{}}}],["built",{"_index":2761,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["bus",{"_index":4167,"title":{},"body":{"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{}}}],["busca",{"_index":3596,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["business",{"_index":4060,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["business_name",{"_index":795,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["button",{"_index":4046,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["buttons",{"_index":393,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["bw",{"_index":3459,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["básica",{"_index":201,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["c",{"_index":688,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["c.error",{"_index":4070,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["c.name",{"_index":690,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["c.sector",{"_index":693,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["c.tax_id",{"_index":689,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["cache",{"_index":1122,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["cached",{"_index":1124,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["cached.expanded",{"_index":1474,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cached.last",{"_index":1461,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cached.main",{"_index":1472,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cached.thinks",{"_index":1473,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cached?.expanded",{"_index":1463,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["caching",{"_index":1151,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["calidad",{"_index":1014,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["call",{"_index":4658,"title":{},"body":{"injectables/TtsService.html":{}}}],["called",{"_index":4635,"title":{},"body":{"injectables/TtsService.html":{}}}],["calls",{"_index":1295,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["cambios",{"_index":4407,"title":{},"body":{"components/ShellLayout.html":{}}}],["canactivate",{"_index":2151,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/RoleGuardService.html":{}}}],["canactivate(route",{"_index":3798,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["canactivatefn",{"_index":2155,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/RoleGuardService.html":{},"miscellaneous/variables.html":{}}}],["cancel",{"_index":2358,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageUseCase.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{}}}],["cancel.focus",{"_index":4428,"title":{},"body":{"components/ShellLayout.html":{}}}],["cancela",{"_index":3926,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["cancelado",{"_index":2815,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["cancelbtn",{"_index":4323,"title":{},"body":{"components/ShellLayout.html":{}}}],["cancelled",{"_index":2330,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":3905,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["cancelscheduledscroll",{"_index":3917,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["candidatos",{"_index":4255,"title":{},"body":{"injectables/SessionsService.html":{}}}],["canvas",{"_index":3337,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.clientheight",{"_index":3440,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.clientwidth",{"_index":3437,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.getcontext('2d",{"_index":3444,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.height",{"_index":3443,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.parentelement",{"_index":3431,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas.width",{"_index":3442,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvasref",{"_index":3353,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["canvas{display:block;width:100%!important;height:100%!important",{"_index":3352,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["capture",{"_index":2306,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["caracteres",{"_index":3700,"title":{},"body":{"injectables/RegisterFacade.html":{},"injectables/TypewriterService.html":{}}}],["card",{"_index":334,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["card::before",{"_index":4100,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["card:hover",{"_index":387,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["card:hover::before",{"_index":4101,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["cargando",{"_index":571,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/FilesFacade.html":{}}}],["cargar",{"_index":94,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["case",{"_index":2541,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/TtsService.html":{}}}],["cases",{"_index":555,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminUsersFacade.html":{},"components/App.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{}}}],["cases/admin",{"_index":1194,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{}}}],["cases/admin/create",{"_index":2921,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["cases/admin/delete",{"_index":2963,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["cases/admin/list",{"_index":3496,"title":{},"body":{"injectables/ListUsersUseCase.html":{}}}],["cases/admin/update",{"_index":4775,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["cases/auth/get",{"_index":3100,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["cases/auth/login.usecase",{"_index":3510,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["cases/auth/login.usecase.ts",{"_index":3567,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["cases/auth/login.usecase.ts:10",{"_index":3568,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["cases/auth/login.usecase.ts:8",{"_index":3569,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["cases/auth/register.usecase",{"_index":3676,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["cases/auth/register.usecase.ts",{"_index":3751,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["cases/auth/register.usecase.ts:11",{"_index":3753,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["cases/auth/register.usecase.ts:13",{"_index":3752,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["cases/companies/get",{"_index":3083,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["cases/companies/list",{"_index":3481,"title":{},"body":{"injectables/ListCompaniesUseCase.html":{}}}],["cases/delete",{"_index":2956,"title":{},"body":{"classes/DeleteSessionUseCase.html":{}}}],["cases/files/list",{"_index":3484,"title":{},"body":{"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"components/SessionFilesModalComponent.html":{}}}],["cases/files/upload",{"_index":4777,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["cases/get",{"_index":3075,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{},"injectables/GetKpisUseCase.html":{},"classes/GetSessionUseCase.html":{}}}],["cases/list",{"_index":3492,"title":{},"body":{"classes/ListSessionsUseCase.html":{}}}],["cases/risk",{"_index":1589,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["cases/send",{"_index":2685,"title":{},"body":{"injectables/ChatFacade.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{}}}],["cases/sessions/analyze",{"_index":1928,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["cases/update",{"_index":4772,"title":{},"body":{"injectables/UpdateAppInfoUseCase.html":{}}}],["catch",{"_index":89,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"injectables/BackgroundService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":3902,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["catcherror",{"_index":2008,"title":{},"body":{"injectables/AppInfoService.html":{},"injectables/SessionsService.html":{}}}],["catcherror((err",{"_index":4295,"title":{},"body":{"injectables/SessionsService.html":{}}}],["cdr",{"_index":2537,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/ShellLayout.html":{}}}],["cell",{"_index":742,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["cells",{"_index":739,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["center",{"_index":275,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["centered",{"_index":4412,"title":{},"body":{"components/ShellLayout.html":{}}}],["cerca",{"_index":3936,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["cerrar",{"_index":3179,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":1709,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["changedetection",{"_index":139,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ForbiddenPage.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{}}}],["changedetectionstrategy",{"_index":181,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ForbiddenPage.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{}}}],["changedetectionstrategy.onpush",{"_index":140,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ForbiddenPage.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{}}}],["changedetectorref",{"_index":2532,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/ShellLayout.html":{}}}],["changes",{"_index":1452,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/ChatComposerComponent.html":{}}}],["channels",{"_index":2099,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["chart",{"_index":834,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{}}}],["chart'},{'name",{"_index":487,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["chart(el",{"_index":905,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["chart.component.ts",{"_index":3333,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:101",{"_index":3376,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:117",{"_index":3384,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:128",{"_index":3382,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:137",{"_index":3375,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:182",{"_index":3379,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:37",{"_index":3392,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:38",{"_index":3390,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:40",{"_index":3366,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:41",{"_index":3367,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:42",{"_index":3370,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:43",{"_index":3365,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:44",{"_index":3369,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:46",{"_index":3386,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:48",{"_index":3388,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:49",{"_index":3387,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:50",{"_index":3391,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:51",{"_index":3394,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:52",{"_index":3389,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:54",{"_index":3378,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:62",{"_index":3380,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.component.ts:82",{"_index":3377,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart.js",{"_index":3336,"title":{},"body":{"components/LazyChartComponent.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":885,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["chart.register(...registerables",{"_index":3426,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chart/lazy",{"_index":3332,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chartctor",{"_index":3354,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chartinstance",{"_index":3355,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["charttype",{"_index":3364,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["chat",{"_index":471,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/CustomPreloadStrategy.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["chat'},{'name",{"_index":472,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["chat.aggregate_summary",{"_index":4071,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.attachments_empty",{"_index":4149,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["chat.attachments_title",{"_index":4148,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["chat.attachments_view",{"_index":1497,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/ShellLayout.html":{}}}],["chat.companies_analysis_companies",{"_index":4059,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.companies_analysis_empty",{"_index":4057,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.companies_analysis_title",{"_index":4056,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.company_score",{"_index":4062,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.files_count",{"_index":2436,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["chat.hide_think",{"_index":1506,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["chat.hint",{"_index":2435,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["chat.insights",{"_index":4067,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["chat.show_think",{"_index":1507,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["chat/session/:sessionid",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chat_stream_port",{"_index":2077,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/ChatFacade.html":{},"miscellaneous/variables.html":{}}}],["chatcomposercomponent",{"_index":473,"title":{"components/ChatComposerComponent.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["chatentry",{"_index":2146,"title":{"interfaces/ChatEntry.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"classes/GetSessionUseCase.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"interfaces/VideoData.html":{}}}],["chateventsservice",{"_index":2492,"title":{"injectables/ChatEventsService.html":{}},"body":{"injectables/ChatEventsService.html":{}}}],["chatfacade",{"_index":2502,"title":{"injectables/ChatFacade.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"components/ShellLayout.html":{}}}],["chatmessage",{"_index":2332,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{},"miscellaneous/functions.html":{}}}],["chatmessageslistcomponent",{"_index":475,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["chatpagectx",{"_index":2518,"title":{},"body":{"injectables/ChatEventsService.html":{},"miscellaneous/typealiases.html":{}}}],["chats",{"_index":4248,"title":{},"body":{"injectables/SessionsService.html":{}}}],["chatsidebaropen",{"_index":4433,"title":{},"body":{"components/ShellLayout.html":{}}}],["chatstream",{"_index":2608,"title":{},"body":{"injectables/ChatFacade.html":{},"classes/SendMessageUseCase.html":{}}}],["chatstreamport",{"_index":2680,"title":{"interfaces/ChatStreamPort.html":{}},"body":{"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"classes/SendMessageUseCase.html":{}}}],["chatutils",{"_index":1335,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatEventsService.html":{},"injectables/MessageManagerService.html":{}}}],["chatutilsservice",{"_index":1408,"title":{"injectables/ChatUtilsService.html":{}},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["child",{"_index":4103,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["child(2",{"_index":4164,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["child(2):hover",{"_index":4165,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["children",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":4884,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":4657,"title":{},"body":{"injectables/TtsService.html":{}}}],["chunk",{"_index":2122,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{}}}],["chunk_size",{"_index":2123,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["ciclo",{"_index":3944,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["cierre",{"_index":3182,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ciiu",{"_index":797,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["clases",{"_index":2886,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["class",{"_index":82,"title":{"classes/AdminStatsPort.html":{},"classes/AppTranslateLoader.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["class=\"content",{"_index":4058,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["classes",{"_index":1774,"title":{},"body":{"classes/AdminStatsPort.html":{},"classes/AppTranslateLoader.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/ShellLayout.html":{},"overview.html":{}}}],["clave",{"_index":994,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/SessionsService.html":{}}}],["clean",{"_index":3046,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["cleanformarkdown",{"_index":2723,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["cleanformarkdown(input",{"_index":2734,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["cleanup",{"_index":2756,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/TtsService.html":{}}}],["clear",{"_index":4568,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["clearmessages",{"_index":2618,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/MessageManagerService.html":{}}}],["clearmessages(messages",{"_index":3585,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["cli",{"_index":4839,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["click",{"_index":3184,"title":{},"body":{"components/HeaderComponent.html":{}}}],["client",{"_index":2061,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["clip",{"_index":288,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["close",{"_index":4144,"title":{},"body":{"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["closebtn",{"_index":3998,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["closecompaniesmodal",{"_index":4172,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["closed",{"_index":4004,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["closedeletemodal",{"_index":4330,"title":{},"body":{"components/ShellLayout.html":{}}}],["closefilesmodal",{"_index":4173,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["closeonoutsideclick",{"_index":1631,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["closerepos",{"_index":3123,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closesidebar",{"_index":4331,"title":{},"body":{"components/ShellLayout.html":{}}}],["closing",{"_index":2829,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["cloud",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":4853,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1188,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["col.key",{"_index":4105,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["col.val",{"_index":4106,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["collapse",{"_index":726,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminShellLayout.html":{}}}],["collapsed",{"_index":1699,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["color",{"_index":258,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["colors",{"_index":3470,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["colors[i",{"_index":3477,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["cols",{"_index":1032,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["column",{"_index":332,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["columns",{"_index":380,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["come",{"_index":4882,"title":{},"body":{"index.html":{}}}],["comes",{"_index":4710,"title":{},"body":{"injectables/TtsService.html":{}}}],["command",{"_index":4877,"title":{},"body":{"index.html":{}}}],["common.admin",{"_index":3191,"title":{},"body":{"components/HeaderComponent.html":{}}}],["common.all",{"_index":679,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["common.back",{"_index":919,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["common.companies",{"_index":1498,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/ShellLayout.html":{}}}],["common.dashboard",{"_index":687,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["common.home",{"_index":4434,"title":{},"body":{"components/ShellLayout.html":{}}}],["common.loading",{"_index":227,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminMessagesPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["common.menu",{"_index":1742,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["common.next",{"_index":697,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{}}}],["common.no_summary",{"_index":1020,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["common.open",{"_index":1184,"title":{},"body":{"components/AdminFilesPage.html":{},"components/HeaderComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["common.page",{"_index":695,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["common.previous",{"_index":696,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{}}}],["common.risk",{"_index":4073,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["common_opportunities",{"_index":1904,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["common_risks",{"_index":1905,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["commonmodule",{"_index":145,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["companies",{"_index":499,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"interfaces/AggregateInsights.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["companies'},{'name",{"_index":457,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["companies.css",{"_index":592,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["companies.facade",{"_index":652,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["companies.facade.ts",{"_index":508,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:10",{"_index":543,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:11",{"_index":538,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:12",{"_index":551,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:13",{"_index":547,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:14",{"_index":549,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:15",{"_index":544,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:16",{"_index":541,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:17",{"_index":535,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:19",{"_index":545,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:21",{"_index":528,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:42",{"_index":525,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:48",{"_index":530,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:54",{"_index":526,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:60",{"_index":527,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:66",{"_index":533,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:7",{"_index":540,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:77",{"_index":546,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.facade.ts:9",{"_index":536,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["companies.html",{"_index":593,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["companies.usecase",{"_index":4027,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["companies.usecase.ts",{"_index":1929,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["companies.usecase.ts:10",{"_index":1930,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{}}}],["companies.usecase.ts:8",{"_index":3482,"title":{},"body":{"injectables/ListCompaniesUseCase.html":{}}}],["companies.usecase.ts:9",{"_index":1933,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["companies_port",{"_index":2084,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"miscellaneous/variables.html":{}}}],["companiesmodal",{"_index":4169,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["companiesport",{"_index":2839,"title":{"interfaces/CompaniesPort.html":{}},"body":{"interfaces/CompaniesPort.html":{},"interfaces/CompanyItem.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["companiesservice",{"_index":2085,"title":{"injectables/CompaniesService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"miscellaneous/variables.html":{}}}],["company",{"_index":732,"title":{},"body":{"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"injectables/GetCompanyByRucUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["company'},{'name",{"_index":459,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["company()!.company!.additional!.belongs_to_mv",{"_index":963,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.is_bic",{"_index":969,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.is_public_interest",{"_index":966,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.is_state_supplier",{"_index":956,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.judicial_disposition",{"_index":971,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.offers_remittances",{"_index":958,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.additional!.sells_on_credit",{"_index":960,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.address",{"_index":938,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.ciiu",{"_index":929,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.company_type",{"_index":932,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.fetched_at",{"_index":946,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.incorporation_date",{"_index":935,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company!.legal_status",{"_index":927,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.additional",{"_index":953,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.address",{"_index":936,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.business_name",{"_index":922,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.ciiu",{"_index":928,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.company_type",{"_index":930,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.fetched_at",{"_index":944,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.incorporation_date",{"_index":933,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.legal_status",{"_index":924,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.company?.source_url",{"_index":939,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.imputation!.error",{"_index":948,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.imputation?.error",{"_index":947,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.llm_insights",{"_index":986,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.metrics",{"_index":975,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.metrics![k",{"_index":978,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.missing_data",{"_index":952,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.missing_data?.length",{"_index":949,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.name",{"_index":921,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.overview",{"_index":974,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.score",{"_index":942,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.score_source",{"_index":943,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.sector",{"_index":923,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.signals",{"_index":983,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.signals?.length",{"_index":981,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company()!.tax_id",{"_index":920,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company.css",{"_index":832,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company.html",{"_index":833,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["company_count",{"_index":1925,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["company_type",{"_index":798,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["companydashboardsummary",{"_index":1908,"title":{"interfaces/CompanyDashboardSummary.html":{}},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["companyerror",{"_index":835,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{}}}],["companyinsights",{"_index":1911,"title":{"interfaces/CompanyInsights.html":{}},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["companyitem",{"_index":552,"title":{"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{}},"body":{"injectables/AdminCompaniesFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["companyloading",{"_index":836,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{}}}],["compat",{"_index":4271,"title":{},"body":{"injectables/SessionsService.html":{}}}],["compatibility",{"_index":3029,"title":{},"body":{"injectables/FilesService.html":{},"components/HeaderComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["compañías",{"_index":572,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["compile",{"_index":4864,"title":{},"body":{"index.html":{}}}],["complejidad",{"_index":3722,"title":{},"body":{"components/RegisterPage.html":{}}}],["completa",{"_index":3590,"title":{},"body":{"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{}}}],["completado",{"_index":2605,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["complete",{"_index":3881,"title":{},"body":{"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"index.html":{}}}],["completemessage",{"_index":3573,"title":{},"body":{"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{}}}],["completemessage(message",{"_index":3587,"title":{},"body":{"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{}}}],["component",{"_index":127,"title":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"index.html":{}}}],["component_template",{"_index":454,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["componentes",{"_index":4553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["components",{"_index":129,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"index.html":{},"overview.html":{}}}],["components/companies/session",{"_index":1415,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["components/files/session",{"_index":1413,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["components/profile",{"_index":1693,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["components/sidebar/sidebar",{"_index":4374,"title":{},"body":{"components/ShellLayout.html":{}}}],["composer",{"_index":2339,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composer'},{'name",{"_index":474,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["composer.component.css",{"_index":2340,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composer.component.html",{"_index":2341,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composer.drop_hint",{"_index":2440,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composer.uploading",{"_index":215,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["composer.uploading_files",{"_index":2439,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composer.uploads_disabled",{"_index":2434,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["composerinput",{"_index":2359,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["comprueba",{"_index":3935,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["computed",{"_index":614,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminUsersFacade.html":{}}}],["con",{"_index":1189,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/SessionsService.html":{}}}],["conectando",{"_index":2911,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["conexión",{"_index":2602,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ConnectionStatusService.html":{}}}],["confidence",{"_index":2118,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["config",{"_index":4915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configura",{"_index":198,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["configuración",{"_index":1600,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["configured",{"_index":3805,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["confirm",{"_index":4410,"title":{},"body":{"components/ShellLayout.html":{}}}],["confirm.focus",{"_index":4429,"title":{},"body":{"components/ShellLayout.html":{}}}],["confirmbtn",{"_index":4324,"title":{},"body":{"components/ShellLayout.html":{}}}],["confirmdeletefromshell",{"_index":4332,"title":{},"body":{"components/ShellLayout.html":{}}}],["connecting",{"_index":2905,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"miscellaneous/typealiases.html":{}}}],["connectionstatus",{"_index":2503,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ConnectionStatusService.html":{},"miscellaneous/typealiases.html":{}}}],["connectionstatusservice",{"_index":2504,"title":{"injectables/ConnectionStatusService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/ConnectionStatusService.html":{}}}],["cono",{"_index":210,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["console",{"_index":3267,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["console.error",{"_index":2593,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/TtsService.html":{}}}],["console.error('[kpisservice",{"_index":3268,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["console.error('sse",{"_index":3910,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["console.log",{"_index":2604,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/MessageManagerService.html":{},"classes/SendMessageUseCase.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{}}}],["console.warn('error",{"_index":3968,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["const",{"_index":84,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/LoginFacade.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/variables.html":{}}}],["constitución",{"_index":934,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["constructor",{"_index":2003,"title":{},"body":{"injectables/AppInfoService.html":{},"injectables/ChatEventsService.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/KpisApiService.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"injectables/SessionsService.html":{}}}],["constructor(chatfacade",{"_index":2501,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["constructor(chatstream",{"_index":3985,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["constructor(http",{"_index":2004,"title":{},"body":{"injectables/AppInfoService.html":{},"injectables/KpisApiService.html":{},"injectables/SessionsService.html":{}}}],["constructor(private",{"_index":2011,"title":{},"body":{"injectables/AppInfoService.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/KpisApiService.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"injectables/SessionsService.html":{}}}],["constructor(sessions",{"_index":2958,"title":{},"body":{"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{}}}],["contain",{"_index":412,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["container",{"_index":235,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ScrollManagerService.html":{}}}],["container.nativeelement",{"_index":3965,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["container:hover",{"_index":406,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["container?.nativeelement",{"_index":3964,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["container{position:relative;width:100",{"_index":3351,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["contenedores",{"_index":4549,"title":{},"body":{"injectables/ThemeService.html":{}}}],["content",{"_index":267,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminMessageItem.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"injectables/MessageManagerService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["content_type",{"_index":2135,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/VideoData.html":{}}}],["contenttype",{"_index":2327,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"miscellaneous/typealiases.html":{}}}],["context",{"_index":2136,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["continue",{"_index":3897,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["contraseña",{"_index":3687,"title":{},"body":{"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{}}}],["contributions",{"_index":767,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["control",{"_index":709,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/RegisterPage.html":{},"interfaces/SSEMessage.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":3723,"title":{},"body":{"components/RegisterPage.html":{}}}],["controles",{"_index":1165,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["controller",{"_index":3835,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["controller.abort",{"_index":3912,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["controller.signal",{"_index":3847,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["controls",{"_index":708,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["conversaciones",{"_index":1485,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["convert",{"_index":4831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converted",{"_index":3008,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["copy",{"_index":748,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{}}}],["copytaxid",{"_index":597,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["copytaxid(taxid",{"_index":600,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["copytext",{"_index":837,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["core/models",{"_index":71,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/App.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"classes/GetSessionUseCase.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{}}}],["core/models/app",{"_index":2010,"title":{},"body":{"injectables/AppInfoService.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["core/models/auth",{"_index":2180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginFacade.html":{}}}],["core/models/chat",{"_index":2802,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{}}}],["core/models/paginated",{"_index":1209,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["core/models/pagination",{"_index":3022,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["core/models/session",{"_index":1937,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["core/ports",{"_index":75,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/CreateUserUseCase.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["core/ports/admin",{"_index":1759,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{}}}],["core/ports/sessions.port",{"_index":1936,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{}}}],["core/tokens",{"_index":78,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["core/use",{"_index":554,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminUsersFacade.html":{},"components/App.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["cores",{"_index":3654,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["correcto",{"_index":3172,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SessionsService.html":{}}}],["count",{"_index":785,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"components/ChatComposerComponent.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["counter",{"_index":2431,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["courier",{"_index":1065,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["cover",{"_index":4162,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["crea",{"_index":2765,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["creando",{"_index":1867,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["create",{"_index":1820,"title":{},"body":{"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{}}}],["create(payload",{"_index":1794,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["createbotmessage",{"_index":2619,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["createbotmessage(messages",{"_index":3591,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["createbotmessage(runid",{"_index":2640,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{}}}],["created",{"_index":1983,"title":{},"body":{"components/App.html":{}}}],["created.setattribute('rel",{"_index":1985,"title":{},"body":{"components/App.html":{}}}],["created_at",{"_index":1221,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AppInfo.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/ImageData.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["created_new_session",{"_index":4306,"title":{},"body":{"injectables/SessionsService.html":{}}}],["createnoderequesthandler(app",{"_index":4937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1813,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["createsystemmessage",{"_index":2724,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["createsystemmessage(content",{"_index":2769,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["createuc",{"_index":1821,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["createusermessage",{"_index":2725,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["createusermessage(content",{"_index":2771,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["createuserpayload",{"_index":1790,"title":{"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{}},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/UpdateUserUseCase.html":{}}}],["createuserusecase",{"_index":1857,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"injectables/AdminUsersFacade.html":{},"injectables/CreateUserUseCase.html":{}}}],["creating",{"_index":1822,"title":{},"body":{"injectables/AdminUsersFacade.html":{},"injectables/SessionsService.html":{}}}],["credit_recommendation",{"_index":1915,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["critical",{"_index":2951,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["crudo",{"_index":1018,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["crédito",{"_index":962,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["css",{"_index":2887,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["ctor",{"_index":3347,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx",{"_index":2521,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/LazyChartComponent.html":{}}}],["ctx.arc(cx",{"_index":3476,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.beginpath",{"_index":3452,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.cdr.detectchanges",{"_index":2559,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.cdr.markforcheck",{"_index":2548,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.clearrect(0",{"_index":3445,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.currentmessage",{"_index":2560,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.currentmessage.content",{"_index":2566,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.currentmessage.iscomplete",{"_index":2561,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.fillrect(0",{"_index":3448,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.fillrect(x",{"_index":3463,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.fillstyle",{"_index":3446,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.linewidth",{"_index":3451,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.moveto(pts[0].x",{"_index":3457,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.selectedsessionid",{"_index":2544,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.streamingsessionid",{"_index":2545,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["ctx.stroke",{"_index":3478,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ctx.strokestyle",{"_index":3449,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["cualquier",{"_index":4546,"title":{},"body":{"injectables/ThemeService.html":{}}}],["cubic",{"_index":1057,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["cubrir",{"_index":3954,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["cumple",{"_index":3734,"title":{},"body":{"components/RegisterPage.html":{}}}],["cur",{"_index":1476,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cur.expanded",{"_index":1480,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cur.main",{"_index":1478,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["cur.thinks",{"_index":1479,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["current",{"_index":655,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/LanguageService.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["currentchunk",{"_index":3821,"title":{},"body":{"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["currentevent",{"_index":3860,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["currentmessage",{"_index":2534,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["currentmessageid",{"_index":4590,"title":{},"body":{"injectables/TtsService.html":{}}}],["currentstatus",{"_index":2881,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["currentutterance",{"_index":4591,"title":{},"body":{"injectables/TtsService.html":{}}}],["cursor",{"_index":395,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["custompreloadstrategy",{"_index":2046,"title":{"injectables/CustomPreloadStrategy.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["cx",{"_index":3464,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["cy",{"_index":3465,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["cyber",{"_index":2257,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["d",{"_index":1980,"title":{},"body":{"components/App.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["d).join",{"_index":3683,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["d.createelement('link",{"_index":1984,"title":{},"body":{"components/App.html":{}}}],["d.head.appendchild(created",{"_index":1986,"title":{},"body":{"components/App.html":{}}}],["d.queryselector(\"link[rel*='icon",{"_index":1981,"title":{},"body":{"components/App.html":{}}}],["d.queryselector(\"link[rel='icon",{"_index":1987,"title":{},"body":{"components/App.html":{}}}],["d?.msg",{"_index":3682,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["dangerous",{"_index":2742,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["dark",{"_index":1658,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/ThemeService.html":{},"miscellaneous/typealiases.html":{}}}],["dark)')?.matches",{"_index":4565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dashboard",{"_index":754,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/AdminStatsFacade.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["dashboard'},{'name",{"_index":461,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["dashboard.css",{"_index":231,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["dashed",{"_index":2470,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["data",{"_index":896,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["data.chats",{"_index":4247,"title":{},"body":{"injectables/SessionsService.html":{}}}],["data.currentchunk",{"_index":2557,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.event",{"_index":2540,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.fullcontent",{"_index":2567,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.items",{"_index":3644,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["data.items?.length",{"_index":3641,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["data.map(mapitem",{"_index":2870,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["data.messages",{"_index":4245,"title":{},"body":{"injectables/SessionsService.html":{}}}],["data.rawmessage",{"_index":2572,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.rawmessage.created_at",{"_index":2565,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.rawmessage.run_id",{"_index":2563,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["data.results",{"_index":4237,"title":{},"body":{"injectables/SessionsService.html":{}}}],["data.session_id",{"_index":3864,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data.sessions",{"_index":4239,"title":{},"body":{"injectables/SessionsService.html":{}}}],["data.total",{"_index":3642,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["data?.agent_message?.content",{"_index":3874,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data?.delta",{"_index":3873,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data?.error",{"_index":3882,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data?.info?.count",{"_index":1808,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["data?.info?.page_number",{"_index":1807,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["data?.length",{"_index":1556,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/PaginatedApi-1.html":{}}}],["data?.message?.content",{"_index":3870,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data?.results",{"_index":1806,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["data?.results?.length",{"_index":2872,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["data?.session_id",{"_index":3862,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["data?.total",{"_index":3639,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["data_quality_flags",{"_index":1921,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["databuffer",{"_index":3861,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["datasets",{"_index":907,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["date",{"_index":784,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["date().toisostring",{"_index":3228,"title":{},"body":{"injectables/KpisMockService.html":{}}}],["date(timestamp",{"_index":2806,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["date.now",{"_index":2705,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{}}}],["date.parse(value",{"_index":4316,"title":{},"body":{"injectables/SessionsService.html":{}}}],["date.tolocaletimestring('es",{"_index":2807,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["datos",{"_index":950,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/KpisMockService.html":{}}}],["days",{"_index":1748,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["dc2626",{"_index":307,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["dd",{"_index":803,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["de",{"_index":202,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/KpisMockService.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":3688,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["decoder",{"_index":3857,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["decoder.decode(value",{"_index":3886,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["decoration",{"_index":755,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["decorators",{"_index":863,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["dedicated",{"_index":3247,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["dedicatedurl",{"_index":3245,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["dedupe",{"_index":1321,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["deep",{"_index":4393,"title":{},"body":{"components/ShellLayout.html":{}}}],["default",{"_index":42,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":3270,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/ShellLayout.html":{}}}],["defaultspeed",{"_index":4742,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["defecto",{"_index":3261,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"miscellaneous/variables.html":{}}}],["defensive",{"_index":2755,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["defined",{"_index":29,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["del",{"_index":211,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{},"components/HeaderComponent.html":{},"injectables/MessageManagerService.html":{},"injectables/ScrollManagerService.html":{},"components/ShellLayout.html":{}}}],["delete",{"_index":1823,"title":{},"body":{"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"components/ShellLayout.html":{}}}],["delete(userid",{"_index":1796,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["deletedialog",{"_index":4325,"title":{},"body":{"components/ShellLayout.html":{}}}],["deletesession",{"_index":2620,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["deletesession(agentid",{"_index":4214,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["deletesession(sessionid",{"_index":2643,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["deletesessionuc",{"_index":2609,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["deletesessionusecase",{"_index":2665,"title":{"classes/DeleteSessionUseCase.html":{}},"body":{"injectables/ChatFacade.html":{},"classes/DeleteSessionUseCase.html":{}}}],["deleteuc",{"_index":1824,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["deleteuserusecase",{"_index":1859,"title":{"injectables/DeleteUserUseCase.html":{}},"body":{"injectables/AdminUsersFacade.html":{},"injectables/DeleteUserUseCase.html":{}}}],["delta",{"_index":3872,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["demo",{"_index":3226,"title":{},"body":{"injectables/KpisMockService.html":{}}}],["denegado",{"_index":3063,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["dependencies",{"_index":4786,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependiendo",{"_index":4257,"title":{},"body":{"injectables/SessionsService.html":{}}}],["deprecated",{"_index":3310,"title":{},"body":{"injectables/LanguageService.html":{}}}],["deps",{"_index":2054,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["derived",{"_index":654,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["desc",{"_index":585,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["desconocido",{"_index":2601,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ConnectionStatusService.html":{}}}],["description",{"_index":389,"title":{},"body":{"components/AdminAppInfoPage.html":{},"interfaces/AgentModel.html":{},"components/LazyChartComponent.html":{},"interfaces/Model.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["descriptivo",{"_index":2891,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["desde",{"_index":4397,"title":{},"body":{"components/ShellLayout.html":{}}}],["design",{"_index":443,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["desktop",{"_index":1701,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["desktop/full",{"_index":2954,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["destroy",{"_index":2876,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["destroychart",{"_index":844,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["destructive",{"_index":1043,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["detail",{"_index":3678,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["detail.map((d",{"_index":3681,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["detailed",{"_index":4892,"title":{},"body":{"index.html":{}}}],["details",{"_index":1120,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["detección",{"_index":4406,"title":{},"body":{"components/ShellLayout.html":{}}}],["determina",{"_index":2789,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["detiene",{"_index":4759,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["dev",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":4841,"title":{},"body":{"index.html":{}}}],["devicememory",{"_index":3660,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["devolvemos",{"_index":3259,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["digit",{"_index":2809,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["digit/i.test(errormessage",{"_index":3694,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["dirección",{"_index":937,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["direct",{"_index":648,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["direction",{"_index":331,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["directive",{"_index":452,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["directives",{"_index":505,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"index.html":{}}}],["directory",{"_index":4868,"title":{},"body":{"index.html":{}}}],["disable",{"_index":3266,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["disabled",{"_index":2397,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{}}}],["disc",{"_index":1069,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["diseño",{"_index":233,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["dispatch",{"_index":3892,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["display",{"_index":281,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["displayedcontent",{"_index":2333,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{}}}],["displayedlength",{"_index":4769,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["disposición",{"_index":972,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["dist",{"_index":4867,"title":{},"body":{"index.html":{}}}],["diversification_comment",{"_index":1906,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["doc",{"_index":1178,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/BackgroundService.html":{},"injectables/ThemeService.html":{}}}],["doc.body",{"_index":2288,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["doc.documentelement",{"_index":4545,"title":{},"body":{"injectables/ThemeService.html":{}}}],["doc.queryselectorall('.dark').foreach(el",{"_index":4550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document",{"_index":1147,"title":{},"body":{"components/AdminFilesPage.html":{},"components/App.html":{},"injectables/BackgroundService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ThemeService.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/typealiases.html":{}}}],["document.activeelement",{"_index":4051,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["document.body.classlist.add('perf",{"_index":3665,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["document.body.classlist.contains('perf",{"_index":2941,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["document.body.classlist.remove('perf",{"_index":3666,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["document:click",{"_index":1643,"title":{},"body":{"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{}}}],["document:keydown.escape",{"_index":3131,"title":{},"body":{"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["documentos",{"_index":1170,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["dom",{"_index":132,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["don't",{"_index":3879,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["done",{"_index":3884,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["dots",{"_index":2488,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["double",{"_index":3880,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["doughnut",{"_index":3374,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["download",{"_index":4152,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["dpr",{"_index":3656,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["drag",{"_index":2401,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["dragcounter",{"_index":2342,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["dragevent",{"_index":2382,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["dragging",{"_index":2343,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["drags",{"_index":2430,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["drawfallback",{"_index":3358,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["drawfallback(canvas",{"_index":3371,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["drawing",{"_index":3341,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["drawn",{"_index":3412,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["driven",{"_index":557,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["drop",{"_index":2402,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["dropdown",{"_index":3173,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dropoverlaypulse",{"_index":2473,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["duration",{"_index":4445,"title":{},"body":{"components/ShellLayout.html":{}}}],["during",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":90,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"components/ChatComposerComponent.html":{},"injectables/FilesFacade.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{}}}],["e.datatransfer",{"_index":2419,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["e.datatransfer.dropeffect",{"_index":2426,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["e.g",{"_index":2398,"title":{},"body":{"components/ChatComposerComponent.html":{},"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["e.isintersecting",{"_index":1437,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["e.key",{"_index":4424,"title":{},"body":{"components/ShellLayout.html":{}}}],["e.preventdefault",{"_index":2422,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["e.shiftkey",{"_index":4427,"title":{},"body":{"components/ShellLayout.html":{}}}],["e.stoppropagation",{"_index":2423,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["e2e",{"_index":4879,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":4881,"title":{},"body":{"index.html":{}}}],["e?.error?.detail",{"_index":3679,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["e?.error?.message",{"_index":3684,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["e?.message",{"_index":1866,"title":{},"body":{"injectables/AdminUsersFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{}}}],["e?.preventdefault",{"_index":2414,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["e?.stoppropagation",{"_index":2415,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["early",{"_index":3868,"title":{},"body":{"interfaces/SSEMessage.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["early_alerts",{"_index":1920,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["ease",{"_index":344,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["east1.run.app",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edges",{"_index":2295,"title":{},"body":{"injectables/BackgroundService.html":{},"components/HeaderComponent.html":{}}}],["ef4444",{"_index":306,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["efecto",{"_index":4756,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["effect",{"_index":868,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["effective",{"_index":4504,"title":{},"body":{"injectables/ThemeService.html":{}}}],["ejecuta",{"_index":3930,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["el",{"_index":119,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompanyPage.html":{},"components/App.html":{},"injectables/ChatEventsService.html":{},"injectables/ConnectionStatusService.html":{},"components/HeaderComponent.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsService.html":{},"injectables/ThemeService.html":{},"injectables/TypewriterService.html":{}}}],["el.classlist.remove('dark",{"_index":4551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["el.href",{"_index":1990,"title":{},"body":{"components/App.html":{}}}],["el.scrollheight",{"_index":3972,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["el.scrolltop",{"_index":3971,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["el.type",{"_index":1988,"title":{},"body":{"components/App.html":{}}}],["elegir",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":451,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["element.scrollheight",{"_index":3967,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["element.scrolltop",{"_index":3966,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["elemento",{"_index":4548,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elementref",{"_index":862,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["elements",{"_index":2823,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["ellipsis",{"_index":1073,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["email",{"_index":1788,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListUsersUseCase.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["email/name",{"_index":1150,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["embed",{"_index":2745,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["emit",{"_index":2405,"title":{},"body":{"components/ChatComposerComponent.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["emit(currentevent",{"_index":3896,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["empresas",{"_index":673,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["empty",{"_index":3646,"title":{},"body":{"interfaces/PaginatedApi.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/TtsService.html":{}}}],["empty::before",{"_index":4093,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["en",{"_index":1663,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"injectables/LanguageService.html":{},"injectables/RiskFacade.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":3658,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["enabled",{"_index":2229,"title":{},"body":{"injectables/BackgroundService.html":{},"injectables/ChatFacade.html":{},"components/HeaderComponent.html":{}}}],["encontraron",{"_index":1185,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["end",{"_index":703,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{},"classes/AppTranslateLoader.html":{},"components/LazyChartComponent.html":{},"interfaces/SSEMessage.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":4695,"title":{},"body":{"injectables/TtsService.html":{}}}],["endpoint",{"_index":1812,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/KpisApiService.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["endpoints",{"_index":2184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionsService.html":{}}}],["endpoints.length",{"_index":4289,"title":{},"body":{"injectables/SessionsService.html":{}}}],["endpoints[idx",{"_index":4293,"title":{},"body":{"injectables/SessionsService.html":{}}}],["enrichcurrentmessage",{"_index":2495,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["enrichcurrentmessage(ctx",{"_index":2517,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["enriched",{"_index":792,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["ensure",{"_index":4389,"title":{},"body":{"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["ensurelib",{"_index":3359,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ensurevoices",{"_index":4598,"title":{},"body":{"injectables/TtsService.html":{}}}],["ensurevoices(synth",{"_index":4606,"title":{},"body":{"injectables/TtsService.html":{}}}],["entrada",{"_index":3727,"title":{},"body":{"components/RegisterPage.html":{}}}],["entre",{"_index":4764,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["entries",{"_index":1436,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{},"miscellaneous/functions.html":{}}}],["entry",{"_index":1466,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["enum",{"_index":2102,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["enumerations",{"_index":4807,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviando",{"_index":3989,"title":{},"body":{"classes/SendMessageUseCase.html":{},"injectables/SessionsService.html":{}}}],["enviar",{"_index":4290,"title":{},"body":{"injectables/SessionsService.html":{}}}],["environment",{"_index":1531,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":1523,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["environment.mockkpis",{"_index":2092,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":1532,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["equivalent",{"_index":4456,"title":{},"body":{"components/ShellLayout.html":{}}}],["equivalente",{"_index":4261,"title":{},"body":{"injectables/SessionsService.html":{}}}],["err",{"_index":3906,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["err.name",{"_index":3907,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["err.status",{"_index":4298,"title":{},"body":{"injectables/SessionsService.html":{}}}],["err?.status",{"_index":4302,"title":{},"body":{"injectables/SessionsService.html":{}}}],["error",{"_index":14,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AggregateInsights.html":{},"interfaces/BaseAgentEvent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"injectables/ConnectionStatusService.html":{},"injectables/FilesFacade.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TtsService.html":{},"miscellaneous/typealiases.html":{}}}],["error::before",{"_index":4095,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["error:hover",{"_index":4491,"title":{},"body":{"components/ShellLayout.html":{}}}],["error?.message",{"_index":2600,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["errormessage",{"_index":2599,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{}}}],["errors",{"_index":1723,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["errortext",{"_index":3851,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["es",{"_index":1662,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"injectables/ChatUtilsService.html":{},"injectables/LanguageService.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["esc",{"_index":3187,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eslint",{"_index":3265,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["est",{"_index":2552,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/RegisterFacade.html":{},"injectables/ScrollManagerService.html":{},"injectables/TypewriterService.html":{}}}],["esta",{"_index":3066,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["estado",{"_index":925,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ConnectionStatusService.html":{},"components/ShellLayout.html":{}}}],["estadísticas",{"_index":3599,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["estilos",{"_index":229,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["eta",{"_index":2132,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["etc",{"_index":3395,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/ThemeService.html":{}}}],["etiqueta",{"_index":2784,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["ev",{"_index":1712,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/BackgroundService.html":{},"components/HeaderComponent.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["ev.clientx",{"_index":2316,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["ev.clienty",{"_index":2318,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["ev?.stoppropagation",{"_index":3176,"title":{},"body":{"components/HeaderComponent.html":{}}}],["event",{"_index":159,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"injectables/MessageManagerService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/TtsService.html":{},"interfaces/VideoData.html":{}}}],["event.action",{"_index":4400,"title":{},"body":{"components/ShellLayout.html":{}}}],["event.key",{"_index":4040,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["event.preventdefault",{"_index":4054,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["event.shiftkey",{"_index":4052,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["event.target",{"_index":1608,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["event?.stoppropagation",{"_index":1725,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["event_data",{"_index":2137,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["eventemitter",{"_index":2372,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["evento",{"_index":2786,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["eventos",{"_index":4396,"title":{},"body":{"components/ShellLayout.html":{}}}],["events",{"_index":2472,"title":{},"body":{"components/ChatComposerComponent.html":{},"interfaces/SSEMessage.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["events.service",{"_index":4376,"title":{},"body":{"components/ShellLayout.html":{}}}],["events.service.ts",{"_index":2494,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/SessionsEventsService.html":{},"miscellaneous/typealiases.html":{}}}],["events.service.ts:10",{"_index":4197,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:115",{"_index":2520,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:14",{"_index":4196,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:140",{"_index":2527,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:167",{"_index":2525,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:18",{"_index":4199,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:183",{"_index":2523,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:22",{"_index":4188,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:23",{"_index":2516,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:26",{"_index":4195,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:30",{"_index":4187,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:34",{"_index":4193,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:36",{"_index":2531,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:39",{"_index":4184,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:44",{"_index":4186,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:48",{"_index":4191,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:53",{"_index":4183,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:58",{"_index":4189,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:62",{"_index":4185,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:66",{"_index":4194,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["events.service.ts:79",{"_index":2529,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["events.service.ts:9",{"_index":4198,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["eventtype",{"_index":2328,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"miscellaneous/typealiases.html":{}}}],["everything",{"_index":2955,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["evt",{"_index":161,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["evt.target",{"_index":190,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["example",{"_index":4843,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1198,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/CreateUserUseCase.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"index.html":{}}}],["execute(agentid",{"_index":2960,"title":{},"body":{"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{}}}],["execute(file",{"_index":4779,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["execute(params",{"_index":1214,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{}}}],["execute(payload",{"_index":2923,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["execute(ruc",{"_index":3085,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["execute(sessionid",{"_index":1199,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{}}}],["execute(t",{"_index":2065,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["execute(token",{"_index":3103,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["execute(userid",{"_index":2964,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["execute(version",{"_index":4783,"title":{},"body":{"injectables/UpsertRiskWeightsUseCase.html":{}}}],["executescheduledscroll",{"_index":3918,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["executescheduledscroll(container",{"_index":3928,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["existe",{"_index":4258,"title":{},"body":{"injectables/SessionsService.html":{}}}],["existente",{"_index":3171,"title":{},"body":{"components/HeaderComponent.html":{}}}],["existing",{"_index":823,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TtsService.html":{}}}],["existing.length",{"_index":4730,"title":{},"body":{"injectables/TtsService.html":{}}}],["exists",{"_index":3025,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["expanded",{"_index":1453,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["expecting",{"_index":3039,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["explora",{"_index":670,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{}}}],["export",{"_index":81,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["expose",{"_index":1123,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["express",{"_index":2187,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["external_execution",{"_index":1898,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["extra_data",{"_index":2139,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["extracted",{"_index":1425,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["extracted_available",{"_index":3011,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["extraction",{"_index":3024,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["extractthinkblocks",{"_index":1345,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["extractthinkblocks(content",{"_index":1355,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["extras",{"_index":1416,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["f",{"_index":1015,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{}}}],["f.content_type",{"_index":1175,"title":{},"body":{"components/AdminFilesPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["f.content_type.startswith('image",{"_index":1174,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["f.content_type.startswith(\\'image",{"_index":1191,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["f.filename",{"_index":1179,"title":{},"body":{"components/AdminFilesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["f.id",{"_index":2442,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["f.name",{"_index":4281,"title":{},"body":{"injectables/SessionsService.html":{}}}],["f.owner_id",{"_index":1134,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["f.session_id",{"_index":1180,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["f.type_file",{"_index":1177,"title":{},"body":{"components/AdminFilesPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["f.url",{"_index":1173,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["f5",{"_index":4392,"title":{},"body":{"components/ShellLayout.html":{}}}],["f87171",{"_index":3473,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["facade",{"_index":152,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["factor",{"_index":1603,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["factores",{"_index":993,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["fadein",{"_index":4079,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["fadeinsuccess",{"_index":429,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["failed",{"_index":1767,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"injectables/LoginFacade.html":{}}}],["failed_generation",{"_index":3815,"title":{},"body":{"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["failures",{"_index":3724,"title":{},"body":{"components/RegisterPage.html":{}}}],["fallaron",{"_index":4291,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fallback",{"_index":2691,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/LazyChartComponent.html":{},"interfaces/PaginatedApi.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["fallbacklang",{"_index":2055,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":866,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"injectables/AuthGuardService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"injectables/MessageManagerService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{}}}],["faltantes",{"_index":951,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["family",{"_index":746,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["favicon",{"_index":1970,"title":{},"body":{"components/App.html":{}}}],["favicon.ico",{"_index":1978,"title":{},"body":{"components/App.html":{},"injectables/AppInfoService.html":{}}}],["fb",{"_index":15,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["fbbf24",{"_index":3472,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["fd",{"_index":4268,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('audio",{"_index":4278,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('content",{"_index":4273,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('files",{"_index":4280,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('message",{"_index":4270,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('session_id",{"_index":4277,"title":{},"body":{"injectables/SessionsService.html":{}}}],["fd.append('user_id",{"_index":4276,"title":{},"body":{"injectables/SessionsService.html":{}}}],["feature",{"_index":2089,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":3042,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["fetch(url",{"_index":3845,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["fetched_at",{"_index":821,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["field",{"_index":534,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["fields",{"_index":824,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["file.usecase.ts",{"_index":4778,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["file.usecase.ts:7",{"_index":4781,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["file.usecase.ts:8",{"_index":4780,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["file_ids",{"_index":1222,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["fileid",{"_index":3001,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":3007,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["files",{"_index":16,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/UploadFileUseCase.html":{},"index.html":{}}}],["files'},{'name",{"_index":463,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["files.html",{"_index":1080,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["files.usecase",{"_index":4135,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["files.usecase.ts",{"_index":3485,"title":{},"body":{"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{}}}],["files.usecase.ts:7",{"_index":3490,"title":{},"body":{"injectables/ListSessionFilesUseCase.html":{}}}],["files.usecase.ts:8",{"_index":3487,"title":{},"body":{"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{}}}],["files.usecase.ts:9",{"_index":3486,"title":{},"body":{"injectables/ListFilesUseCase.html":{}}}],["files_breakdown",{"_index":788,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["files_page.download",{"_index":4153,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["files_port",{"_index":77,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"classes/AppTranslateLoader.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/UploadFileUseCase.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":2353,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["filesdropped",{"_index":2360,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["filesfacade",{"_index":1113,"title":{"injectables/FilesFacade.html":{}},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{}}}],["filesmodal",{"_index":4170,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["filesport",{"_index":72,"title":{"interfaces/FilesPort.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/FilesPort.html":{},"interfaces/ListFilesResponse.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{}}}],["filesselected",{"_index":2361,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["filesservice",{"_index":2083,"title":{"injectables/FilesService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/variables.html":{}}}],["filetype",{"_index":2987,"title":{},"body":{"injectables/FilesFacade.html":{},"miscellaneous/typealiases.html":{}}}],["fill",{"_index":289,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["filter",{"_index":325,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["filter((v",{"_index":1135,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["filtereditems",{"_index":594,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["filters",{"_index":653,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["filtros",{"_index":1164,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["final",{"_index":3937,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["finaliza",{"_index":3589,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["finally",{"_index":108,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionFilesModalComponent.html":{}}}],["financials",{"_index":768,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["findmessagebyid",{"_index":3574,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["findmessagebyid(messages",{"_index":3594,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["finish",{"_index":3877,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["firebase",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2036,"title":{},"body":{"classes/AppTranslateLoader.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["first.focus",{"_index":4055,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["firstvaluefrom",{"_index":1529,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["firstvaluefrom(this.http.delete(url",{"_index":1817,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1552,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["firstvaluefrom(this.http.get>(url",{"_index":3222,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["firstvaluefrom(this.http.post(url",{"_index":1815,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["firstvaluefrom(this.http.put(url",{"_index":1816,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["firstvaluefrom(this.translate.use(lang",{"_index":3321,"title":{},"body":{"injectables/LanguageService.html":{}}}],["fit",{"_index":382,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["fixed",{"_index":435,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["flag",{"_index":2090,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":282,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["flicker",{"_index":2432,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["flush",{"_index":4705,"title":{},"body":{"injectables/TtsService.html":{}}}],["focus",{"_index":4038,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["focusables",{"_index":4043,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["focusables.length",{"_index":4048,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["focusables[0",{"_index":4049,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["focusables[focusables.length",{"_index":4050,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["following",{"_index":4876,"title":{},"body":{"index.html":{}}}],["fondo",{"_index":3952,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["font",{"_index":276,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["forbidden",{"_index":3061,"title":{},"body":{"components/ForbiddenPage.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":479,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["forbiddenpage",{"_index":478,"title":{"components/ForbiddenPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["foreground",{"_index":259,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["form",{"_index":17,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["form.append('session_id",{"_index":3040,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["form.append('subfolder",{"_index":3034,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["form.append('upload",{"_index":3033,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["form.get(\"email\")?.invalid",{"_index":3550,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["form.get(\"email\")?.touched",{"_index":3551,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["form.get(\"message\")?.value?.length",{"_index":2437,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["form.get(\"password\")?.invalid",{"_index":3555,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["form.get(\"password\")?.touched",{"_index":3556,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["form.get(\"username\")?.invalid",{"_index":3740,"title":{},"body":{"components/RegisterPage.html":{}}}],["form.get(\"username\")?.touched",{"_index":3741,"title":{},"body":{"components/RegisterPage.html":{}}}],["form.value.site_icon",{"_index":217,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["form.value.site_logo",{"_index":223,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["formatea",{"_index":2775,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["formattimestamp",{"_index":2726,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["formattimestamp(timestamp",{"_index":2773,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["formbuilder",{"_index":68,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["formcontrol",{"_index":1587,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["formcontrol(0",{"_index":1606,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["formdata",{"_index":3032,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/RiskFacade.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["formdata.append('file",{"_index":3779,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["formgroup",{"_index":2367,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["formsmodule",{"_index":1079,"title":{},"body":{"components/AdminFilesPage.html":{},"components/ChatComposerComponent.html":{}}}],["forzar",{"_index":4405,"title":{},"body":{"components/ShellLayout.html":{}}}],["found",{"_index":1390,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/App.html":{},"components/NotFoundPage.html":{},"injectables/TtsService.html":{}}}],["found'},{'name",{"_index":491,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["found.html",{"_index":3626,"title":{},"body":{"components/NotFoundPage.html":{}}}],["found.ts",{"_index":3625,"title":{},"body":{"components/NotFoundPage.html":{}}}],["found/not",{"_index":3624,"title":{},"body":{"components/NotFoundPage.html":{}}}],["found?.user_id",{"_index":1393,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["frames",{"_index":3950,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["framework",{"_index":4883,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":3165,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["frontend_repository",{"_index":3133,"title":{},"body":{"components/HeaderComponent.html":{}}}],["frosted",{"_index":4466,"title":{},"body":{"components/ShellLayout.html":{}}}],["fuente",{"_index":941,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["fuera",{"_index":3185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["full",{"_index":4446,"title":{},"body":{"components/ShellLayout.html":{}}}],["fullcontent",{"_index":3820,"title":{},"body":{"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/TypewriterService.html":{}}}],["función",{"_index":2799,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["function",{"_index":2029,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/ChatFacade.html":{},"injectables/CustomPreloadStrategy.html":{},"interfaces/PaginatedApi.html":{},"components/RegisterPage.html":{},"injectables/SessionsService.html":{},"injectables/TypewriterService.html":{}}}],["functions",{"_index":4809,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":285,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["genera",{"_index":2779,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["general",{"_index":205,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["generate",{"_index":4857,"title":{},"body":{"index.html":{}}}],["generated",{"_index":4838,"title":{},"body":{"index.html":{}}}],["generatedat",{"_index":3199,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["generateid",{"_index":2727,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["genid",{"_index":2621,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["gestiona",{"_index":672,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["get(userid",{"_index":1793,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["getactive",{"_index":1565,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{}}}],["getactiveriskweightsusecase",{"_index":1588,"title":{"injectables/GetActiveRiskWeightsUseCase.html":{}},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{}}}],["getappinfo",{"_index":1994,"title":{},"body":{"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{}}}],["getappinfousecase",{"_index":1963,"title":{"injectables/GetAppInfoUseCase.html":{}},"body":{"components/App.html":{},"injectables/GetAppInfoUseCase.html":{}}}],["getbackend_repository",{"_index":3150,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbyruc",{"_index":2841,"title":{},"body":{"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{}}}],["getbyruc(ruc",{"_index":2842,"title":{},"body":{"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{}}}],["getcacheduserlabel",{"_index":1081,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["getcacheduserlabel(f.owner_id",{"_index":1183,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["getcacheduserlabel(s.user_id",{"_index":1489,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["getcacheduserlabel(selectedownerid",{"_index":1496,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["getcacheduserlabel(userid",{"_index":1250,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["getcompanybyrucusecase",{"_index":3082,"title":{"injectables/GetCompanyByRucUseCase.html":{}},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["getcompanydashboard",{"_index":830,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["getcompanydashboard(taxid",{"_index":1776,"title":{},"body":{"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{}}}],["getcurrentstatus",{"_index":2899,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["geteventlabel",{"_index":2728,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["geteventlabel(event",{"_index":2781,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["getfile",{"_index":2997,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{}}}],["getfile(fileid",{"_index":2999,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["getfrontend_repository",{"_index":3152,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getinfo",{"_index":1945,"title":{},"body":{"components/App.html":{}}}],["getkpis",{"_index":3216,"title":{},"body":{"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["getkpisusecase",{"_index":3090,"title":{"injectables/GetKpisUseCase.html":{}},"body":{"injectables/GetKpisUseCase.html":{}}}],["getmessagestats",{"_index":3575,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["getmessagestats(messages",{"_index":3597,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["getoverview",{"_index":1775,"title":{},"body":{"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{}}}],["getoverview(days",{"_index":828,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["getprocessed",{"_index":1346,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["getprocessed(m",{"_index":1502,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["getprocessed(message",{"_index":1357,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["getprofile",{"_index":2062,"title":{},"body":{"classes/AppTranslateLoader.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["getprofile(token",{"_index":2162,"title":{},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{}}}],["getprofileuc",{"_index":1622,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["getprofileusecase",{"_index":1688,"title":{"injectables/GetProfileUseCase.html":{}},"body":{"components/AdminShellLayout.html":{},"injectables/GetProfileUseCase.html":{}}}],["getrole",{"_index":4569,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["getsavedsidebarstate",{"_index":4333,"title":{},"body":{"components/ShellLayout.html":{}}}],["getsession",{"_index":2622,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["getsession(agentid",{"_index":4216,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["getsession(sessionid",{"_index":2646,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["getsessions",{"_index":4211,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["getsessions(agentid",{"_index":4218,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["getsessionuc",{"_index":2610,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["getsessionusecase",{"_index":2682,"title":{"classes/GetSessionUseCase.html":{}},"body":{"injectables/ChatFacade.html":{},"classes/GetSessionUseCase.html":{}}}],["getsessionusecase(this.sessionsport",{"_index":2668,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["getstatus",{"_index":2897,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["getstatusclass",{"_index":2877,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["getstatustext",{"_index":2878,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["getter",{"_index":1125,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["getting",{"_index":4836,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":4570,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["gettranslation",{"_index":2018,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["gettranslation(lang",{"_index":2019,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["getyoutube_video",{"_index":3154,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ghost",{"_index":1042,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ghost:hover",{"_index":1048,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["gi",{"_index":2828,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["glassmorphism",{"_index":2443,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["global",{"_index":4381,"title":{},"body":{"components/ShellLayout.html":{}}}],["globally",{"_index":4413,"title":{},"body":{"components/ShellLayout.html":{}}}],["glow",{"_index":3195,"title":{},"body":{"components/HeaderComponent.html":{}}}],["gradient",{"_index":4475,"title":{},"body":{"components/ShellLayout.html":{}}}],["gradient(135deg",{"_index":254,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["gradient(45deg",{"_index":4160,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["gradient(90deg",{"_index":353,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["gradient(circle",{"_index":243,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["grid",{"_index":379,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["group",{"_index":367,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["group:focus",{"_index":706,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["groups",{"_index":366,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["guard",{"_index":2404,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["guardando",{"_index":1612,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["guardar",{"_index":107,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/ShellLayout.html":{}}}],["guards",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guestguard",{"_index":3118,"title":{},"body":{"injectables/GuestGuardService.html":{},"miscellaneous/variables.html":{}}}],["guestguardservice",{"_index":3112,"title":{"injectables/GuestGuardService.html":{}},"body":{"injectables/GuestGuardService.html":{}}}],["h",{"_index":2315,"title":{},"body":{"injectables/BackgroundService.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["h3",{"_index":4091,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["h3::before",{"_index":4092,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["h4",{"_index":4096,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["h4::before",{"_index":4098,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["hace",{"_index":3947,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["hacer",{"_index":3969,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["hacia",{"_index":3941,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["handle",{"_index":4409,"title":{},"body":{"components/ShellLayout.html":{}}}],["handlecomplete",{"_index":2496,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handlecomplete(ctx",{"_index":2522,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handled",{"_index":3307,"title":{},"body":{"injectables/LanguageService.html":{},"components/LoginPage.html":{},"miscellaneous/variables.html":{}}}],["handleerror",{"_index":2497,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handleerror(ctx",{"_index":2524,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handler",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handlers",{"_index":2750,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["handleruncompleted",{"_index":2498,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handleruncompleted(ctx",{"_index":2526,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handlerunresponse",{"_index":2499,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handlerunresponse(ctx",{"_index":2528,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handles",{"_index":3343,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["handlestreamdata",{"_index":2500,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["handlestreamdata(ctx",{"_index":2530,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["hard",{"_index":2403,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["hasbinary",{"_index":4250,"title":{},"body":{"injectables/SessionsService.html":{}}}],["hasfiles",{"_index":2418,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["hasscheduledscroll",{"_index":3919,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["hay",{"_index":1186,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/ScrollManagerService.html":{}}}],["header",{"_index":260,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["header'},{'name",{"_index":481,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["header.component.css",{"_index":3121,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":3122,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header::after",{"_index":4090,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["headercomponent",{"_index":480,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["headers",{"_index":2195,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["headers['authorization",{"_index":3840,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["heavy",{"_index":2938,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["height",{"_index":237,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["helpbuilding",{"_index":4862,"title":{},"body":{"index.html":{}}}],["helper",{"_index":3031,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["helpers",{"_index":2700,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{}}}],["helps",{"_index":4391,"title":{},"body":{"components/ShellLayout.html":{}}}],["here",{"_index":651,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["herramienta",{"_index":2814,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["heuristic",{"_index":2936,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{},"injectables/PerformanceService.html":{}}}],["hidden",{"_index":346,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["hide",{"_index":4204,"title":{},"body":{"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{}}}],["hidesidebar",{"_index":4174,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["high",{"_index":3655,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["hipotético",{"_index":3219,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["home",{"_index":483,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/CustomPreloadStrategy.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["homepage",{"_index":482,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["hora",{"_index":2776,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["hostlistener",{"_index":1683,"title":{},"body":{"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["hostlistener('document:click",{"_index":1647,"title":{},"body":{"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{}}}],["hostlistener('document:keydown.escape",{"_index":3143,"title":{},"body":{"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["hostlistener('window:resize",{"_index":1655,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["hostlisteners",{"_index":1642,"title":{},"body":{"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["host{display:block",{"_index":3350,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["hour",{"_index":2808,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["href",{"_index":1951,"title":{},"body":{"components/App.html":{}}}],["href/src",{"_index":2754,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["hsl(var",{"_index":246,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["html",{"_index":450,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["htmlcanvaselement",{"_index":3372,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["htmlelement",{"_index":3432,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["htmlinputelement",{"_index":191,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/FilesFacade.html":{},"injectables/RiskFacade.html":{}}}],["htmllinkelement",{"_index":1982,"title":{},"body":{"components/App.html":{}}}],["http",{"_index":1520,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["http://127.0.0.1:8080",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":4848,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1527,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":2053,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(_http",{"_index":2030,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/functions.html":{}}}],["https://github.com/stevesant26/hackiaton",{"_index":3163,"title":{},"body":{"components/HeaderComponent.html":{}}}],["https://hackiaton",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=dqw4w9wgxcq",{"_index":3166,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hue",{"_index":2485,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["i.sector",{"_index":619,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["ia",{"_index":1973,"title":{},"body":{"components/App.html":{},"injectables/AppInfoService.html":{}}}],["icon",{"_index":290,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["icono",{"_index":120,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["id",{"_index":741,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminMessageItem.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/MessageManagerService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["identity",{"_index":791,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["idle",{"_index":2904,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"miscellaneous/typealiases.html":{}}}],["ids",{"_index":1130,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["idx",{"_index":4288,"title":{},"body":{"injectables/SessionsService.html":{}}}],["iframe",{"_index":2744,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["ignore",{"_index":1708,"title":{},"body":{"components/AdminShellLayout.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/ShellLayout.html":{}}}],["ignored",{"_index":4233,"title":{},"body":{"injectables/SessionsService.html":{}}}],["image",{"_index":410,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/typealiases.html":{}}}],["image/x",{"_index":1989,"title":{},"body":{"components/App.html":{}}}],["imagedata",{"_index":2129,"title":{"interfaces/ImageData.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["images",{"_index":2140,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["img",{"_index":4161,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["immutable",{"_index":2701,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["implements",{"_index":136,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"components/LazyChartComponent.html":{},"interfaces/PaginatedApi-1.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{}}}],["implied",{"_index":1411,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["import",{"_index":64,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["import('chart.js",{"_index":3420,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["important",{"_index":2467,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["importar",{"_index":228,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["importprovidersfrom",{"_index":2024,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":144,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["improvements",{"_index":1030,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["imputation",{"_index":769,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["imágenes",{"_index":1168,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["inactive",{"_index":731,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["include",{"_index":3037,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["includes",{"_index":4855,"title":{},"body":{"index.html":{}}}],["includes('files",{"_index":2421,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["includes(message.event",{"_index":2818,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["including",{"_index":4891,"title":{},"body":{"index.html":{}}}],["incluir",{"_index":3695,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["incorporation_date",{"_index":799,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":3238,"title":{},"body":{"interfaces/KpisResponseDTO.html":{}}}],["indicador",{"_index":2888,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["indicator",{"_index":758,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["indicators",{"_index":1040,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["infinite",{"_index":295,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["info'},{'name",{"_index":455,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["info.css",{"_index":149,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.facade",{"_index":184,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.facade.ts",{"_index":8,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:10",{"_index":51,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:11",{"_index":49,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:13",{"_index":57,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:18",{"_index":59,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:19",{"_index":47,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:20",{"_index":61,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:21",{"_index":60,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:22",{"_index":62,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:23",{"_index":63,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:25",{"_index":30,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:35",{"_index":33,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:54",{"_index":35,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:71",{"_index":41,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.facade.ts:9",{"_index":45,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["info.html",{"_index":151,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.port",{"_index":3080,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{}}}],["info.port.ts",{"_index":1993,"title":{},"body":{"interfaces/AppInfoPort.html":{}}}],["info.port.ts:4",{"_index":1996,"title":{},"body":{"interfaces/AppInfoPort.html":{}}}],["info.port.ts:5",{"_index":1998,"title":{},"body":{"interfaces/AppInfoPort.html":{}}}],["info.service.ts",{"_index":2002,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["info.service.ts:11",{"_index":2005,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["info.service.ts:15",{"_index":2006,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["info.service.ts:30",{"_index":2007,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["info.ts",{"_index":135,"title":{},"body":{"components/AdminAppInfoPage.html":{},"interfaces/AppInfo.html":{}}}],["info.ts:16",{"_index":168,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:17",{"_index":170,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:18",{"_index":172,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:19",{"_index":166,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:20",{"_index":176,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:21",{"_index":174,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:22",{"_index":178,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:23",{"_index":180,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:25",{"_index":156,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:29",{"_index":164,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:33",{"_index":160,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.ts:41",{"_index":163,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["info.usecase.ts",{"_index":3076,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["info.usecase.ts:10",{"_index":3077,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{}}}],["info.usecase.ts:8",{"_index":3078,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["info.usecase.ts:9",{"_index":4773,"title":{},"body":{"injectables/UpdateAppInfoUseCase.html":{}}}],["info/results",{"_index":2858,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["info?.site_name",{"_index":3188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inform",{"_index":3867,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["información",{"_index":200,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["information",{"_index":4890,"title":{},"body":{"index.html":{}}}],["infrastructure/services/admin",{"_index":1762,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["infrastructure/services/background.service",{"_index":3156,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["infrastructure/services/chat",{"_index":1409,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["infrastructure/services/language.service",{"_index":1690,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{}}}],["infrastructure/services/sessions",{"_index":4375,"title":{},"body":{"components/ShellLayout.html":{}}}],["infrastructure/services/theme.service",{"_index":1692,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{}}}],["infrastructure/services/token",{"_index":1686,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/LoginFacade.html":{}}}],["inherit",{"_index":2453,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["inicia",{"_index":4755,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["iniciado",{"_index":2812,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["iniciando",{"_index":4766,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["init",{"_index":2058,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/BackgroundService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/PerformanceService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["initapp",{"_index":3280,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initial",{"_index":3397,"title":{},"body":{"components/LazyChartComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["initialize",{"_index":3161,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["initializer",{"_index":2056,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["initiated",{"_index":3904,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["inject",{"_index":65,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["inject(activatedroute",{"_index":876,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["inject(admin_messages_port",{"_index":1204,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{}}}],["inject(admin_users_port",{"_index":1287,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["inject(adminappinfofacade",{"_index":167,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["inject(admincompaniesfacade",{"_index":611,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["inject(adminlistmessagesusecase",{"_index":1267,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["inject(adminlistsessionsusecase",{"_index":1269,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["inject(adminmessagesfacade",{"_index":1111,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["inject(adminstatsfacade",{"_index":880,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["inject(adminstatsservice",{"_index":1751,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["inject(analyzesessioncompaniesusecase",{"_index":4017,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["inject(app_info_port",{"_index":44,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{}}}],["inject(auth_port",{"_index":3105,"title":{},"body":{"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["inject(authguardservice).canactivate",{"_index":2158,"title":{},"body":{"injectables/AuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["inject(backgroundservice",{"_index":3148,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["inject(changedetectorref",{"_index":4358,"title":{},"body":{"components/ShellLayout.html":{}}}],["inject(chat_stream_port",{"_index":2663,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["inject(chatfacade",{"_index":4360,"title":{},"body":{"components/ShellLayout.html":{}}}],["inject(chatutilsservice",{"_index":1370,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/MessageManagerService.html":{}}}],["inject(companies_port",{"_index":3087,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["inject(createuserusecase",{"_index":1830,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["inject(deleteuserusecase",{"_index":1834,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["inject(files_port",{"_index":50,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/UploadFileUseCase.html":{}}}],["inject(filesfacade",{"_index":1101,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["inject(formbuilder",{"_index":48,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["inject(getactiveriskweightsusecase",{"_index":1578,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["inject(getappinfousecase",{"_index":1952,"title":{},"body":{"components/App.html":{}}}],["inject(getprofileusecase",{"_index":1669,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["inject(guestguardservice).canactivate",{"_index":3119,"title":{},"body":{"injectables/GuestGuardService.html":{},"miscellaneous/variables.html":{}}}],["inject(httpclient",{"_index":1525,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["inject(kpis_port",{"_index":3094,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["inject(languageservice",{"_index":1671,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["inject(listcompaniesusecase",{"_index":539,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["inject(listfilesusecase",{"_index":2979,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["inject(listusersusecase",{"_index":1840,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["inject(loginfacade",{"_index":3530,"title":{},"body":{"components/LoginPage.html":{}}}],["inject(loginusecase",{"_index":3506,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["inject(performanceservice",{"_index":2075,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":1956,"title":{},"body":{"components/App.html":{},"components/LazyChartComponent.html":{}}}],["inject(registerfacade",{"_index":3709,"title":{},"body":{"components/RegisterPage.html":{}}}],["inject(registerusecase",{"_index":3673,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["inject(risk_weights_port",{"_index":3070,"title":{},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["inject(roleguardservice).canactivate(route",{"_index":3811,"title":{},"body":{"injectables/RoleGuardService.html":{},"miscellaneous/variables.html":{}}}],["inject(router",{"_index":878,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/RoleGuardService.html":{},"components/ShellLayout.html":{}}}],["inject(sessions_port",{"_index":1932,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{}}}],["inject(sessionseventsservice",{"_index":4371,"title":{},"body":{"components/ShellLayout.html":{}}}],["inject(themeservice",{"_index":1679,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{}}}],["inject(title",{"_index":1959,"title":{},"body":{"components/App.html":{}}}],["inject(tokenstorageservice",{"_index":1681,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/LoginFacade.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["inject(tokenstorageservice).gettoken",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(translateservice",{"_index":3300,"title":{},"body":{"injectables/LanguageService.html":{}}}],["inject(updateuserusecase",{"_index":1853,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["inject(uploadfileusecase",{"_index":2678,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{}}}],["inject(upsertriskweightsusecase",{"_index":1582,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"overview.html":{}}}],["injectiontoken",{"_index":4928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('app_info_port",{"_index":4929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('auth_port",{"_index":4930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('files_port",{"_index":4931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('kpis_port",{"_index":4932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('sessions_port",{"_index":4933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1046,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ChatUtilsService.html":{}}}],["inmediatamente",{"_index":3948,"title":{},"body":{"injectables/ScrollManagerService.html":{},"injectables/TypewriterService.html":{}}}],["inner",{"_index":1445,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["innerheight",{"_index":2314,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["innerwidth",{"_index":2313,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["input",{"_index":189,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatUtilsService.html":{},"injectables/FilesFacade.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["input.files?.[0",{"_index":192,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["input.files?.length",{"_index":2991,"title":{},"body":{"injectables/FilesFacade.html":{},"injectables/RiskFacade.html":{}}}],["input.files[0",{"_index":3778,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["input.value",{"_index":194,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/FilesFacade.html":{},"injectables/RiskFacade.html":{}}}],["input/output",{"_index":3175,"title":{},"body":{"components/HeaderComponent.html":{}}}],["input::placeholder",{"_index":377,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["input:focus",{"_index":372,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["inputs",{"_index":2351,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"miscellaneous/functions.html":{}}}],["inputs/outputs",{"_index":3157,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inputtext",{"_index":3758,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["ins",{"_index":1019,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["ins.credit_recommendation",{"_index":991,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["ins.data_quality_flags",{"_index":1016,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.data_quality_flags?.length",{"_index":1012,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.early_alerts",{"_index":1011,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.early_alerts?.length",{"_index":1008,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.key_factors",{"_index":995,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.key_factors?.length",{"_index":992,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.narrative",{"_index":988,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.opportunity_zones",{"_index":1007,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.opportunity_zones?.length",{"_index":1004,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.reputation",{"_index":990,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.risk_summary",{"_index":989,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["ins.suggested_actions",{"_index":1003,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.suggested_actions?.length",{"_index":1000,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.warnings",{"_index":999,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ins.warnings?.length",{"_index":996,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["inset",{"_index":2446,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["inside",{"_index":4142,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["insights",{"_index":1923,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["instanceof",{"_index":1713,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"components/ShellLayout.html":{}}}],["instead",{"_index":3043,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["instructions",{"_index":1889,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["interface",{"_index":762,"title":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CompaniesPort.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"interfaces/KpisSummaryDisplay.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/Tool.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/Tool.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["interfaces",{"_index":764,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CompaniesPort.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"interfaces/KpisSummaryDisplay.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/Tool.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"overview.html":{}}}],["internal",{"_index":4311,"title":{},"body":{"injectables/SessionsService.html":{}}}],["intersection",{"_index":1428,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["intersectionobserver",{"_index":1376,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["intersectionobserver((entries",{"_index":3402,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["interval",{"_index":4763,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["interval(speed).subscribe",{"_index":4767,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["interés",{"_index":967,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["invalid",{"_index":2408,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["invalidstateerror",{"_index":2039,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["io",{"_index":1336,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["iosessions",{"_index":1337,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["is_bic",{"_index":815,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["is_foreign_domiciled",{"_index":820,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["is_public_interest",{"_index":814,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["is_state_supplier",{"_index":809,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["isactive",{"_index":4744,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["isadmin",{"_index":3128,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isauthenticated",{"_index":1632,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/TokenStorageService.html":{}}}],["isbotmessage",{"_index":2729,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["isbotmessage(message",{"_index":2787,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["isbrowser",{"_index":3356,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["iscomplete",{"_index":2334,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["isdark",{"_index":4505,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdesktop",{"_index":4334,"title":{},"body":{"components/ShellLayout.html":{}}}],["isempty",{"_index":4001,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["isempty(obj",{"_index":4008,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["iserror",{"_index":3822,"title":{},"body":{"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["iserrormessage",{"_index":2730,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["iserrormessage(message",{"_index":2791,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["ish",{"_index":3817,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["isimage",{"_index":4121,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["isimage(f",{"_index":4125,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["isios",{"_index":3664,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["islite",{"_index":2940,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["islowend",{"_index":3663,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["ismobile",{"_index":1633,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["isnearbottom",{"_index":3920,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["isnearbottom(container",{"_index":3933,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["iso",{"_index":800,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{},"interfaces/TimeSeriesPoint.html":{},"miscellaneous/functions.html":{}}}],["isopen",{"_index":3129,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isopenchange",{"_index":3130,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ispaused",{"_index":4592,"title":{},"body":{"injectables/TtsService.html":{}}}],["ispdf",{"_index":4122,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["ispdf(f",{"_index":4127,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["isplatformbrowser",{"_index":1962,"title":{},"body":{"components/App.html":{},"components/LazyChartComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1975,"title":{},"body":{"components/App.html":{},"components/LazyChartComponent.html":{}}}],["issending",{"_index":2354,"title":{},"body":{"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{}}}],["issidebaropen",{"_index":4326,"title":{},"body":{"components/ShellLayout.html":{}}}],["issmallscreen",{"_index":3649,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["isspeaking",{"_index":4593,"title":{},"body":{"injectables/TtsService.html":{}}}],["isstreaming",{"_index":2335,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{}}}],["issues",{"_index":4455,"title":{},"body":{"components/ShellLayout.html":{}}}],["issupported",{"_index":3281,"title":{},"body":{"injectables/LanguageService.html":{}}}],["issupported(l",{"_index":3288,"title":{},"body":{"injectables/LanguageService.html":{}}}],["issystemmessage",{"_index":2731,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["issystemmessage(message",{"_index":2793,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["isuploadingfiles",{"_index":2355,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["isusermessage",{"_index":2732,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["isusermessage(message",{"_index":2795,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["it.sector",{"_index":632,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["italic",{"_index":751,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["item",{"_index":649,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["item::before",{"_index":4156,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["item:hover",{"_index":1029,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["item:hover::before",{"_index":4157,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["item?.tax_id",{"_index":4032,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["items",{"_index":283,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"components/ChatComposerComponent.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["items().length",{"_index":683,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{}}}],["items?.length",{"_index":3632,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["javascript",{"_index":2752,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["join(import.meta.dirname",{"_index":4936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":1017,"title":{},"body":{"components/AdminCompanyPage.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["json.parse(databuffer",{"_index":3895,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["json.stringify",{"_index":3841,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["judicial",{"_index":973,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["judicial_disposition",{"_index":818,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["justify",{"_index":284,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["k",{"_index":977,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/BackgroundService.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["karma",{"_index":4873,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1722,"title":{},"body":{"components/AdminShellLayout.html":{},"components/SessionFilesModalComponent.html":{}}}],["kept",{"_index":3028,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["key",{"_index":1601,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/ChatUtilsService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["key_factors",{"_index":1916,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["key_role",{"_index":4582,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":4015,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["keydown",{"_index":2362,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["keyframes",{"_index":296,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["keys",{"_index":869,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["keys.length",{"_index":872,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["kick",{"_index":4709,"title":{},"body":{"injectables/TtsService.html":{}}}],["kind",{"_index":3373,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["knowledge",{"_index":1890,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["kpis",{"_index":3092,"title":{"interfaces/Kpis.html":{}},"body":{"injectables/GetKpisUseCase.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"miscellaneous/variables.html":{}}}],["kpis.approval_delta",{"_index":3255,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpis.avg_time_minutes",{"_index":3257,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpis.objectivity_delta",{"_index":3256,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpis.speed_multiplier",{"_index":3254,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpis.usecase.ts",{"_index":3091,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["kpis.usecase.ts:10",{"_index":3093,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["kpis.usecase.ts:8",{"_index":3095,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["kpis_port",{"_index":2088,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/GetKpisUseCase.html":{},"miscellaneous/variables.html":{}}}],["kpisapiservice",{"_index":2094,"title":{"injectables/KpisApiService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/KpisApiService.html":{},"miscellaneous/variables.html":{}}}],["kpismockservice",{"_index":2093,"title":{"injectables/KpisMockService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/KpisMockService.html":{},"miscellaneous/variables.html":{}}}],["kpisport",{"_index":3097,"title":{"interfaces/KpisPort.html":{}},"body":{"injectables/GetKpisUseCase.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{}}}],["kpisresponsedto",{"_index":3232,"title":{"interfaces/KpisResponseDTO.html":{}},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpisservice",{"_index":3240,"title":{"injectables/KpisService.html":{}},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["kpissummarydisplay",{"_index":3209,"title":{"interfaces/KpisSummaryDisplay.html":{}},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["l",{"_index":3290,"title":{},"body":{"injectables/LanguageService.html":{}}}],["la",{"_index":199,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{}}}],["label",{"_index":368,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{}}}],["labels",{"_index":898,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ChatUtilsService.html":{}}}],["labels.map((k",{"_index":901,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["labels[event",{"_index":2816,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["lang",{"_index":1623,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"injectables/LanguageService.html":{},"injectables/TtsService.html":{}}}],["langlower",{"_index":4677,"title":{},"body":{"injectables/TtsService.html":{}}}],["langservice",{"_index":2059,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["langservice.initapp",{"_index":2060,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":2057,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["languageservice",{"_index":1689,"title":{"injectables/LanguageService.html":{}},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"injectables/LanguageService.html":{}}}],["las",{"_index":1484,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ConnectionStatusService.html":{}}}],["last",{"_index":1470,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["last.focus",{"_index":4053,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["last_corp_update_at",{"_index":819,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["lasterror",{"_index":4292,"title":{},"body":{"injectables/SessionsService.html":{}}}],["lastfocused",{"_index":4327,"title":{},"body":{"components/ShellLayout.html":{}}}],["lastlang",{"_index":3278,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lastsessionid",{"_index":3826,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["laststructurederror",{"_index":4286,"title":{},"body":{"injectables/SessionsService.html":{}}}],["lateral",{"_index":3170,"title":{},"body":{"components/HeaderComponent.html":{}}}],["layer",{"_index":3514,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["layout",{"_index":1031,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["lazily",{"_index":3334,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["lazy",{"_index":486,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["lazychartcomponent",{"_index":485,"title":{"components/LazyChartComponent.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["lean",{"_index":4554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["left",{"_index":350,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["legacy",{"_index":3026,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["legado",{"_index":4283,"title":{},"body":{"injectables/SessionsService.html":{}}}],["legal",{"_index":926,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["legal_status",{"_index":796,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["legend",{"_index":449,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["legible",{"_index":2777,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["length",{"_index":4729,"title":{},"body":{"injectables/TtsService.html":{}}}],["level",{"_index":4411,"title":{},"body":{"components/ShellLayout.html":{}}}],["leverage",{"_index":1121,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["light",{"_index":1657,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/ThemeService.html":{},"miscellaneous/typealiases.html":{}}}],["lightbulb",{"_index":4066,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["lightweight",{"_index":3340,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/SessionsEventsService.html":{}}}],["limit",{"_index":509,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["limpia",{"_index":2883,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"injectables/MessageManagerService.html":{},"injectables/ThemeService.html":{}}}],["limpiados",{"_index":3615,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["line",{"_index":1067,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/LazyChartComponent.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["line.slice(5).trimstart",{"_index":3901,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["line.slice(6).trim",{"_index":3899,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["line.startswith('data",{"_index":3900,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["line.startswith('event",{"_index":3898,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["linear",{"_index":253,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["lineendidx",{"_index":3887,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["lineendidx).trimend",{"_index":3890,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["link",{"_index":1050,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ChatUtilsService.html":{}}}],["link:hover",{"_index":1051,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["links",{"_index":1045,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ShellLayout.html":{}}}],["list",{"_index":1028,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{},"index.html":{}}}],["list'},{'name",{"_index":477,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["list(params",{"_index":1792,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["list.find((s",{"_index":1391,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["list.length",{"_index":4737,"title":{},"body":{"injectables/TtsService.html":{}}}],["lista",{"_index":682,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/MessageManagerService.html":{}}}],["listbysession",{"_index":2998,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{}}}],["listbysession(sessionid",{"_index":3003,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["listcompanies",{"_index":510,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["listcompaniesusecase",{"_index":553,"title":{"injectables/ListCompaniesUseCase.html":{}},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/ListCompaniesUseCase.html":{}}}],["listed",{"_index":1129,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["listfilesresponse",{"_index":3013,"title":{"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{}},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["listfilesuc",{"_index":2969,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["listfilesusecase",{"_index":2986,"title":{"injectables/ListFilesUseCase.html":{}},"body":{"injectables/FilesFacade.html":{},"injectables/ListFilesUseCase.html":{}}}],["listmessages",{"_index":1228,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/PaginatedApi-1.html":{}}}],["listmessages(sessionid",{"_index":1514,"title":{},"body":{"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{}}}],["listmessagesuc",{"_index":1230,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["listo",{"_index":2910,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["listsessionfiles",{"_index":4120,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["listsessionfilesusecase",{"_index":3489,"title":{"injectables/ListSessionFilesUseCase.html":{}},"body":{"injectables/ListSessionFilesUseCase.html":{},"components/SessionFilesModalComponent.html":{}}}],["listsessions",{"_index":1513,"title":{},"body":{"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/ChatFacade.html":{}}}],["listsessions(params",{"_index":1227,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"injectables/ChatFacade.html":{},"interfaces/PaginatedApi-1.html":{}}}],["listsessionsuc",{"_index":1231,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"injectables/ChatFacade.html":{}}}],["listsessionsusecase",{"_index":2681,"title":{"classes/ListSessionsUseCase.html":{}},"body":{"injectables/ChatFacade.html":{},"classes/ListSessionsUseCase.html":{}}}],["listsessionsusecase(this.sessionsport",{"_index":2671,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["listuc",{"_index":1825,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["listusersusecase",{"_index":1856,"title":{"injectables/ListUsersUseCase.html":{}},"body":{"injectables/AdminUsersFacade.html":{},"injectables/ListUsersUseCase.html":{}}}],["lite",{"_index":2071,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/PerformanceService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":779,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/Reference.html":{},"injectables/RegisterFacade.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/Tool.html":{},"miscellaneous/typealiases.html":{}}}],["llm",{"_index":2738,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["llm_insights",{"_index":770,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["load",{"_index":25,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"injectables/LanguageService.html":{},"components/ShellLayout.html":{}}}],["load(days",{"_index":1746,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["loadcompany",{"_index":1745,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["loadcompany(taxid",{"_index":1749,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["loaded",{"_index":18,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["loader",{"_index":2051,"title":{},"body":{"classes/AppTranslateLoader.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadfiles",{"_index":4123,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["loading",{"_index":434,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminStatsFacade.html":{},"components/ChatComposerComponent.html":{},"injectables/FilesFacade.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["loading::before",{"_index":4094,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["loadingpromise",{"_index":3241,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["loadprofileifauthenticated",{"_index":1634,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["loads",{"_index":3335,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["loadsessions",{"_index":1240,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["local",{"_index":3729,"title":{},"body":{"components/RegisterPage.html":{},"index.html":{}}}],["localstorage",{"_index":1700,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/LanguageService.html":{}}}],["localstorage.getitem(k",{"_index":2323,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["localstorage.getitem(key",{"_index":3329,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{}}}],["localstorage.getitem(key_role",{"_index":4585,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":4586,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["localstorage.removeitem(key_role",{"_index":4587,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["localstorage.setitem(k",{"_index":2324,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["localstorage.setitem(key",{"_index":3330,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{}}}],["localstorage.setitem(key_role",{"_index":4584,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["location",{"_index":2511,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["login",{"_index":2161,"title":{},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":489,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["login(payload",{"_index":2164,"title":{},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/LoginFacade.html":{}}}],["login.create_account",{"_index":3560,"title":{},"body":{"components/LoginPage.html":{}}}],["login.email",{"_index":3549,"title":{},"body":{"components/LoginPage.html":{}}}],["login.email_invalid",{"_index":3552,"title":{},"body":{"components/LoginPage.html":{}}}],["login.forgot",{"_index":3554,"title":{},"body":{"components/LoginPage.html":{}}}],["login.html",{"_index":3522,"title":{},"body":{"components/LoginPage.html":{}}}],["login.min_6_chars",{"_index":3557,"title":{},"body":{"components/LoginPage.html":{}}}],["login.no_account",{"_index":3559,"title":{},"body":{"components/LoginPage.html":{}}}],["login.password",{"_index":3553,"title":{},"body":{"components/LoginPage.html":{}}}],["login.processing",{"_index":224,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/LoginPage.html":{}}}],["login.submit",{"_index":3558,"title":{},"body":{"components/LoginPage.html":{}}}],["login.subtitle",{"_index":3548,"title":{},"body":{"components/LoginPage.html":{}}}],["login.title",{"_index":3547,"title":{},"body":{"components/LoginPage.html":{}}}],["loginfacade",{"_index":3500,"title":{"injectables/LoginFacade.html":{}},"body":{"injectables/LoginFacade.html":{},"components/LoginPage.html":{}}}],["loginpage",{"_index":488,"title":{"components/LoginPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["loginrequest",{"_index":2165,"title":{"interfaces/LoginRequest.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/LoginFacade.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["loginsuccessresponse",{"_index":2171,"title":{"interfaces/LoginSuccessResponse.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/LoginFacade.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["loginuc",{"_index":3502,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["loginusecase",{"_index":3509,"title":{"injectables/LoginUseCase.html":{}},"body":{"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{}}}],["logo",{"_index":123,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{}}}],["logout",{"_index":1635,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["logout(event",{"_index":1651,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["loop",{"_index":3876,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["los",{"_index":1159,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/MessageManagerService.html":{},"components/RegisterPage.html":{},"injectables/SessionsService.html":{}}}],["low",{"_index":3653,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["lowercase/i.test(errormessage",{"_index":3692,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["lt;think&gt",{"_index":1508,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["lógica",{"_index":3168,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m",{"_index":858,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatFacade.html":{}}}],["m.created_at",{"_index":1501,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["m.id",{"_index":1499,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["m.role",{"_index":1500,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["m[1",{"_index":1446,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["macrotask",{"_index":4704,"title":{},"body":{"injectables/TtsService.html":{}}}],["main",{"_index":329,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminMessagesPage.html":{},"components/ShellLayout.html":{}}}],["main.flex",{"_index":4461,"title":{},"body":{"components/ShellLayout.html":{}}}],["main.replace(re",{"_index":1448,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["maintain",{"_index":4468,"title":{},"body":{"components/ShellLayout.html":{}}}],["maintainaspectratio",{"_index":3417,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["manager.service.ts",{"_index":3572,"title":{},"body":{"injectables/MessageManagerService.html":{},"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:12",{"_index":3939,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:14",{"_index":3580,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:19",{"_index":3929,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:22",{"_index":3584,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:29",{"_index":3946,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:31",{"_index":3582,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:43",{"_index":3951,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:44",{"_index":3577,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:56",{"_index":3592,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:63",{"_index":3959,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:69",{"_index":3588,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:7",{"_index":3961,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:74",{"_index":3934,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:81",{"_index":3586,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:88",{"_index":3931,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:89",{"_index":3595,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:9",{"_index":3600,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manager.service.ts:95",{"_index":3925,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["manager.service.ts:99",{"_index":3598,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["manejar",{"_index":4395,"title":{},"body":{"components/ShellLayout.html":{}}}],["map",{"_index":1285,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/BackgroundService.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["map((data",{"_index":4235,"title":{},"body":{"injectables/SessionsService.html":{}}}],["map((f",{"_index":1133,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["map((resp",{"_index":3979,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["map((s",{"_index":1304,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"injectables/SessionsService.html":{}}}],["map(mapitem",{"_index":2871,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["map.set(s.session_id",{"_index":1323,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["map['es",{"_index":2028,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["mapitem",{"_index":2861,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["mapmessagestochats",{"_index":4223,"title":{},"body":{"injectables/SessionsService.html":{}}}],["mapmessagestochats(items",{"_index":4229,"title":{},"body":{"injectables/SessionsService.html":{}}}],["mapped",{"_index":2846,"title":{},"body":{"interfaces/CompaniesPort.html":{},"interfaces/CompanyItem.html":{}}}],["mapping",{"_index":3030,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["maptopaginated",{"_index":3021,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["maptopaginated(data",{"_index":3058,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["margin",{"_index":262,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["markdown",{"_index":1406,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ScrollManagerService.html":{},"dependencies.html":{}}}],["markdown/innerhtml",{"_index":2740,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["markdownmodule",{"_index":1331,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["marked",{"_index":4798,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":2479,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["matching",{"_index":126,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math",{"_index":2747,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["math.floor((data.offset",{"_index":3643,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["math.floor(ms",{"_index":4321,"title":{},"body":{"injectables/SessionsService.html":{}}}],["math.floor(params.offset",{"_index":3055,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["math.floor(rect?.height",{"_index":3439,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["math.floor(rect?.width",{"_index":3436,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["math.max(0",{"_index":1144,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/TtsService.html":{}}}],["math.max(1",{"_index":3435,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["math.min(1",{"_index":4725,"title":{},"body":{"injectables/TtsService.html":{}}}],["math.min(this.page",{"_index":1836,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["math.min(w",{"_index":3467,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["math.pi",{"_index":3474,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["math.random",{"_index":1458,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["math.random().tostring(36).slice(2",{"_index":2703,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["math.random().tostring(36).substring(2",{"_index":2803,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["maticonmodule",{"_index":1332,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["max",{"_index":268,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["max).tofixed(2",{"_index":2322,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["mayúscula",{"_index":3691,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["md\\:hidden",{"_index":4447,"title":{},"body":{"components/ShellLayout.html":{}}}],["md\\:relative",{"_index":4451,"title":{},"body":{"components/ShellLayout.html":{}}}],["md\\:w",{"_index":4448,"title":{},"body":{"components/ShellLayout.html":{}}}],["media",{"_index":444,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["medialistener",{"_index":4502,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mediaquerylist",{"_index":4528,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mediaquerylistevent",{"_index":4534,"title":{},"body":{"injectables/ThemeService.html":{}}}],["medium",{"_index":1075,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["memoria",{"_index":2813,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["memory",{"_index":1891,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["men",{"_index":3169,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menos",{"_index":3690,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["mensaje",{"_index":2767,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"classes/SendMessageUseCase.html":{},"injectables/SessionsService.html":{},"injectables/TypewriterService.html":{}}}],["mensajes",{"_index":1316,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["menu",{"_index":1695,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["menu'},{'name",{"_index":494,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["menu/profile",{"_index":1694,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":428,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminMessagesPage.html":{},"interfaces/AudioData.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"injectables/MessageManagerService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TypewriterService.html":{},"interfaces/VideoData.html":{}}}],["message.content",{"_index":1481,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/MessageManagerService.html":{},"injectables/TypewriterService.html":{}}}],["message.content?.slice(0",{"_index":1455,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["message.displayedcontent",{"_index":3611,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["message.displayedcontent.length",{"_index":4770,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["message.event",{"_index":2817,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["message.id",{"_index":1454,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["message.iscomplete",{"_index":3612,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["message.isstreaming",{"_index":3613,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["message.usecase",{"_index":2686,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["message.usecase.ts",{"_index":3984,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["message.usecase.ts:23",{"_index":3987,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["message.usecase.ts:5",{"_index":3986,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["message.usecase.ts:8",{"_index":3988,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["message?.isstreaming",{"_index":3610,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["messageid",{"_index":4615,"title":{},"body":{"injectables/TtsService.html":{}}}],["messagemanager",{"_index":2514,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["messagemanagerservice",{"_index":2515,"title":{"injectables/MessageManagerService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/MessageManagerService.html":{}}}],["messages",{"_index":476,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["messages'},{'name",{"_index":465,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["messages()?.length",{"_index":1511,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["messages.facade",{"_index":1116,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["messages.facade.ts",{"_index":1229,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:106",{"_index":1255,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:111",{"_index":1254,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:137",{"_index":1258,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:142",{"_index":1249,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:147",{"_index":1264,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:157",{"_index":1262,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:16",{"_index":1270,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:163",{"_index":1253,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:17",{"_index":1268,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:18",{"_index":1288,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:20",{"_index":1280,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:21",{"_index":1279,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:22",{"_index":1272,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:23",{"_index":1271,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:24",{"_index":1265,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:26",{"_index":1277,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:27",{"_index":1266,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:28",{"_index":1284,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:29",{"_index":1278,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:30",{"_index":1281,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:31",{"_index":1283,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:32",{"_index":1275,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:33",{"_index":1274,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:34",{"_index":1276,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:37",{"_index":1286,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:39",{"_index":1260,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:54",{"_index":1251,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:62",{"_index":1252,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.facade.ts:87",{"_index":1257,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["messages.filter((m",{"_index":3618,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["messages.find((msg",{"_index":3616,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["messages.html",{"_index":1333,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["messages.length",{"_index":3614,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["messages.port.ts",{"_index":1220,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{}}}],["messages.port.ts:18",{"_index":1516,"title":{},"body":{"interfaces/AdminMessagesPort.html":{}}}],["messages.port.ts:25",{"_index":1515,"title":{},"body":{"interfaces/AdminMessagesPort.html":{}}}],["messages.push(message",{"_index":3601,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["messages.service.ts",{"_index":1519,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{}}}],["messages.service.ts:25",{"_index":1526,"title":{},"body":{"injectables/AdminMessagesService.html":{}}}],["messages.service.ts:26",{"_index":1524,"title":{},"body":{"injectables/AdminMessagesService.html":{}}}],["messages.service.ts:28",{"_index":1522,"title":{},"body":{"injectables/AdminMessagesService.html":{}}}],["messages.service.ts:69",{"_index":1521,"title":{},"body":{"injectables/AdminMessagesService.html":{}}}],["messages.usecase.ts",{"_index":1196,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{}}}],["messages.usecase.ts:8",{"_index":1205,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{}}}],["messages.usecase.ts:9",{"_index":1201,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{}}}],["messages/list",{"_index":1195,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{}}}],["meta",{"_index":113,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"components/SessionFilesModalComponent.html":{}}}],["meta.url",{"_index":117,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["meta_data",{"_index":2121,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["metadata",{"_index":138,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["method",{"_index":3846,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["methods",{"_index":23,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["metrickeys",{"_index":838,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["metrics",{"_index":771,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["metrics/kpis",{"_index":3220,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["metricschartref",{"_index":839,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["metricseffect",{"_index":840,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["middle",{"_index":738,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["milliseconds",{"_index":4833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mime_type",{"_index":2100,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["min",{"_index":236,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["min(920px",{"_index":4154,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["min(980px",{"_index":4080,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["minimal",{"_index":790,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/BackgroundService.html":{},"interfaces/TimeSeriesPoint.html":{},"miscellaneous/typealiases.html":{}}}],["minmax(0",{"_index":1034,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["minmax(260px",{"_index":4155,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["minmax(360px",{"_index":4099,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["minmax(400px",{"_index":383,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["minute",{"_index":2810,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["minúscula",{"_index":3693,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["mirrors",{"_index":1696,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["miscellaneous",{"_index":4806,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":822,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["missing_data",{"_index":772,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["mm",{"_index":802,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["mobile",{"_index":1702,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["mobile/low",{"_index":2073,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":3203,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{},"miscellaneous/variables.html":{}}}],["mock.service.ts",{"_index":3223,"title":{},"body":{"injectables/KpisMockService.html":{}}}],["mock.service.ts:7",{"_index":3224,"title":{},"body":{"injectables/KpisMockService.html":{}}}],["mock/api",{"_index":2091,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["mockkpis",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mod",{"_index":3419,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["mod.chart",{"_index":3421,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["mod.default",{"_index":3422,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["mod.registerables",{"_index":3424,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["modal",{"_index":3994,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["modal'},{'name",{"_index":500,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["modal.component",{"_index":1414,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["modal.component.css",{"_index":3995,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.html",{"_index":3996,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts",{"_index":3993,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:29",{"_index":4025,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:30",{"_index":4005,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4006,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:32",{"_index":4134,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:33",{"_index":4023,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:34",{"_index":4021,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:35",{"_index":4022,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:37",{"_index":4018,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:39",{"_index":4012,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:45",{"_index":4129,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:54",{"_index":4126,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:55",{"_index":4026,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:56",{"_index":4009,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:57",{"_index":4128,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:60",{"_index":4133,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:63",{"_index":4013,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:66",{"_index":4020,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:67",{"_index":4011,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:68",{"_index":4131,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:72",{"_index":4016,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:90",{"_index":4130,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal.component.ts:95",{"_index":4007,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["modal.component.ts:97",{"_index":4124,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["modal::before",{"_index":4089,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["modalbackdropin",{"_index":4480,"title":{},"body":{"components/ShellLayout.html":{}}}],["modales",{"_index":4398,"title":{},"body":{"components/ShellLayout.html":{}}}],["modalroot",{"_index":3999,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["modalslideup",{"_index":4485,"title":{},"body":{"components/ShellLayout.html":{}}}],["mode",{"_index":2950,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{},"injectables/PerformanceService.html":{},"injectables/ThemeService.html":{}}}],["model",{"_index":1892,"title":{"interfaces/Model.html":{}},"body":{"interfaces/AgentModel.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/Tool.html":{},"injectables/TypewriterService.html":{},"interfaces/VideoData.html":{}}}],["model.ts",{"_index":1886,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":3231,"title":{},"body":{"interfaces/KpisPort.html":{}}}],["models.ts",{"_index":2097,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["models/app",{"_index":1999,"title":{},"body":{"interfaces/AppInfoPort.html":{},"injectables/GetAppInfoUseCase.html":{}}}],["models/auth",{"_index":2173,"title":{},"body":{"interfaces/AuthPort.html":{},"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["models/kpi",{"_index":3096,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["modern",{"_index":370,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["moderno",{"_index":234,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["modify",{"_index":4852,"title":{},"body":{"index.html":{}}}],["modules",{"_index":4894,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mono",{"_index":1064,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["monospace",{"_index":747,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["more",{"_index":4889,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":1172,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["motion",{"_index":4118,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["mouseevent",{"_index":3146,"title":{},"body":{"components/HeaderComponent.html":{}}}],["move",{"_index":4143,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["ms",{"_index":4319,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/TypewriterService.html":{},"miscellaneous/functions.html":{}}}],["msg",{"_index":1457,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["msg.content",{"_index":2576,"title":{},"body":{"injectables/ChatEventsService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["msg.extra_data",{"_index":2578,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["msg.extra_data?.reasoning_steps",{"_index":2583,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["msg.extra_data?.references",{"_index":2580,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["msg.id",{"_index":3617,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["msg.images",{"_index":2585,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["msg.videos",{"_index":2588,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["msglimit",{"_index":1232,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["msgpage",{"_index":1233,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["msgtotal",{"_index":1234,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["muted",{"_index":255,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["mv",{"_index":965,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["mínimo",{"_index":3698,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["n/d",{"_index":4065,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["name",{"_index":37,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"injectables/KpisApiService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/VideoData.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":4858,"title":{},"body":{"index.html":{}}}],["narrative",{"_index":1912,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["naturally",{"_index":3878,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["nav",{"_index":757,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["navigate",{"_index":4847,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":1636,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["navigation",{"_index":1026,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ShellLayout.html":{}}}],["navigationend",{"_index":1684,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["navigator",{"_index":665,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/LanguageService.html":{},"injectables/PerformanceService.html":{}}}],["navigator.clipboard.writetext(taxid",{"_index":667,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["navigator.clipboard?.writetext",{"_index":666,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["navigator.clipboard?.writetext(text",{"_index":894,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["navigator.language.split",{"_index":3328,"title":{},"body":{"injectables/LanguageService.html":{}}}],["navigator?.language",{"_index":3327,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needed",{"_index":650,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["needs",{"_index":4887,"title":{},"body":{"index.html":{}}}],["neon",{"_index":2205,"title":{},"body":{"injectables/BackgroundService.html":{},"components/HeaderComponent.html":{}}}],["nested",{"_index":3562,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["neutralize",{"_index":2835,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["neutralizes",{"_index":2751,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["new",{"_index":631,"title":{},"body":{"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"classes/AppTranslateLoader.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/FilesService.html":{},"components/HeaderComponent.html":{},"injectables/KpisMockService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":661,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next_action",{"_index":2119,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["nextmsgpage",{"_index":1241,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["nextpage",{"_index":518,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["nextsessionsinfinite",{"_index":1242,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["nextsessionspage",{"_index":1243,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["nexttick",{"_index":4599,"title":{},"body":{"injectables/TtsService.html":{}}}],["ng",{"_index":4844,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1347,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["ngfor",{"_index":2801,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["ngondestroy",{"_index":1348,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["ngoninit",{"_index":153,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["ngx",{"_index":185,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"dependencies.html":{}}}],["nico",{"_index":2780,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["nombre",{"_index":692,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["none",{"_index":374,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["nonnullable",{"_index":1607,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["noop",{"_index":668,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["noopener",{"_index":4141,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["normalizar",{"_index":3726,"title":{},"body":{"components/RegisterPage.html":{}}}],["normalize",{"_index":3056,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["not_found.back_home",{"_index":3546,"title":{},"body":{"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{}}}],["not_found.desc",{"_index":3628,"title":{},"body":{"components/NotFoundPage.html":{}}}],["not_found.title",{"_index":3627,"title":{},"body":{"components/NotFoundPage.html":{}}}],["notfoundpage",{"_index":490,"title":{"components/NotFoundPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["nothing",{"_index":2064,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["notifications",{"_index":1054,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["notify",{"_index":4168,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["nowrap",{"_index":398,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["nuevo",{"_index":3593,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["null",{"_index":780,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/Model.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"components/RegisterPage.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["null)?.focus",{"_index":4147,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["number",{"_index":588,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AudioData.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/VideoData.html":{},"miscellaneous/functions.html":{}}}],["number((data",{"_index":902,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["number.isfinite(limit",{"_index":589,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["number.isfinite(t",{"_index":4317,"title":{},"body":{"injectables/SessionsService.html":{}}}],["number:'1.0",{"_index":979,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["number:\\'1.0",{"_index":1077,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["número",{"_index":3696,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["o",{"_index":583,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"components/HeaderComponent.html":{}}}],["obj",{"_index":4010,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["obj.length",{"_index":4034,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["object",{"_index":411,"title":{},"body":{"components/AdminAppInfoPage.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/VideoData.html":{},"miscellaneous/variables.html":{}}}],["object.assign(kpis",{"_index":3253,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["object.keys(basebody",{"_index":4300,"title":{},"body":{"injectables/SessionsService.html":{}}}],["object.keys(data",{"_index":899,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["object.keys(data).length",{"_index":897,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["object.keys(m",{"_index":860,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["object.keys(obj).length",{"_index":4035,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["objectivity_delta",{"_index":3236,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["objectivitydelta",{"_index":3200,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["objectivitydisplay",{"_index":3212,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["observable",{"_index":1931,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["observable((observer",{"_index":3834,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["observe",{"_index":3360,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["observer",{"_index":1429,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["observer.complete",{"_index":3883,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["observer.error(err",{"_index":3911,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["observer.next",{"_index":3865,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["observers",{"_index":3344,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["obteniendo",{"_index":3269,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["obtiene",{"_index":2783,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/MessageManagerService.html":{}}}],["ocultar",{"_index":4402,"title":{},"body":{"components/ShellLayout.html":{}}}],["of(map[lang",{"_index":2027,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["of(null",{"_index":2949,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["of(resp",{"_index":4307,"title":{},"body":{"injectables/SessionsService.html":{}}}],["offers_remittances",{"_index":811,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["offset",{"_index":1082,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"interfaces/PaginatedApi.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["onbackdropclick",{"_index":4002,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["oncancel",{"_index":2344,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["once",{"_index":4716,"title":{},"body":{"injectables/TtsService.html":{}}}],["onchange",{"_index":4732,"title":{},"body":{"injectables/TtsService.html":{}}}],["oncompaniesmodal",{"_index":4175,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["ondestroy",{"_index":3349,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["ondialogkeydown",{"_index":4335,"title":{},"body":{"components/ShellLayout.html":{}}}],["ondialogkeydown(e",{"_index":4347,"title":{},"body":{"components/ShellLayout.html":{}}}],["ondocclick",{"_index":3124,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ondragenter",{"_index":2345,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondragenter(e",{"_index":2381,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondragleave",{"_index":2346,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondragleave(e",{"_index":2384,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondragover",{"_index":2347,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondragover(e",{"_index":2386,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondrop",{"_index":2348,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ondrop(e",{"_index":2388,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["one",{"_index":4885,"title":{},"body":{"index.html":{}}}],["onesc",{"_index":3125,"title":{},"body":{"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["onfilesmodal",{"_index":4176,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["oninit",{"_index":137,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["onkeydown",{"_index":4003,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["onkeydown(event",{"_index":4014,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["onpickicon",{"_index":154,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["onpickicon(evt",{"_index":158,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["onpicklogo",{"_index":155,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["onpicklogo(evt",{"_index":162,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["onpointermove",{"_index":2206,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["onrefresh",{"_index":4177,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["onremove",{"_index":2349,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["onremove(file",{"_index":2390,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["onresize",{"_index":1637,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["onsidebarcontrol",{"_index":4178,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["onsubmit",{"_index":2350,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["ontypechange",{"_index":1087,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["ontypechange(val",{"_index":1094,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["onupdate",{"_index":4752,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["onversionchange",{"_index":1570,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["onversionchange(event",{"_index":1573,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["opacity",{"_index":303,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["open",{"_index":1244,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{},"index.html":{}}}],["open(sessionid",{"_index":1256,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["open(url",{"_index":4132,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["open_in_new",{"_index":4151,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["opencompaniesmodal",{"_index":4179,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["opencompaniesmodal(sessionid",{"_index":4190,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["opendeletemodal",{"_index":4336,"title":{},"body":{"components/ShellLayout.html":{}}}],["opendeletemodal(session",{"_index":4349,"title":{},"body":{"components/ShellLayout.html":{}}}],["opened",{"_index":4418,"title":{},"body":{"components/ShellLayout.html":{}}}],["openfilesmodal",{"_index":4180,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["openfilesmodal(sessionid",{"_index":4192,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["opensessioncompaniesfromshell",{"_index":4337,"title":{},"body":{"components/ShellLayout.html":{}}}],["opensessionfilesfromshell",{"_index":4338,"title":{},"body":{"components/ShellLayout.html":{}}}],["oportunidad",{"_index":1006,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["opportunity_zones",{"_index":1919,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["opt",{"_index":2945,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["optimizes",{"_index":4870,"title":{},"body":{"index.html":{}}}],["optional",{"_index":39,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"interfaces/LoginRequest.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":913,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{}}}],["opts",{"_index":2661,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["opts?.sessionid",{"_index":2712,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["opts?.subfolder",{"_index":2713,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["orden",{"_index":4256,"title":{},"body":{"injectables/SessionsService.html":{}}}],["origin",{"_index":2183,"title":{},"body":{"injectables/AuthService.html":{}}}],["original_extension",{"_index":3009,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["others",{"_index":2952,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["otro",{"_index":4547,"title":{},"body":{"injectables/ThemeService.html":{}}}],["out",{"_index":2477,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["outer",{"_index":3875,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["outline",{"_index":373,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["outline:hover",{"_index":1041,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["output",{"_index":2395,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["outputs",{"_index":2357,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["overflow",{"_index":345,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["overlay",{"_index":413,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["overlay/dom",{"_index":2433,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["overlay__content",{"_index":2475,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["override",{"_index":2946,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["overview",{"_index":773,"title":{"overview.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{},"index.html":{},"overview.html":{}}}],["overview.kpis",{"_index":3252,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["overview?.kpis",{"_index":3251,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["overviewurl",{"_index":3249,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["owner_id",{"_index":3012,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["p",{"_index":581,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminUsersFacade.html":{},"injectables/BackgroundService.html":{},"injectables/FilesFacade.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["p.ej",{"_index":3957,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["p.expanded",{"_index":1475,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["package",{"_index":4785,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":239,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["page",{"_index":232,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"injectables/ChatFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"index.html":{}}}],["page'},{'name",{"_index":484,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["page_number",{"_index":1535,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["pageparams",{"_index":3057,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["pages",{"_index":1534,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"miscellaneous/variables.html":{}}}],["paginated",{"_index":1208,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["paginatedapi",{"_index":1533,"title":{"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["paginatedapi)?.info?.count",{"_index":1560,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{}}}],["paginatedapi)?.info?.page_number",{"_index":1558,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{}}}],["paginatedapi)?.results",{"_index":1557,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{}}}],["paginatedapi)?.results?.length",{"_index":1559,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{}}}],["pagination",{"_index":756,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["pal",{"_index":2267,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["palette",{"_index":2207,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["para",{"_index":1495,"title":{},"body":{"components/AdminMessagesPage.html":{},"classes/AppTranslateLoader.html":{},"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/RegisterPage.html":{},"injectables/ScrollManagerService.html":{},"injectables/ThemeService.html":{},"injectables/TypewriterService.html":{},"miscellaneous/variables.html":{}}}],["parallax",{"_index":2208,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1200,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/functions.html":{}}}],["params.limit",{"_index":3053,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params.session_id",{"_index":3036,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params.subfolder",{"_index":3052,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params.type_file",{"_index":3049,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params?.limit",{"_index":1555,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params?.offset",{"_index":3054,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params?.page",{"_index":1554,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params?.subfolder",{"_index":3050,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["params?.type_file",{"_index":3047,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["parent",{"_index":3430,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["parent?.getboundingclientrect",{"_index":3434,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["parsed",{"_index":3894,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["partial",{"_index":104,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["parts",{"_index":3468,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["parts.foreach((p",{"_index":3475,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["passing",{"_index":2739,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["passive",{"_index":2309,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["password",{"_index":1791,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["passwordcomplexityvalidator",{"_index":3713,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["passwordcomplexityvalidator(control",{"_index":4830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":2942,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["path?.startswith('chat",{"_index":2953,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["pause",{"_index":4600,"title":{},"body":{"injectables/TtsService.html":{}}}],["paused",{"_index":4647,"title":{},"body":{"injectables/TtsService.html":{}}}],["payload",{"_index":793,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["payload).pipe",{"_index":3978,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["payload.audiofile",{"_index":4251,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.email",{"_index":2191,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.files",{"_index":4252,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.files.length",{"_index":4253,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.files?.foreach((f",{"_index":4279,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.message",{"_index":4269,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.password",{"_index":2192,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.session_id",{"_index":4254,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.user_id",{"_index":4275,"title":{},"body":{"injectables/SessionsService.html":{}}}],["payload.username",{"_index":2193,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload?.file_ids",{"_index":3844,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["payload?.message",{"_index":3842,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["payload?.session_id",{"_index":3843,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["pdf",{"_index":1146,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/RiskFacade.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"miscellaneous/typealiases.html":{}}}],["pdfs",{"_index":1169,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["pending",{"_index":4645,"title":{},"body":{"injectables/TtsService.html":{}}}],["pendingdelete",{"_index":4328,"title":{},"body":{"components/ShellLayout.html":{}}}],["percent",{"_index":2320,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["perf",{"_index":2074,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["perf.init",{"_index":2076,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":2070,"title":{},"body":{"classes/AppTranslateLoader.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["performanceservice",{"_index":2933,"title":{"injectables/PerformanceService.html":{}},"body":{"injectables/CustomPreloadStrategy.html":{},"injectables/PerformanceService.html":{}}}],["permisos",{"_index":3065,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["pero",{"_index":4262,"title":{},"body":{"injectables/SessionsService.html":{}}}],["persist",{"_index":1730,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/LoginFacade.html":{},"components/ShellLayout.html":{}}}],["persistsidebarstate",{"_index":4339,"title":{},"body":{"components/ShellLayout.html":{}}}],["pertenece",{"_index":964,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["picture_as_pdf",{"_index":4150,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["pill",{"_index":4109,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["pill.warn",{"_index":4111,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["pill:hover",{"_index":4110,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["pills",{"_index":4108,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["ping",{"_index":2916,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["pipe",{"_index":4234,"title":{},"body":{"injectables/SessionsService.html":{}}}],["pipes",{"_index":4861,"title":{},"body":{"index.html":{}}}],["pitch",{"_index":4594,"title":{},"body":{"injectables/TtsService.html":{}}}],["pl",{"_index":1070,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["plain",{"_index":2859,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["platform_id",{"_index":1961,"title":{},"body":{"components/App.html":{},"components/LazyChartComponent.html":{}}}],["platformid",{"_index":1946,"title":{},"body":{"components/App.html":{},"components/LazyChartComponent.html":{}}}],["play",{"_index":4601,"title":{},"body":{"injectables/TtsService.html":{}}}],["play(text",{"_index":4614,"title":{},"body":{"injectables/TtsService.html":{}}}],["playgroundagentextradata",{"_index":2133,"title":{"interfaces/PlaygroundAgentExtraData.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["plugins",{"_index":914,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["pm",{"_index":889,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["pm.get('taxid",{"_index":890,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["pointer",{"_index":396,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["pointerevent",{"_index":2310,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["poll",{"_index":4736,"title":{},"body":{"injectables/TtsService.html":{}}}],["polling",{"_index":4735,"title":{},"body":{"injectables/TtsService.html":{}}}],["por",{"_index":3183,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/MessageManagerService.html":{},"injectables/ScrollManagerService.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":1197,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/ChatFacade.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["ports/app",{"_index":3079,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{}}}],["ports/auth.port",{"_index":3107,"title":{},"body":{"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["ports/kpis.port",{"_index":3098,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["position",{"_index":265,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["post",{"_index":3831,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["powerful",{"_index":4856,"title":{},"body":{"index.html":{}}}],["pre",{"_index":2736,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["preference",{"_index":4383,"title":{},"body":{"components/ShellLayout.html":{}}}],["preferred",{"_index":4679,"title":{},"body":{"injectables/TtsService.html":{}}}],["preferred.lang",{"_index":4686,"title":{},"body":{"injectables/TtsService.html":{}}}],["preferred.name",{"_index":4685,"title":{},"body":{"injectables/TtsService.html":{}}}],["prefers",{"_index":4116,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["prefersdark",{"_index":4506,"title":{},"body":{"injectables/ThemeService.html":{}}}],["prefix",{"_index":4675,"title":{},"body":{"injectables/TtsService.html":{}}}],["preload",{"_index":2929,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preload(route",{"_index":2930,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preload.strategy.ts",{"_index":2928,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preload.strategy.ts:11",{"_index":2931,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preload.strategy.ts:8",{"_index":2932,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preloading",{"_index":2937,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["preloadingstrategy",{"_index":2044,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["preparecanvas",{"_index":3361,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["preparecanvas(canvas",{"_index":3381,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["prerendered",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3023,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["presentation",{"_index":3515,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["preserve",{"_index":1464,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["prev",{"_index":1088,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["previa",{"_index":219,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["preview",{"_index":405,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["previews",{"_index":404,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["prevpage",{"_index":519,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["prevsessionspage",{"_index":1245,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["primary",{"_index":247,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["primary:hover",{"_index":1047,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{}}}],["principal",{"_index":221,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["private",{"_index":11,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["prlx",{"_index":2270,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["probable",{"_index":4260,"title":{},"body":{"injectables/SessionsService.html":{}}}],["procesando",{"_index":2553,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["processed",{"_index":1338,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["production",{"_index":4869,"title":{},"body":{"index.html":{}}}],["profile",{"_index":493,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["profile.usecase.ts",{"_index":3101,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["profile.usecase.ts:10",{"_index":3104,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["profile.usecase.ts:8",{"_index":3106,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["profile.username",{"_index":1720,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["profile?.role",{"_index":2067,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["profileemail",{"_index":1624,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["profileloading",{"_index":1625,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["profilemenucomponent",{"_index":492,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["profilemenuopen",{"_index":1626,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["profilerole",{"_index":1627,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["programa",{"_index":3940,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["programado",{"_index":3927,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["project",{"_index":4837,"title":{},"body":{"index.html":{}}}],["promise",{"_index":829,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/ChatFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TtsService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"miscellaneous/variables.html":{}}}],["promise((r",{"_index":4731,"title":{},"body":{"injectables/TtsService.html":{}}}],["promise((res",{"_index":4739,"title":{},"body":{"injectables/TtsService.html":{}}}],["promise.all(ids.map((id",{"_index":1137,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["promise.all(uniquserids.map((id",{"_index":1306,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["prompt('nombre",{"_index":1602,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["propagated",{"_index":4380,"title":{},"body":{"components/ShellLayout.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"injectables/AppInfoService.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"properties.html":{}}}],["prose",{"_index":1066,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["protected",{"_index":1334,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{}}}],["proveedor",{"_index":957,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["provide",{"_index":2043,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["provideappinitializer",{"_index":2025,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":2022,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":2047,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":3869,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{}}}],["providedin",{"_index":79,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["providehttpclient(withfetch",{"_index":2048,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["providemarkdown",{"_index":2033,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1899,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["providerouter(routes",{"_index":2040,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":2032,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":3339,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":2023,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["próximo",{"_index":3943,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["pts",{"_index":3453,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["pts[0].y",{"_index":3458,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["public/guest",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pudo",{"_index":93,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/SessionsService.html":{}}}],["pulse",{"_index":327,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/ConnectionStatusService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["pulseglow",{"_index":2468,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["purge",{"_index":4454,"title":{},"body":{"components/ShellLayout.html":{}}}],["px",{"_index":2301,"title":{},"body":{"injectables/BackgroundService.html":{},"components/ShellLayout.html":{}}}],["py",{"_index":2303,"title":{},"body":{"injectables/BackgroundService.html":{},"components/ShellLayout.html":{}}}],["página",{"_index":3067,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["público",{"_index":968,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["q",{"_index":1354,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["qp",{"_index":1538,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["qp.email",{"_index":1804,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["qp.limit",{"_index":1544,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["qp.page",{"_index":1541,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["qp.search",{"_index":1547,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/PaginatedApi-1.html":{}}}],["qp.sector",{"_index":2855,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["qp.sort_by",{"_index":1549,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["qp.sort_order",{"_index":1551,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["qp.subfolder",{"_index":3051,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["qp.type_file",{"_index":3048,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["que",{"_index":1187,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/ThemeService.html":{}}}],["query",{"_index":2125,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/VideoData.html":{}}}],["queue",{"_index":4420,"title":{},"body":{"components/ShellLayout.html":{}}}],["queuemicrotask",{"_index":1430,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ChatEventsService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{}}}],["quieres",{"_index":4516,"title":{},"body":{"injectables/ThemeService.html":{}}}],["quirk",{"_index":4711,"title":{},"body":{"injectables/TtsService.html":{}}}],["quotes",{"_index":2837,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["r",{"_index":3466,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/TtsService.html":{}}}],["r.position",{"_index":4074,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["r.risk_class",{"_index":4077,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["r.score",{"_index":4076,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["r.tax_id",{"_index":4075,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["radial",{"_index":242,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["radius",{"_index":311,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["raf",{"_index":2209,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["ranking",{"_index":1907,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{}}}],["rate",{"_index":4595,"title":{},"body":{"injectables/TtsService.html":{}}}],["raw",{"_index":2571,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["raw.extra_data.reasoning_steps",{"_index":2579,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw.extra_data.references",{"_index":2582,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw.images",{"_index":2586,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw.session_id",{"_index":2574,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw.videos",{"_index":2589,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.business_name",{"_index":2866,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.businessname",{"_index":2867,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.extra_data",{"_index":2590,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.extra_data?.reasoning_steps",{"_index":2577,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.extra_data?.references",{"_index":2581,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.images",{"_index":2584,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.industry",{"_index":2869,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.name",{"_index":2865,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.ruc",{"_index":2863,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.sector",{"_index":2868,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.session_id",{"_index":2573,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["raw?.tax_id",{"_index":2862,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.taxid",{"_index":2864,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["raw?.videos",{"_index":2587,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["rawagent",{"_index":4824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawagents",{"_index":4826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawmessage",{"_index":3823,"title":{},"body":{"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{}}}],["rbac/guards",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["re",{"_index":1441,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["re)build",{"_index":1449,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["re.exec(content",{"_index":1444,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["react",{"_index":2429,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["reactiveformsmodule",{"_index":146,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["reader",{"_index":3855,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["reader.read",{"_index":3885,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["readls",{"_index":2211,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["readls(k",{"_index":2221,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"classes/GetSessionUseCase.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["ready",{"_index":4656,"title":{},"body":{"injectables/TtsService.html":{}}}],["reasoning",{"_index":2117,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["reasoning_steps",{"_index":2134,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["reasoningcompleted",{"_index":2114,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["reasoningstarted",{"_index":2112,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["reasoningstep",{"_index":2113,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["reasoningsteps",{"_index":2115,"title":{"interfaces/ReasoningSteps.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["recibiendo",{"_index":2912,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["recomendado",{"_index":214,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["recommend",{"_index":4068,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["recommended_credit_limit",{"_index":1910,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["record",{"_index":781,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/Model.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/TimeSeriesPoint.html":{},"interfaces/Tool.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["recordar",{"_index":4378,"title":{},"body":{"components/ShellLayout.html":{}}}],["rect",{"_index":3433,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["recursos",{"_index":207,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["reduce",{"_index":2757,"title":{},"body":{"injectables/ChatUtilsService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["reduced",{"_index":4117,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["reference",{"_index":2120,"title":{"interfaces/Reference.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"index.html":{}}}],["referencedata",{"_index":2124,"title":{"interfaces/ReferenceData.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["references",{"_index":2126,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"index.html":{}}}],["refresh",{"_index":520,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{},"classes/AppTranslateLoader.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["refs",{"_index":3346,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["regexp",{"_index":2830,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["regexp(`]*>[\\s\\s",{"_index":2827,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["regexpexecarray",{"_index":1443,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["register",{"_index":1811,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":496,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["register(payload",{"_index":2167,"title":{},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/RegisterFacade.html":{}}}],["register.email",{"_index":3743,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.email_invalid",{"_index":3744,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.have_account",{"_index":3749,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.html",{"_index":3705,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.password",{"_index":3745,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.password_complexity_error",{"_index":3746,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.processing",{"_index":3748,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.sign_in",{"_index":3750,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.submit",{"_index":3747,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.subtitle",{"_index":3738,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.title",{"_index":3737,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.username",{"_index":3739,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.username_error",{"_index":3742,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerables",{"_index":3423,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["registerables.length",{"_index":3425,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["registerfacade",{"_index":3667,"title":{"injectables/RegisterFacade.html":{}},"body":{"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{}}}],["registerpage",{"_index":495,"title":{"components/RegisterPage.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["registerrequest",{"_index":2168,"title":{"interfaces/RegisterRequest.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/UserProfile.html":{}}}],["registersuccessresponse",{"_index":2172,"title":{"interfaces/RegisterSuccessResponse.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/UserProfile.html":{}}}],["registeruc",{"_index":3669,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["registerusecase",{"_index":3675,"title":{"injectables/RegisterUseCase.html":{}},"body":{"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{}}}],["registradas",{"_index":674,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["registrado",{"_index":3702,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["registramos",{"_index":3262,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["registro",{"_index":3685,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["relative",{"_index":266,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["reload",{"_index":4850,"title":{},"body":{"index.html":{}}}],["remember",{"_index":4417,"title":{},"body":{"components/ShellLayout.html":{}}}],["remesas",{"_index":959,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["remove",{"_index":2821,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["removes",{"_index":2741,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["removeuploadedfile",{"_index":2363,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["render",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renderchart",{"_index":845,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["rendermode",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.client",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":3955,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["repeat(1",{"_index":1033,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["repeat(2",{"_index":1035,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["repeat(3",{"_index":1037,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["repeat(auto",{"_index":381,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["repeated",{"_index":1294,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["replacelastmessage",{"_index":2623,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["replacelastmessage(updater",{"_index":2649,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["representative",{"_index":806,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["representatives",{"_index":805,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["reputation",{"_index":1914,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["req",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":4921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":4938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestanimationframe",{"_index":2312,"title":{},"body":{"injectables/BackgroundService.html":{},"injectables/ScrollManagerService.html":{}}}],["required",{"_index":1896,"title":{},"body":{"interfaces/AgentModel.html":{},"components/LazyChartComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/Model.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{},"interfaces/UserProfile.html":{}}}],["requires_confirmation",{"_index":1897,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["requisitos",{"_index":3735,"title":{},"body":{"components/RegisterPage.html":{}}}],["res",{"_index":101,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{}}}],["res.items",{"_index":1132,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{}}}],["res.user?.role",{"_index":3517,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["res?.weights",{"_index":1596,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["reset",{"_index":4650,"title":{},"body":{"injectables/TtsService.html":{}}}],["resize",{"_index":2451,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{}}}],["resizeobserver",{"_index":3393,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["resolve",{"_index":1118,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/TtsService.html":{}}}],["resolveuser",{"_index":1246,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["resolveuser(userid",{"_index":1259,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["resolviendo",{"_index":4511,"title":{},"body":{"injectables/ThemeService.html":{}}}],["resources",{"_index":4888,"title":{},"body":{"index.html":{}}}],["resp",{"_index":3983,"title":{},"body":{"classes/SendMessageRestUseCase.html":{},"injectables/SessionsService.html":{}}}],["resp.session_id",{"_index":4305,"title":{},"body":{"injectables/SessionsService.html":{}}}],["resp?.content",{"_index":3980,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["resp?.error",{"_index":3982,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["resp?.event",{"_index":3981,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["responding",{"_index":3871,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response",{"_index":2148,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{}}}],["response.body",{"_index":3850,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response.body.getreader",{"_index":3856,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response.ok",{"_index":3849,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response.status",{"_index":3853,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response.statustext",{"_index":3854,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response.text",{"_index":3852,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["response_audio",{"_index":2143,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["responseaudio",{"_index":2127,"title":{"interfaces/ResponseAudio.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["responses",{"_index":2860,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["responsive",{"_index":442,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["rest",{"_index":2690,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["rest.usecase.ts",{"_index":3974,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["rest.usecase.ts:5",{"_index":3975,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["rest.usecase.ts:8",{"_index":3976,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["restaurar",{"_index":4408,"title":{},"body":{"components/ShellLayout.html":{}}}],["restore",{"_index":1698,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{}}}],["restoresidebar",{"_index":4181,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["result",{"_index":2116,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["result.push(meta",{"_index":2715,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["resultpdf",{"_index":3759,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["results",{"_index":125,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resulttext",{"_index":3760,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["resume",{"_index":4602,"title":{},"body":{"injectables/TtsService.html":{}}}],["resumed",{"_index":4700,"title":{},"body":{"injectables/TtsService.html":{}}}],["resuming",{"_index":4712,"title":{},"body":{"injectables/TtsService.html":{}}}],["retry",{"_index":4715,"title":{},"body":{"injectables/TtsService.html":{}}}],["retrying",{"_index":4718,"title":{},"body":{"injectables/TtsService.html":{}}}],["return",{"_index":97,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1117,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["revisa",{"_index":1483,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["revised_prompt",{"_index":2130,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["rgba(0",{"_index":338,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["rgba(16",{"_index":419,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["rgba(239",{"_index":317,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["rgba(255",{"_index":321,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["rgba(255,255,255,0.02",{"_index":3447,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["rgba(59,130,246,0.4",{"_index":909,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["rgba(59,130,246,1",{"_index":911,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["right",{"_index":351,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["risk",{"_index":1563,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["risk_class",{"_index":1909,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["risk_summary",{"_index":1913,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["risk_weights_port",{"_index":2086,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"miscellaneous/variables.html":{}}}],["riskfacade",{"_index":3755,"title":{"injectables/RiskFacade.html":{}},"body":{"injectables/RiskFacade.html":{}}}],["riskweightsconfig",{"_index":3073,"title":{"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{}},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["riskweightsport",{"_index":3072,"title":{"interfaces/RiskWeightsPort.html":{}},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["riskweightsservice",{"_index":2087,"title":{"injectables/RiskWeightsService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"miscellaneous/variables.html":{}}}],["ro",{"_index":3357,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["role",{"_index":1223,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/ImageData.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/TokenStorageService.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"miscellaneous/variables.html":{}}}],["roleguard",{"_index":3810,"title":{},"body":{"injectables/RoleGuardService.html":{},"miscellaneous/variables.html":{}}}],["roleguardservice",{"_index":3796,"title":{"injectables/RoleGuardService.html":{}},"body":{"injectables/RoleGuardService.html":{}}}],["roles",{"_index":3804,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["root",{"_index":80,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["root'},{'name",{"_index":470,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["root.classlist.toggle('dark",{"_index":4552,"title":{},"body":{"injectables/ThemeService.html":{}}}],["root.queryselectorall",{"_index":4044,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["root.setattribute('data",{"_index":4556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["root.style.colorscheme",{"_index":4557,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rotate",{"_index":293,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["rotate(0deg",{"_index":298,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["rotate(180deg",{"_index":2486,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["rotate(360deg",{"_index":299,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["rounded",{"_index":2456,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["route",{"_index":841,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminShellLayout.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/RoleGuardService.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["route.data?.['preload",{"_index":2948,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["route.data?.['roles",{"_index":3803,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["route.path",{"_index":2943,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["router",{"_index":842,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/RoleGuardService.html":{},"components/ShellLayout.html":{}}}],["routerlink",{"_index":1617,"title":{},"body":{"components/AdminShellLayout.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{}}}],["routermodule",{"_index":591,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["routeroutlet",{"_index":1618,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"components/ShellLayout.html":{}}}],["routes",{"_index":2939,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":733,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["row.head",{"_index":4104,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["row:hover",{"_index":734,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["row:last",{"_index":4102,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["ruc",{"_index":2844,"title":{},"body":{"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/GetCompanyByRucUseCase.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["ruc.usecase.ts",{"_index":3084,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["ruc.usecase.ts:7",{"_index":3088,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["ruc.usecase.ts:8",{"_index":3086,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["run",{"_index":4842,"title":{},"body":{"index.html":{}}}],["run_id",{"_index":2138,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["runcompleted",{"_index":2107,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["runcompleted'].includes(message.event",{"_index":2819,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["runerror",{"_index":2108,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["runevent",{"_index":2103,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["runid",{"_index":2642,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["runner",{"_index":4875,"title":{},"body":{"index.html":{}}}],["running",{"_index":4846,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runresponse",{"_index":2105,"title":{"interfaces/RunResponse.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["runresponsecontent",{"_index":2106,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["runs",{"_index":2763,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["runstarted",{"_index":2104,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rxjs",{"_index":1530,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/AppInfoService.html":{},"injectables/AuthService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/FilesService.html":{},"classes/GetSessionUseCase.html":{},"injectables/KpisApiService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"interfaces/ListFilesResponse-1.html":{},"classes/ListSessionsUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TypewriterService.html":{},"interfaces/UploadedFileMeta-1.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2009,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["s",{"_index":680,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{},"components/ShellLayout.html":{}}}],["s.key",{"_index":984,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["s.replace(/(href|src)\\s*=\\s*([\"'])(javascript:|data:)[^\"']*\\2/gi",{"_index":2836,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["s.replace(/(href|src)\\s*=\\s*(javascript:|data:)[^\\s>]+/gi",{"_index":2838,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["s.replace(/\\son[a",{"_index":2832,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["s.replace(new",{"_index":2826,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["s.resume",{"_index":4241,"title":{},"body":{"injectables/SessionsService.html":{}}}],["s.session_id",{"_index":1392,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/SessionsService.html":{}}}],["s.summary",{"_index":4240,"title":{},"body":{"injectables/SessionsService.html":{}}}],["s.title",{"_index":1487,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/SessionsService.html":{}}}],["s.updated_at",{"_index":1488,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/SessionsService.html":{}}}],["s.user_id",{"_index":1490,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["s.user_id).filter(boolean",{"_index":1305,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["s.value",{"_index":985,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["s?.risk_class",{"_index":4064,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["s?.score",{"_index":4063,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["s\\s]*?)/gi",{"_index":1442,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["safe",{"_index":3345,"title":{},"body":{"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["safedoc",{"_index":2212,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["safedocument",{"_index":4507,"title":{},"body":{"injectables/ThemeService.html":{}}}],["safelocalstorageget",{"_index":3282,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["safelocalstorageget(key",{"_index":3291,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["safelocalstorageset",{"_index":3283,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["safelocalstorageset(key",{"_index":3293,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["safenavigatorlang",{"_index":3284,"title":{},"body":{"injectables/LanguageService.html":{}}}],["same",{"_index":2182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TtsService.html":{}}}],["sample_rate",{"_index":2101,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["sanitize",{"_index":2737,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["sanitizer",{"_index":2759,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["satisfies",{"_index":2014,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["save",{"_index":26,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["saved",{"_index":19,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"components/AdminShellLayout.html":{},"injectables/LanguageService.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["saving",{"_index":20,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["scaffolding",{"_index":4854,"title":{},"body":{"index.html":{}}}],["scale(0.8",{"_index":2478,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["scale(0.95",{"_index":4088,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["scale(1",{"_index":701,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["scale(1.01",{"_index":735,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["scale(1.02",{"_index":2474,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["scale(1.05",{"_index":407,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["scale(1.1",{"_index":702,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["scales",{"_index":915,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["scenarios",{"_index":774,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["schedulescrolltobottom",{"_index":3921,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["schematics",{"_index":4859,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":4560,"title":{},"body":{"injectables/ThemeService.html":{}}}],["score",{"_index":775,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["score_source",{"_index":776,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["screen",{"_index":4439,"title":{},"body":{"components/ShellLayout.html":{}}}],["screens",{"_index":3657,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["script",{"_index":2743,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["script|style|iframe|object|embed|svg|math|audio|video|source|track|link|meta|base)/gi",{"_index":2825,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["scroll",{"_index":1423,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/ScrollManagerService.html":{}}}],["scrollmanager",{"_index":2507,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["scrollmanagerservice",{"_index":2508,"title":{"injectables/ScrollManagerService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/ScrollManagerService.html":{}}}],["scrolltobottom",{"_index":3922,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["scrolltobottom(container",{"_index":3945,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["scrolltobottomraf",{"_index":3923,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["scrolltobottomraf(container",{"_index":3949,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["scrolltobottomsmooth",{"_index":3924,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["scrolltobottomsmooth(container",{"_index":3958,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["se",{"_index":92,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminFilesPage.html":{},"injectables/SessionsService.html":{}}}],["search",{"_index":511,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/PaginatedApi-1.html":{}}}],["secondary",{"_index":2919,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["seconds",{"_index":4835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["section",{"_index":261,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["section::before",{"_index":347,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["section:hover",{"_index":355,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["sections",{"_index":333,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["sector",{"_index":512,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["sector_comparison",{"_index":777,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["sectors",{"_index":595,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["selecciona",{"_index":1493,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["seleccionados",{"_index":1190,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["select",{"_index":710,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/TtsService.html":{}}}],["select:focus",{"_index":711,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["selected",{"_index":1235,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/TtsService.html":{}}}],["selectedownerid",{"_index":1339,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["selectedsector",{"_index":596,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["selectedsessionid",{"_index":2535,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/ShellLayout.html":{}}}],["selecting",{"_index":4687,"title":{},"body":{"injectables/TtsService.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["selectsector",{"_index":598,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["selectsector(sector",{"_index":607,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["self",{"_index":1059,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ChatUtilsService.html":{},"components/ShellLayout.html":{}}}],["sells_on_credit",{"_index":812,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["semibold",{"_index":1076,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["send",{"_index":2364,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["sending",{"_index":1802,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"components/ChatComposerComponent.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["sendmessage",{"_index":2624,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["sendmessage(agentid",{"_index":4220,"title":{},"body":{"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["sendmessage(payload",{"_index":2652,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["sendmessagerestuc",{"_index":2688,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["sendmessagerestusecase",{"_index":3973,"title":{"classes/SendMessageRestUseCase.html":{}},"body":{"classes/SendMessageRestUseCase.html":{}}}],["sendmessagerestusecase(this.sessionsport",{"_index":2689,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["sendmessageuc",{"_index":2611,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["sendmessageusecase",{"_index":2684,"title":{"classes/SendMessageUseCase.html":{}},"body":{"injectables/ChatFacade.html":{},"classes/SendMessageUseCase.html":{}}}],["sendmessageusecase(this.chatstream",{"_index":2674,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["sentinel",{"_index":1340,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["separator",{"_index":723,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["served",{"_index":2185,"title":{},"body":{"injectables/AuthService.html":{}}}],["serveonce",{"_index":4845,"title":{},"body":{"index.html":{}}}],["server",{"_index":2188,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":4923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroute",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":4924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":2847,"title":{},"body":{"interfaces/CompaniesPort.html":{},"interfaces/CompanyItem.html":{},"components/HeaderComponent.html":{}}}],["service.ts",{"_index":3814,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["service.ts:39",{"_index":4496,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:40",{"_index":4495,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:41",{"_index":4497,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:42",{"_index":4499,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:43",{"_index":4498,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:45",{"_index":4492,"title":{},"body":{"injectables/SseService.html":{}}}],["service.ts:53",{"_index":4494,"title":{},"body":{"injectables/SseService.html":{}}}],["services/performance.service",{"_index":2934,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["services/token",{"_index":2156,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/RoleGuardService.html":{}}}],["servicio",{"_index":2884,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["sesiones",{"_index":1308,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["sesión",{"_index":1181,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/SessionsService.html":{}}}],["session",{"_index":498,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"injectables/ListSessionFilesUseCase.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["session.usecase.ts",{"_index":2957,"title":{},"body":{"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{}}}],["session.usecase.ts:4",{"_index":2959,"title":{},"body":{"classes/DeleteSessionUseCase.html":{}}}],["session.usecase.ts:5",{"_index":3109,"title":{},"body":{"classes/GetSessionUseCase.html":{}}}],["session.usecase.ts:6",{"_index":2961,"title":{},"body":{"classes/DeleteSessionUseCase.html":{}}}],["session.usecase.ts:7",{"_index":3110,"title":{},"body":{"classes/GetSessionUseCase.html":{}}}],["session_id",{"_index":1225,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AggregateInsights.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/VideoData.html":{}}}],["sessioncompaniesanalysis",{"_index":1924,"title":{"interfaces/SessionCompaniesAnalysis.html":{}},"body":{"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["sessioncompaniesmodalcomponent",{"_index":497,"title":{"components/SessionCompaniesModalComponent.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["sessioncompanyitem",{"_index":1922,"title":{"interfaces/SessionCompanyItem.html":{}},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["sessionentry",{"_index":2144,"title":{"interfaces/SessionEntry.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatFacade.html":{},"interfaces/ImageData.html":{},"classes/ListSessionsUseCase.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"interfaces/VideoData.html":{}}}],["sessionfilesmodalcomponent",{"_index":501,"title":{"components/SessionFilesModalComponent.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["sessionid",{"_index":1202,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{},"classes/DeleteSessionUseCase.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"classes/GetSessionUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListSessionFilesUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["sessions",{"_index":1236,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{}}}],["sessions().length",{"_index":1491,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["sessions.usecase.ts",{"_index":1213,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{},"classes/ListSessionsUseCase.html":{}}}],["sessions.usecase.ts:5",{"_index":3493,"title":{},"body":{"classes/ListSessionsUseCase.html":{}}}],["sessions.usecase.ts:7",{"_index":3494,"title":{},"body":{"classes/ListSessionsUseCase.html":{}}}],["sessions.usecase.ts:8",{"_index":1216,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{}}}],["sessions.usecase.ts:9",{"_index":1215,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{}}}],["sessions_port",{"_index":1934,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"classes/AppTranslateLoader.html":{},"injectables/ChatFacade.html":{},"miscellaneous/variables.html":{}}}],["sessionscontainer",{"_index":1341,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["sessionsevents",{"_index":2509,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/ShellLayout.html":{}}}],["sessionseventsservice",{"_index":2510,"title":{"injectables/SessionsEventsService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{}}}],["sessionsport",{"_index":1935,"title":{"interfaces/SessionsPort.html":{}},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/ChatFacade.html":{},"classes/DeleteSessionUseCase.html":{},"classes/GetSessionUseCase.html":{},"classes/ListSessionsUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{}}}],["sessionssentinel",{"_index":1342,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["sessionsservice",{"_index":2080,"title":{"injectables/SessionsService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"injectables/SessionsService.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":630,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/RegisterPage.html":{}}}],["set((res.items",{"_index":1303,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["set.add(it.sector",{"_index":633,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["setbackground",{"_index":2213,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setbackground(style",{"_index":2224,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setdefaultlang",{"_index":3308,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setfavicon",{"_index":1947,"title":{},"body":{"components/App.html":{}}}],["setfavicon(href",{"_index":1949,"title":{},"body":{"components/App.html":{}}}],["setheaders",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setissending",{"_index":2625,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["setissending(v",{"_index":2654,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["setlimit",{"_index":513,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["setlimit(limit",{"_index":1261,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["setmessages",{"_index":2626,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["setmessages(list",{"_index":2656,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["setneonedges",{"_index":2214,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setneonedges(enabled",{"_index":2227,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setpalette",{"_index":2215,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setpalette(p",{"_index":2230,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setparallax",{"_index":2216,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setparallax(enabled",{"_index":2232,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setrole",{"_index":4571,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["setrole(role",{"_index":4577,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["setsector",{"_index":521,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["setsector(value",{"_index":529,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["setsessionssort",{"_index":1247,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["setsessionssort(field",{"_index":1263,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["setsort",{"_index":522,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{}}}],["setsort(field",{"_index":531,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{}}}],["setstatus",{"_index":2879,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["setstatus(status",{"_index":2892,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["settheme",{"_index":1638,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/ThemeService.html":{}}}],["settheme(t",{"_index":4522,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(value",{"_index":1656,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["settimeout",{"_index":110,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompanyPage.html":{},"components/LazyChartComponent.html":{},"injectables/TtsService.html":{}}}],["settimeout(async",{"_index":4717,"title":{},"body":{"injectables/TtsService.html":{}}}],["settimeout(poll",{"_index":4738,"title":{},"body":{"injectables/TtsService.html":{}}}],["settimeout(res",{"_index":4740,"title":{},"body":{"injectables/TtsService.html":{}}}],["settings",{"_index":4673,"title":{},"body":{"injectables/TtsService.html":{}}}],["settoken",{"_index":4572,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["settoken(token",{"_index":4579,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["settoolrunning",{"_index":2627,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["settoolrunning(v",{"_index":2658,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["setupio",{"_index":1349,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["setupiosessions",{"_index":1350,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["setupparallaxlistener",{"_index":2217,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["setupresize",{"_index":3362,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["setupresize(canvas",{"_index":3383,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["setupsystemlistener",{"_index":4508,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setvolume",{"_index":4603,"title":{},"body":{"injectables/TtsService.html":{}}}],["setvolume(val",{"_index":4618,"title":{},"body":{"injectables/TtsService.html":{}}}],["shadow",{"_index":314,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["shadow(0",{"_index":2481,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["shake",{"_index":717,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["shape",{"_index":3027,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["shell",{"_index":1616,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["shell'},{'name",{"_index":467,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["shell.app_title",{"_index":3189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shell.css",{"_index":1621,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["shell.html",{"_index":1619,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["shell.ts",{"_index":1615,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:110",{"_index":1668,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:125",{"_index":1649,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:133",{"_index":1652,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:142",{"_index":1653,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:146",{"_index":1664,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:149",{"_index":1660,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:154",{"_index":1645,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:162",{"_index":1646,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:39",{"_index":1677,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:40",{"_index":1682,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:41",{"_index":1670,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:42",{"_index":1672,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:43",{"_index":1680,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:46",{"_index":1673,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:47",{"_index":1676,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:48",{"_index":1674,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:49",{"_index":1675,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:51",{"_index":1678,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:53",{"_index":1654,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:78",{"_index":1648,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:82",{"_index":1650,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell.ts:98",{"_index":1666,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shell/admin",{"_index":1614,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["shelllayout",{"_index":502,"title":{"components/ShellLayout.html":{}},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["shift",{"_index":2321,"title":{},"body":{"injectables/BackgroundService.html":{},"components/ShellLayout.html":{}}}],["shimmer",{"_index":2490,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["shouldscrolltobottom",{"_index":3916,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["show",{"_index":4471,"title":{},"body":{"components/ShellLayout.html":{}}}],["showcompaniesmodal",{"_index":1343,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["showfilesmodal",{"_index":1344,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["showpassword",{"_index":3523,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["shrinking",{"_index":4457,"title":{},"body":{"components/ShellLayout.html":{}}}],["si",{"_index":2790,"title":{},"body":{"injectables/ChatUtilsService.html":{},"components/HeaderComponent.html":{},"injectables/ScrollManagerService.html":{},"injectables/SessionsService.html":{},"injectables/ThemeService.html":{},"injectables/TypewriterService.html":{}}}],["sid",{"_index":2542,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["sidebar",{"_index":504,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["sidebar.cancel",{"_index":4437,"title":{},"body":{"components/ShellLayout.html":{}}}],["sidebar.confirm",{"_index":4438,"title":{},"body":{"components/ShellLayout.html":{}}}],["sidebar.delete_text",{"_index":4436,"title":{},"body":{"components/ShellLayout.html":{}}}],["sidebar.delete_title",{"_index":4435,"title":{},"body":{"components/ShellLayout.html":{}}}],["sidebar.hidden",{"_index":4458,"title":{},"body":{"components/ShellLayout.html":{}}}],["sidebarcollapsed",{"_index":1628,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["sidebarcomponent",{"_index":503,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["sidebarcontrol",{"_index":4171,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["sidebarstatebeforemodal",{"_index":4329,"title":{},"body":{"components/ShellLayout.html":{}}}],["signal",{"_index":66,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/BackgroundService.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{}}}],["signal('asc",{"_index":548,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["signal('bokeh",{"_index":2237,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["signal('desc",{"_index":1282,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["signal('es",{"_index":4628,"title":{},"body":{"injectables/TtsService.html":{}}}],["signal('system",{"_index":4526,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal('vaporwave",{"_index":2241,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["signal(0",{"_index":550,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["signal(0.9",{"_index":4631,"title":{},"body":{"injectables/TtsService.html":{}}}],["signal(1",{"_index":542,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{},"injectables/TtsService.html":{}}}],["signal(10",{"_index":1273,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["signal(20",{"_index":537,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/FilesFacade.html":{}}}],["signal(false",{"_index":58,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/TtsService.html":{}}}],["signal(null",{"_index":46,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"injectables/TtsService.html":{}}}],["signal(true",{"_index":2239,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["signals",{"_index":778,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"injectables/ChatFacade.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["silencioso",{"_index":3258,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["similar",{"_index":1152,"title":{},"body":{"components/AdminFilesPage.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["simple",{"_index":2935,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["simplify",{"_index":2692,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["simula",{"_index":3225,"title":{},"body":{"injectables/KpisMockService.html":{}}}],["sin",{"_index":691,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/SessionsService.html":{},"injectables/TypewriterService.html":{}}}],["sistema",{"_index":1163,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{}}}],["site_icon",{"_index":55,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/AppInfo.html":{},"injectables/AppInfoService.html":{}}}],["site_logo",{"_index":56,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/AppInfo.html":{},"injectables/AppInfoService.html":{}}}],["site_name",{"_index":53,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"interfaces/AppInfo.html":{},"injectables/AppInfoService.html":{}}}],["sitio",{"_index":212,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["size",{"_index":277,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["skeleton",{"_index":1056,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["skip",{"_index":2034,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/CustomPreloadStrategy.html":{},"miscellaneous/variables.html":{}}}],["skipinitialtransition",{"_index":2042,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["slidedown",{"_index":2483,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["slideup",{"_index":4085,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["sm",{"_index":1074,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["sm\\\\:col",{"_index":1061,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["sm\\\\:grid",{"_index":1060,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["small",{"_index":2319,"title":{},"body":{"injectables/BackgroundService.html":{},"injectables/PerformanceService.html":{}}}],["smooth",{"_index":4459,"title":{},"body":{"components/ShellLayout.html":{}}}],["sola",{"_index":3263,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["solicitud",{"_index":2554,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["solid",{"_index":320,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["soon",{"_index":3407,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["sort",{"_index":730,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/SessionsService.html":{}}}],["sort_by",{"_index":565,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["sort_order",{"_index":567,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["sortby",{"_index":514,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["sorted",{"_index":4312,"title":{},"body":{"injectables/SessionsService.html":{}}}],["sortorder",{"_index":515,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/ForbiddenPage.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"components/NotFoundPage.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"index.html":{}}}],["source_extension",{"_index":3010,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["source_url",{"_index":807,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["space",{"_index":397,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["span",{"_index":441,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{}}}],["speak",{"_index":4703,"title":{},"body":{"injectables/TtsService.html":{}}}],["speaking",{"_index":4643,"title":{},"body":{"injectables/TtsService.html":{}}}],["specific",{"_index":1062,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["speech",{"_index":4639,"title":{},"body":{"injectables/TtsService.html":{}}}],["speechsynthesis",{"_index":4607,"title":{},"body":{"injectables/TtsService.html":{}}}],["speechsynthesisutterance",{"_index":4624,"title":{},"body":{"injectables/TtsService.html":{}}}],["speechsynthesisutterance(text",{"_index":4663,"title":{},"body":{"injectables/TtsService.html":{}}}],["speed",{"_index":4753,"title":{},"body":{"injectables/TypewriterService.html":{},"index.html":{}}}],["speed_multiplier",{"_index":3237,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["speeddisplay",{"_index":3210,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["speedmultiplier",{"_index":3201,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["spinner",{"_index":440,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{}}}],["src",{"_index":1539,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src.email",{"_index":1803,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src.limit",{"_index":1543,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src.page",{"_index":1540,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src.search",{"_index":1546,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/PaginatedApi-1.html":{}}}],["src.sector",{"_index":2854,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["src.sort_by",{"_index":1548,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src.sort_order",{"_index":1550,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src/.../agent",{"_index":4811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.server.ts",{"_index":4916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":4816,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":4925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":4910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":4912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../background.service.ts",{"_index":4902,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../chat",{"_index":4815,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../connection",{"_index":4903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.development.ts",{"_index":4917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../files.facade.ts",{"_index":4904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../guest.guard.ts",{"_index":4919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../language.service.ts",{"_index":4926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":4913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":4817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../playground",{"_index":4808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../register.ts",{"_index":4818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.guard.ts",{"_index":4922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":4909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sessions.service.ts",{"_index":4820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theme.service.ts",{"_index":4905,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../token",{"_index":4920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tokens.ts",{"_index":4907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2016,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts:66",{"_index":2020,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["src/app/app.routes.server.ts",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":1942,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:24",{"_index":1953,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:25",{"_index":1955,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:26",{"_index":1958,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:27",{"_index":1960,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:28",{"_index":1957,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:29",{"_index":1954,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:31",{"_index":1948,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:47",{"_index":1950,"title":{},"body":{"components/App.html":{}}}],["src/app/application/admin/admin",{"_index":6,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["src/app/application/auth/login.facade.ts",{"_index":3501,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/login.facade.ts:11",{"_index":3505,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/login.facade.ts:12",{"_index":3504,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/login.facade.ts:14",{"_index":3503,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/login.facade.ts:8",{"_index":3507,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/login.facade.ts:9",{"_index":3508,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["src/app/application/auth/register.facade.ts",{"_index":3668,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["src/app/application/auth/register.facade.ts:11",{"_index":3670,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["src/app/application/auth/register.facade.ts:6",{"_index":3674,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["src/app/application/auth/register.facade.ts:8",{"_index":3672,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["src/app/application/auth/register.facade.ts:9",{"_index":3671,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["src/app/application/chat/chat.facade.ts",{"_index":2607,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:100",{"_index":2630,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:114",{"_index":2641,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:128",{"_index":2637,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:132",{"_index":2648,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:139",{"_index":2647,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:143",{"_index":2644,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:147",{"_index":2653,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:159",{"_index":2638,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:164",{"_index":2662,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:26",{"_index":2664,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:27",{"_index":2676,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:30",{"_index":2675,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:32",{"_index":2672,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:33",{"_index":2669,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:34",{"_index":2667,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:37",{"_index":2679,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:40",{"_index":2673,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:41",{"_index":2670,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:42",{"_index":2677,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:44",{"_index":2657,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:47",{"_index":2639,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:50",{"_index":2632,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:53",{"_index":2650,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:58",{"_index":2655,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:61",{"_index":2659,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:66",{"_index":2645,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:72",{"_index":2636,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/chat/chat.facade.ts:86",{"_index":2634,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["src/app/application/files/files.facade.ts",{"_index":2968,"title":{},"body":{"injectables/FilesFacade.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/application/files/files.facade.ts:10",{"_index":2985,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:12",{"_index":2977,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:13",{"_index":2981,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:14",{"_index":2976,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:15",{"_index":2984,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:16",{"_index":2982,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:17",{"_index":2978,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:18",{"_index":2983,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:20",{"_index":2971,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:38",{"_index":2970,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:48",{"_index":2975,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:64",{"_index":2972,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:71",{"_index":2973,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/files/files.facade.ts:9",{"_index":2980,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["src/app/application/risk/risk.facade.ts",{"_index":3756,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:11",{"_index":3769,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:12",{"_index":3772,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:13",{"_index":3771,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:14",{"_index":3770,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:15",{"_index":3767,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:17",{"_index":3765,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:35",{"_index":3764,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:8",{"_index":3768,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/application/risk/risk.facade.ts:9",{"_index":3766,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["src/app/core/adapters/agent",{"_index":4822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/adapters/chat",{"_index":4827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/models/agent",{"_index":1885,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["src/app/core/models/app",{"_index":1991,"title":{},"body":{"interfaces/AppInfo.html":{}}}],["src/app/core/models/auth.ts",{"_index":3561,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["src/app/core/models/chat",{"_index":2326,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/kpi.ts",{"_index":3197,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["src/app/core/models/paginated.ts",{"_index":3629,"title":{},"body":{"interfaces/Paginated.html":{}}}],["src/app/core/models/pagination",{"_index":3630,"title":{},"body":{"interfaces/PaginatedApi.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/models/playground",{"_index":2096,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/models/session",{"_index":1901,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["src/app/core/models/stream.ts",{"_index":3914,"title":{},"body":{"interfaces/SSEMessageModel.html":{},"interfaces/StreamResponseModel.html":{}}}],["src/app/core/ports/admin",{"_index":765,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUsersPort.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["src/app/core/ports/app",{"_index":1992,"title":{},"body":{"interfaces/AppInfoPort.html":{}}}],["src/app/core/ports/auth.port.ts",{"_index":2160,"title":{},"body":{"interfaces/AuthPort.html":{}}}],["src/app/core/ports/auth.port.ts:10",{"_index":2166,"title":{},"body":{"interfaces/AuthPort.html":{}}}],["src/app/core/ports/auth.port.ts:11",{"_index":2169,"title":{},"body":{"interfaces/AuthPort.html":{}}}],["src/app/core/ports/auth.port.ts:12",{"_index":2163,"title":{},"body":{"interfaces/AuthPort.html":{}}}],["src/app/core/ports/chat",{"_index":2716,"title":{},"body":{"interfaces/ChatStreamPort.html":{}}}],["src/app/core/ports/companies.port.ts",{"_index":2840,"title":{},"body":{"interfaces/CompaniesPort.html":{},"interfaces/CompanyItem.html":{}}}],["src/app/core/ports/companies.port.ts:17",{"_index":2843,"title":{},"body":{"interfaces/CompaniesPort.html":{}}}],["src/app/core/ports/companies.port.ts:9",{"_index":2845,"title":{},"body":{"interfaces/CompaniesPort.html":{}}}],["src/app/core/ports/files.port.ts",{"_index":2996,"title":{},"body":{"interfaces/FilesPort.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/UploadedFileMeta.html":{}}}],["src/app/core/ports/files.port.ts:23",{"_index":3006,"title":{},"body":{"interfaces/FilesPort.html":{}}}],["src/app/core/ports/files.port.ts:28",{"_index":3000,"title":{},"body":{"interfaces/FilesPort.html":{}}}],["src/app/core/ports/files.port.ts:29",{"_index":3002,"title":{},"body":{"interfaces/FilesPort.html":{}}}],["src/app/core/ports/files.port.ts:36",{"_index":3004,"title":{},"body":{"interfaces/FilesPort.html":{}}}],["src/app/core/ports/kpis.port.ts",{"_index":3229,"title":{},"body":{"interfaces/KpisPort.html":{}}}],["src/app/core/ports/kpis.port.ts:4",{"_index":3230,"title":{},"body":{"interfaces/KpisPort.html":{}}}],["src/app/core/ports/risk",{"_index":3783,"title":{},"body":{"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsPort.html":{}}}],["src/app/core/ports/sessions.port.ts",{"_index":4209,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/ports/sessions.port.ts:10",{"_index":4217,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/ports/sessions.port.ts:14",{"_index":4215,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/ports/sessions.port.ts:15",{"_index":4221,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/ports/sessions.port.ts:25",{"_index":4213,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/ports/sessions.port.ts:6",{"_index":4219,"title":{},"body":{"interfaces/SessionsPort.html":{}}}],["src/app/core/tokens.ts",{"_index":4927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/core/use",{"_index":1193,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"injectables/CreateUserUseCase.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["src/app/infrastructure/guards/auth.guard.ts",{"_index":2150,"title":{},"body":{"injectables/AuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/guards/auth.guard.ts:7",{"_index":2154,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/infrastructure/guards/auth.guard.ts:8",{"_index":2153,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/infrastructure/guards/auth.guard.ts:9",{"_index":2152,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/infrastructure/guards/guest.guard.ts",{"_index":3113,"title":{},"body":{"injectables/GuestGuardService.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/guards/guest.guard.ts:7",{"_index":3116,"title":{},"body":{"injectables/GuestGuardService.html":{}}}],["src/app/infrastructure/guards/guest.guard.ts:8",{"_index":3115,"title":{},"body":{"injectables/GuestGuardService.html":{}}}],["src/app/infrastructure/guards/guest.guard.ts:9",{"_index":3114,"title":{},"body":{"injectables/GuestGuardService.html":{}}}],["src/app/infrastructure/guards/role.guard.ts",{"_index":3797,"title":{},"body":{"injectables/RoleGuardService.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/guards/role.guard.ts:10",{"_index":3800,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["src/app/infrastructure/guards/role.guard.ts:7",{"_index":3802,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["src/app/infrastructure/guards/role.guard.ts:8",{"_index":3801,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["src/app/infrastructure/interceptors/auth.interceptor.ts",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/infrastructure/services/admin",{"_index":1518,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["src/app/infrastructure/services/app",{"_index":2001,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["src/app/infrastructure/services/auth.service.ts",{"_index":2174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/auth.service.ts:16",{"_index":2179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/auth.service.ts:18",{"_index":2178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/auth.service.ts:20",{"_index":2176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/auth.service.ts:25",{"_index":2177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/auth.service.ts:35",{"_index":2175,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/infrastructure/services/background.service.ts",{"_index":2199,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/services/background.service.ts:101",{"_index":2248,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:120",{"_index":2222,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:127",{"_index":2236,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:13",{"_index":2238,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:132",{"_index":2223,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:14",{"_index":2245,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:15",{"_index":2242,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:16",{"_index":2250,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:17",{"_index":2240,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:18",{"_index":2247,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:19",{"_index":2243,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:20",{"_index":2252,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:22",{"_index":2253,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:24",{"_index":2220,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:42",{"_index":2226,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:48",{"_index":2231,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:54",{"_index":2228,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:60",{"_index":2233,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:67",{"_index":2219,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/background.service.ts:90",{"_index":2234,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["src/app/infrastructure/services/chat",{"_index":2493,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ChatUtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/infrastructure/services/companies.service.ts",{"_index":2848,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["src/app/infrastructure/services/companies.service.ts:16",{"_index":2852,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/app/infrastructure/services/companies.service.ts:17",{"_index":2851,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/app/infrastructure/services/companies.service.ts:19",{"_index":2850,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/app/infrastructure/services/companies.service.ts:60",{"_index":2849,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/app/infrastructure/services/connection",{"_index":2874,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/infrastructure/services/files.service.ts",{"_index":3014,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["src/app/infrastructure/services/files.service.ts:31",{"_index":3020,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/files.service.ts:32",{"_index":3019,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/files.service.ts:34",{"_index":3018,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/files.service.ts:54",{"_index":3015,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/files.service.ts:60",{"_index":3016,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/files.service.ts:85",{"_index":3017,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/app/infrastructure/services/kpis",{"_index":3214,"title":{},"body":{"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts",{"_index":3233,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:10",{"_index":3239,"title":{},"body":{"interfaces/KpisResponseDTO.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:16",{"_index":3275,"title":{},"body":{"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:17",{"_index":3273,"title":{},"body":{"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:19",{"_index":3274,"title":{},"body":{"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:20",{"_index":3276,"title":{},"body":{"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/kpis.service.ts:22",{"_index":3272,"title":{},"body":{"injectables/KpisService.html":{}}}],["src/app/infrastructure/services/language.service.ts",{"_index":3277,"title":{},"body":{"injectables/LanguageService.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/services/language.service.ts:10",{"_index":3299,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:11",{"_index":3298,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:13",{"_index":3286,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:26",{"_index":3287,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:38",{"_index":3285,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:42",{"_index":3297,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:49",{"_index":3289,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:53",{"_index":3295,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:62",{"_index":3292,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:69",{"_index":3294,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/language.service.ts:9",{"_index":3301,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/infrastructure/services/message",{"_index":3571,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["src/app/infrastructure/services/performance.service.ts",{"_index":3647,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["src/app/infrastructure/services/performance.service.ts:5",{"_index":3648,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["src/app/infrastructure/services/risk",{"_index":3785,"title":{},"body":{"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{}}}],["src/app/infrastructure/services/scroll",{"_index":3915,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["src/app/infrastructure/services/sessions",{"_index":4166,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts",{"_index":4222,"title":{},"body":{"injectables/SessionsService.html":{},"miscellaneous/functions.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:12",{"_index":4224,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:155",{"_index":4226,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:160",{"_index":4225,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:166",{"_index":4230,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:17",{"_index":4228,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:42",{"_index":4227,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sessions.service.ts:61",{"_index":4231,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/infrastructure/services/sse",{"_index":3813,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["src/app/infrastructure/services/theme.service.ts",{"_index":4500,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/services/theme.service.ts:10",{"_index":4532,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:11",{"_index":4529,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:12",{"_index":4530,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:14",{"_index":4512,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:20",{"_index":4523,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:27",{"_index":4525,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:34",{"_index":4510,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:41",{"_index":4513,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:45",{"_index":4509,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:65",{"_index":4524,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:78",{"_index":4518,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:86",{"_index":4520,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:87",{"_index":4521,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:88",{"_index":4519,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/theme.service.ts:9",{"_index":4527,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/infrastructure/services/token",{"_index":4566,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["src/app/infrastructure/services/tts.service.ts",{"_index":4589,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:10",{"_index":4623,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:11",{"_index":4634,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:12",{"_index":4632,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:13",{"_index":4630,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:14",{"_index":4629,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:148",{"_index":4613,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:158",{"_index":4617,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:16",{"_index":4616,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:168",{"_index":4620,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:179",{"_index":4619,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:187",{"_index":4609,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:221",{"_index":4622,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:231",{"_index":4612,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:5",{"_index":4625,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:6",{"_index":4633,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:8",{"_index":4627,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/tts.service.ts:9",{"_index":4626,"title":{},"body":{"injectables/TtsService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts",{"_index":4741,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:10",{"_index":4760,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:15",{"_index":4754,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:55",{"_index":4758,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:66",{"_index":4749,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:73",{"_index":4747,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/services/typewriter.service.ts:9",{"_index":4762,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["src/app/infrastructure/strategies/custom",{"_index":2927,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["src/app/presentation/components/chat/composer.component.ts",{"_index":2338,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:22",{"_index":2368,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:23",{"_index":2369,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:24",{"_index":2366,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:25",{"_index":2370,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:26",{"_index":2371,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:28",{"_index":2365,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:29",{"_index":2379,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:30",{"_index":2373,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:31",{"_index":2376,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:32",{"_index":2375,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:33",{"_index":2378,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:34",{"_index":2377,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:35",{"_index":2374,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:38",{"_index":2394,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:39",{"_index":2393,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:41",{"_index":2392,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:48",{"_index":2380,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:51",{"_index":2391,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:57",{"_index":2383,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:70",{"_index":2387,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:84",{"_index":2385,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/chat/composer.component.ts:96",{"_index":2389,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["src/app/presentation/components/companies/session",{"_index":3992,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["src/app/presentation/components/files/session",{"_index":4119,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts",{"_index":3120,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:25",{"_index":3135,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:26",{"_index":3137,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:27",{"_index":3136,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:28",{"_index":3138,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:30",{"_index":3149,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:32",{"_index":3142,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:37",{"_index":3151,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:41",{"_index":3153,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:45",{"_index":3155,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:50",{"_index":3144,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:55",{"_index":3147,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:61",{"_index":3141,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:67",{"_index":3139,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/header/header.component.ts:73",{"_index":3140,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/presentation/components/lazy",{"_index":3331,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["src/app/presentation/layouts/admin",{"_index":1613,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts",{"_index":4322,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:109",{"_index":4343,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:126",{"_index":4350,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:138",{"_index":4341,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:149",{"_index":4348,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:166",{"_index":4352,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:171",{"_index":4351,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:175",{"_index":4345,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:187",{"_index":4340,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:196",{"_index":4344,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:209",{"_index":4353,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:38",{"_index":4366,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:39",{"_index":4373,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:40",{"_index":4369,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:41",{"_index":4372,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:42",{"_index":4361,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:43",{"_index":4355,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:44",{"_index":4359,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:45",{"_index":4367,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:47",{"_index":4370,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:50",{"_index":4368,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:51",{"_index":4365,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:52",{"_index":4357,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:53",{"_index":4363,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:55",{"_index":4354,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:61",{"_index":4342,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/layouts/shell/shell.ts:67",{"_index":4346,"title":{},"body":{"components/ShellLayout.html":{}}}],["src/app/presentation/pages/admin/app",{"_index":134,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts",{"_index":590,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:24",{"_index":612,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:25",{"_index":613,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:27",{"_index":623,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:29",{"_index":638,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:30",{"_index":637,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:37",{"_index":620,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:43",{"_index":629,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:44",{"_index":625,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:45",{"_index":644,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:46",{"_index":640,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:47",{"_index":642,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:48",{"_index":610,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:49",{"_index":627,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:50",{"_index":621,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:52",{"_index":604,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:56",{"_index":606,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:60",{"_index":599,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:64",{"_index":603,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:68",{"_index":605,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:72",{"_index":609,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:76",{"_index":608,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/companies.ts:82",{"_index":601,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["src/app/presentation/pages/admin/company.ts",{"_index":831,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:18",{"_index":877,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:19",{"_index":879,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:20",{"_index":881,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:22",{"_index":882,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:23",{"_index":852,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:24",{"_index":856,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:25",{"_index":854,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:26",{"_index":861,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:31",{"_index":867,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:32",{"_index":850,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:34",{"_index":875,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:44",{"_index":848,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:52",{"_index":846,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:54",{"_index":857,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:59",{"_index":849,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/company.ts:76",{"_index":847,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["src/app/presentation/pages/admin/files.ts",{"_index":1078,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:105",{"_index":1095,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:114",{"_index":1099,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:22",{"_index":1102,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:24",{"_index":1112,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:25",{"_index":1105,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:26",{"_index":1109,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:27",{"_index":1106,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:28",{"_index":1107,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:29",{"_index":1110,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:30",{"_index":1108,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:32",{"_index":1104,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:34",{"_index":1093,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:49",{"_index":1091,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:58",{"_index":1092,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:74",{"_index":1097,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/files.ts:90",{"_index":1090,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts",{"_index":1330,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:103",{"_index":1360,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:109",{"_index":1365,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:137",{"_index":1361,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:141",{"_index":1366,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:166",{"_index":1356,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:184",{"_index":1358,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:213",{"_index":1368,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:34",{"_index":1373,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:35",{"_index":1371,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:37",{"_index":1398,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:38",{"_index":1388,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:39",{"_index":1375,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:40",{"_index":1394,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:47",{"_index":1382,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:48",{"_index":1380,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:49",{"_index":1372,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:51",{"_index":1385,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:52",{"_index":1379,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:53",{"_index":1405,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:54",{"_index":1384,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:57",{"_index":1404,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:58",{"_index":1403,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:60",{"_index":1362,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:64",{"_index":1363,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:69",{"_index":1369,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:78",{"_index":1359,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:81",{"_index":1364,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:84",{"_index":1353,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:89",{"_index":1396,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:90",{"_index":1377,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:92",{"_index":1402,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:94",{"_index":1400,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:95",{"_index":1378,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/admin/messages.ts:98",{"_index":1386,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["src/app/presentation/pages/auth/login.ts",{"_index":3521,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:28",{"_index":3532,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:29",{"_index":3531,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:30",{"_index":3536,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:32",{"_index":3535,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:37",{"_index":3538,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:38",{"_index":3529,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:39",{"_index":3537,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:41",{"_index":3528,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/login.ts:45",{"_index":3527,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/presentation/pages/auth/register.ts",{"_index":3704,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["src/app/presentation/pages/auth/register.ts:50",{"_index":3711,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:51",{"_index":3710,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:52",{"_index":3715,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:54",{"_index":3714,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:60",{"_index":3717,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:61",{"_index":3708,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:62",{"_index":3716,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:64",{"_index":3707,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/auth/register.ts:68",{"_index":3706,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/presentation/pages/forbidden/forbidden.ts",{"_index":3060,"title":{},"body":{"components/ForbiddenPage.html":{}}}],["src/app/presentation/pages/not",{"_index":3623,"title":{},"body":{"components/NotFoundPage.html":{}}}],["src/environments/environment.development.ts",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":4934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sse",{"_index":2687,"title":{},"body":{"injectables/ChatFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["ssemessage",{"_index":3812,"title":{"interfaces/SSEMessage.html":{}},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["ssemessagemodel",{"_index":3913,"title":{"interfaces/SSEMessageModel.html":{}},"body":{"interfaces/SSEMessageModel.html":{},"interfaces/StreamResponseModel.html":{}}}],["sseservice",{"_index":2079,"title":{"injectables/SseService.html":{}},"body":{"classes/AppTranslateLoader.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":2186,"title":{},"body":{"injectables/AuthService.html":{},"components/LazyChartComponent.html":{}}}],["stable",{"_index":3342,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["standalone",{"_index":142,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["start",{"_index":761,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminUsersFacade.html":{},"components/LazyChartComponent.html":{},"interfaces/SSEMessage.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{},"index.html":{}}}],["started",{"_index":4701,"title":{"index.html":{}},"body":{"injectables/TtsService.html":{}}}],["starttypewriter",{"_index":4745,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["starttypewriter(message",{"_index":4751,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["stat",{"_index":722,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["state",{"_index":1292,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"components/LoginPage.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["states",{"_index":1055,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"injectables/TtsService.html":{}}}],["static",{"_index":865,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["stats",{"_index":721,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{}}}],["stats.facade",{"_index":887,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["stats.facade.ts",{"_index":1743,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:10",{"_index":1752,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:12",{"_index":1758,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:13",{"_index":1756,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:14",{"_index":1757,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:16",{"_index":1755,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:17",{"_index":1753,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:18",{"_index":1754,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:20",{"_index":1747,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.facade.ts:34",{"_index":1750,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.port",{"_index":1760,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{}}}],["stats.port.ts",{"_index":766,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["stats.port.ts:61",{"_index":1778,"title":{},"body":{"classes/AdminStatsPort.html":{}}}],["stats.port.ts:62",{"_index":1777,"title":{},"body":{"classes/AdminStatsPort.html":{}}}],["stats.service",{"_index":1763,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["stats.service.ts",{"_index":1779,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["stats.service.ts:13",{"_index":1783,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["stats.service.ts:14",{"_index":1782,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["stats.service.ts:16",{"_index":1781,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["stats.service.ts:24",{"_index":1780,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["status",{"_index":1039,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/ConnectionStatusService.html":{},"injectables/SessionsService.html":{}}}],["status.service.ts",{"_index":2875,"title":{},"body":{"injectables/ConnectionStatusService.html":{},"miscellaneous/typealiases.html":{}}}],["status.service.ts:10",{"_index":2896,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:15",{"_index":2898,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:22",{"_index":2900,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:29",{"_index":2893,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:36",{"_index":2889,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:49",{"_index":2885,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["status.service.ts:62",{"_index":2882,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["statusclasses",{"_index":2914,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["statusclasses[this.currentstatus",{"_index":2918,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["statusmap",{"_index":2909,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["statusmap[this.currentstatus",{"_index":2913,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["sticky",{"_index":1710,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["still",{"_index":2762,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["stop",{"_index":4604,"title":{},"body":{"injectables/TtsService.html":{}}}],["stoptypewriter",{"_index":4746,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["storage",{"_index":1893,"title":{"interfaces/Storage.html":{}},"body":{"interfaces/AgentModel.html":{},"interfaces/Model.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{}}}],["storage.service",{"_index":1687,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/LoginFacade.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["storage.service.ts",{"_index":4567,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:13",{"_index":4575,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:20",{"_index":4578,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:25",{"_index":4574,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:32",{"_index":4573,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:38",{"_index":4576,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:8",{"_index":4580,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage_bg",{"_index":2258,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["storage_key",{"_index":3303,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["storage_neon",{"_index":2262,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["storage_pal",{"_index":2260,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["storage_prlx",{"_index":2264,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":4865,"title":{},"body":{"index.html":{}}}],["str",{"_index":2331,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"miscellaneous/typealiases.html":{}}}],["stream",{"_index":2594,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["stream.port.ts",{"_index":2717,"title":{},"body":{"interfaces/ChatStreamPort.html":{}}}],["stream.port.ts:16",{"_index":2719,"title":{},"body":{"interfaces/ChatStreamPort.html":{}}}],["stream.port.ts:5",{"_index":2721,"title":{},"body":{"interfaces/ChatStreamPort.html":{}}}],["streamfromagent",{"_index":2718,"title":{},"body":{"interfaces/ChatStreamPort.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["streamfromagent(_agentid",{"_index":4493,"title":{},"body":{"injectables/SseService.html":{}}}],["streamfromagent(agentid",{"_index":2720,"title":{},"body":{"interfaces/ChatStreamPort.html":{}}}],["streaming",{"_index":2337,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConnectionStatusService.html":{},"injectables/MessageManagerService.html":{},"injectables/ScrollManagerService.html":{},"miscellaneous/typealiases.html":{}}}],["streamingsessionid",{"_index":2536,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["streamresponse",{"_index":3819,"title":{"interfaces/StreamResponse.html":{}},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["streamresponsemodel",{"_index":2519,"title":{"interfaces/StreamResponseModel.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/StreamResponseModel.html":{}}}],["stretch",{"_index":760,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["string",{"_index":524,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(enabled",{"_index":2283,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["string(err).includes('aborted",{"_index":3909,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["string(src.limit",{"_index":1545,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["string(src.page",{"_index":1542,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["string[]).includes(l",{"_index":3326,"title":{},"body":{"injectables/LanguageService.html":{}}}],["strips",{"_index":2749,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["structure",{"_index":4469,"title":{},"body":{"components/ShellLayout.html":{}}}],["stuck",{"_index":4651,"title":{},"body":{"injectables/TtsService.html":{}}}],["style",{"_index":750,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/BackgroundService.html":{},"injectables/ChatUtilsService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["styles",{"_index":131,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["styleurl",{"_index":1620,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{}}}],["styleurls",{"_index":148,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["styling",{"_index":1063,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["suave",{"_index":3960,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["subcarpeta",{"_index":1171,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["subfolder",{"_index":1083,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["subidos",{"_index":1161,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["subiendo",{"_index":2995,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["subir",{"_index":118,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["subject",{"_index":3816,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SessionsEventsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["submit",{"_index":3525,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["submitting",{"_index":3524,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscription",{"_index":4761,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["subset",{"_index":4442,"title":{},"body":{"components/ShellLayout.html":{}}}],["subtitle",{"_index":300,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{}}}],["success",{"_index":427,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"injectables/ConnectionStatusService.html":{}}}],["such",{"_index":4860,"title":{},"body":{"index.html":{}}}],["sugeridas",{"_index":1002,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["suggested_actions",{"_index":1918,"title":{},"body":{"interfaces/AggregateInsights.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["suits",{"_index":4886,"title":{},"body":{"index.html":{}}}],["summary",{"_index":2145,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsService.html":{},"interfaces/VideoData.html":{}}}],["support",{"_index":2856,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"components/HeaderComponent.html":{}}}],["supported",{"_index":3279,"title":{},"body":{"injectables/LanguageService.html":{}}}],["surface",{"_index":2444,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["surface::before",{"_index":2448,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/ShellLayout.html":{}}}],["surface:hover",{"_index":2447,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["surfaces",{"_index":4467,"title":{},"body":{"components/ShellLayout.html":{}}}],["svg",{"_index":2746,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["swallow",{"_index":2069,"title":{},"body":{"classes/AppTranslateLoader.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":2539,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/LanguageService.html":{}}}],["switch(lang",{"_index":3296,"title":{},"body":{"injectables/LanguageService.html":{}}}],["switchlang",{"_index":1639,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["switchlang(lang",{"_index":1661,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["switchmap",{"_index":4232,"title":{},"body":{"injectables/SessionsService.html":{}}}],["switchmap((resp",{"_index":4304,"title":{},"body":{"injectables/SessionsService.html":{}}}],["synth",{"_index":4610,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.addeventlistener?.('voiceschanged",{"_index":4734,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.cancel",{"_index":4652,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.getvoices",{"_index":4676,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.getvoices().length",{"_index":4661,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.paused",{"_index":4648,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.removeeventlistener?.('voiceschanged",{"_index":4733,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.resume",{"_index":4713,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.speak",{"_index":4707,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.speak(utter",{"_index":4708,"title":{},"body":{"injectables/TtsService.html":{}}}],["synth.speaking",{"_index":4644,"title":{},"body":{"injectables/TtsService.html":{}}}],["synthesis",{"_index":4640,"title":{},"body":{"injectables/TtsService.html":{}}}],["system",{"_index":1659,"title":{},"body":{"components/AdminShellLayout.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"injectables/MessageManagerService.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/ThemeService.html":{},"interfaces/VideoData.html":{},"miscellaneous/typealiases.html":{}}}],["systemmessage",{"_index":3605,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["t",{"_index":1509,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"classes/AppTranslateLoader.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/SessionsService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4041,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["tabindex]:not([tabindex",{"_index":4047,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["table",{"_index":719,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["tag",{"_index":714,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["tag.active",{"_index":716,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["tag:hover",{"_index":715,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["tags",{"_index":713,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/ChatUtilsService.html":{}}}],["tailwind",{"_index":4441,"title":{},"body":{"components/ShellLayout.html":{},"injectables/ThemeService.html":{}}}],["tailwindcss/postcss",{"_index":4794,"title":{},"body":{"dependencies.html":{}}}],["tax",{"_index":740,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{}}}],["tax_id",{"_index":532,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/AggregateInsights.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["taxid",{"_index":602,"title":{},"body":{"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["td",{"_index":736,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["template",{"_index":130,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["templates",{"_index":4515,"title":{},"body":{"injectables/ThemeService.html":{}}}],["templateurl",{"_index":150,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["tempranas",{"_index":1010,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["tener",{"_index":3689,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["test",{"_index":4874,"title":{},"body":{"index.html":{}}}],["testing",{"_index":4880,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":4878,"title":{},"body":{"index.html":{}}}],["tests",{"_index":4872,"title":{},"body":{"index.html":{}}}],["text",{"_index":273,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{},"miscellaneous/typealiases.html":{}}}],["text.length",{"_index":4638,"title":{},"body":{"injectables/TtsService.html":{}}}],["text.substring(0",{"_index":4636,"title":{},"body":{"injectables/TtsService.html":{}}}],["text.trim().length",{"_index":4641,"title":{},"body":{"injectables/TtsService.html":{}}}],["text/event",{"_index":3837,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["textarea",{"_index":2449,"title":{},"body":{"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["textarea::placeholder",{"_index":2454,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["textarea:focus::placeholder",{"_index":2455,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["textdecoder('utf",{"_index":3858,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["textlength",{"_index":4637,"title":{},"body":{"injectables/TtsService.html":{}}}],["texto",{"_index":2890,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["th",{"_index":728,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["th.actions",{"_index":729,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["thead",{"_index":727,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["theme",{"_index":1629,"title":{},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"components/HeaderComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/typealiases.html":{}}}],["themeservice",{"_index":1691,"title":{"injectables/ThemeService.html":{}},"body":{"components/AdminShellLayout.html":{},"components/App.html":{},"injectables/ThemeService.html":{}}}],["then((profile",{"_index":2066,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["then(async",{"_index":3848,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["think",{"_index":1426,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["thinks",{"_index":1440,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["thinks.map((t",{"_index":1468,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["thinks.push(inner",{"_index":1447,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this._bg",{"_index":2291,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._bg.asreadonly",{"_index":2244,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._bg.set(style",{"_index":2276,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._neon",{"_index":2297,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._neon.asreadonly",{"_index":2246,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._neon.set(enabled",{"_index":2281,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._palette",{"_index":2294,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._palette.asreadonly",{"_index":2249,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._palette.set(p",{"_index":2279,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._parallax",{"_index":2307,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._parallax.asreadonly",{"_index":2251,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._parallax.set(enabled",{"_index":2284,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this._theme",{"_index":4540,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._theme.asreadonly",{"_index":4531,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._theme.set(t",{"_index":4537,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.abortcontroller",{"_index":3827,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.abortcontroller.abort",{"_index":3828,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.addmessage(messages",{"_index":3604,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.allowupload",{"_index":2417,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.analyze.execute(this.sessionid).subscribe",{"_index":4029,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["this.api.getcompanydashboard(taxid",{"_index":1770,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.api.getoverview(days",{"_index":1765,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.appinfo.getappinfo",{"_index":86,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/GetAppInfoUseCase.html":{}}}],["this.appinfo.updateappinfo",{"_index":102,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.appinfo.updateappinfo(payload",{"_index":4774,"title":{},"body":{"injectables/UpdateAppInfoUseCase.html":{}}}],["this.applybodyclasses",{"_index":2278,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.applyfilters",{"_index":1149,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.applytheme",{"_index":4538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.auth.getprofile(token",{"_index":3108,"title":{},"body":{"injectables/GetProfileUseCase.html":{}}}],["this.auth.login(payload",{"_index":3570,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["this.auth.register(payload",{"_index":3754,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["this.baseurl}/agent/message/stream",{"_index":3833,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.base}/admin/stats/company/${encodeuricomponent(taxid",{"_index":1786,"title":{},"body":{"injectables/AdminStatsService.html":{}}}],["this.base}/admin/stats/kpis",{"_index":3246,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.base}/admin/stats/overview",{"_index":1784,"title":{},"body":{"injectables/AdminStatsService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.base}/agent/message",{"_index":4259,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/messages",{"_index":4263,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions",{"_index":1537,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{},"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/${payload.session_id}/message",{"_index":4266,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/${payload.session_id}/messages",{"_index":4265,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/${sessionid",{"_index":4308,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/${sessionid}/companies/analysis",{"_index":4310,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/${sessionid}/messages",{"_index":1561,"title":{},"body":{"injectables/AdminMessagesService.html":{},"interfaces/PaginatedApi-1.html":{},"injectables/SessionsService.html":{}}}],["this.base}/agent/sessions/messages",{"_index":4264,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.base}/app",{"_index":2012,"title":{},"body":{"injectables/AppInfoService.html":{}}}],["this.base}/auth/login",{"_index":2189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.base}/auth/me",{"_index":2194,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.base}/auth/register",{"_index":1814,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["this.base}/companies",{"_index":2853,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["this.base}/companies/${ruc",{"_index":2873,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{}}}],["this.base}/files",{"_index":3035,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["this.base}/files/${fileid}/meta",{"_index":3045,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["this.base}/files/session/${encodeuricomponent(sessionid",{"_index":3059,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["this.base}/metrics/kpis",{"_index":3221,"title":{},"body":{"injectables/KpisApiService.html":{}}}],["this.base}/risk/weights/active",{"_index":3787,"title":{},"body":{"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{}}}],["this.base}/risk/weights/upsert",{"_index":3788,"title":{},"body":{"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{}}}],["this.base}/users",{"_index":1799,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["this.base}/users/${userid",{"_index":1809,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["this.bg.init",{"_index":3162,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShellLayout.html":{}}}],["this.cache",{"_index":3242,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.cancel$.next",{"_index":3829,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.cancel.emit",{"_index":2413,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.cancelbtn?.nativeelement",{"_index":4425,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.cancelbtn?.nativeelement?.focus",{"_index":4421,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.canvasref?.nativeelement",{"_index":3398,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.cdr.markforcheck",{"_index":4404,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.chart",{"_index":904,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.chart?.destroy",{"_index":917,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.chartctor",{"_index":3411,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.chartctor(canvas",{"_index":3414,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.chartinstance",{"_index":3409,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.chartinstance.destroy",{"_index":3479,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.chartinstance.resize",{"_index":3428,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.charttype",{"_index":3400,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.chatfacade.adderrormessage",{"_index":2603,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatfacade.addsystemmessage",{"_index":2551,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatfacade.createbotmessage",{"_index":2562,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatfacade.deletesession(s.session_id).subscribe",{"_index":4415,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.chatfacade.setissending(false",{"_index":2597,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatfacade.settoolrunning(false",{"_index":2592,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatfacade.settoolrunning(true",{"_index":2556,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatstream.cancel",{"_index":3991,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["this.chatstream.streamfromagent(agentid",{"_index":3990,"title":{},"body":{"classes/SendMessageUseCase.html":{}}}],["this.chatutils.cleanformarkdown(main",{"_index":1467,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.chatutils.cleanformarkdown(message.content",{"_index":1459,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.chatutils.cleanformarkdown(t",{"_index":1469,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.chatutils.createbotmessage(runid",{"_index":3609,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.createsystemmessage",{"_index":3607,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.createsystemmessage(content",{"_index":3606,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.createusermessage(content",{"_index":3603,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.generateid",{"_index":2564,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.chatutils.isbotmessage(m)).length",{"_index":3620,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.iserrormessage(m)).length",{"_index":3622,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.issystemmessage(m)).length",{"_index":3621,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.chatutils.isusermessage(m)).length",{"_index":3619,"title":{},"body":{"injectables/MessageManagerService.html":{}}}],["this.closebtn?.nativeelement?.focus",{"_index":4037,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["this.closed.emit",{"_index":4036,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["this.closedeletemodal",{"_index":4416,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.closerepos",{"_index":3186,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.companiesmodal$.asobservable",{"_index":4206,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.companiesmodal$.next",{"_index":4207,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.company()?.metrics",{"_index":859,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.company.set(res",{"_index":1771,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.companyerror.set(e?.message",{"_index":1772,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.companyerror.set(null",{"_index":1769,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.companyloading",{"_index":871,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/AdminStatsFacade.html":{}}}],["this.companyloading.set(false",{"_index":1773,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.companyloading.set(true",{"_index":1768,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.confirmbtn?.nativeelement",{"_index":4426,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.connectionstatus$.asobservable",{"_index":2906,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["this.connectionstatus$.complete",{"_index":2920,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["this.connectionstatus$.next(status",{"_index":2908,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["this.connectionstatus$.value",{"_index":2907,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["this.connectionstatus.setstatus('error",{"_index":2595,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.connectionstatus.setstatus('idle",{"_index":2606,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.connectionstatus.setstatus('streaming",{"_index":2538,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.createuc.execute(payload",{"_index":1864,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.creating",{"_index":1862,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.creating.set(false",{"_index":1868,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.creating.set(true",{"_index":1863,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.currentmessageid.set(messageid",{"_index":4689,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.currentmessageid.set(null",{"_index":4693,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.currentutterance",{"_index":4688,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.currentutterance.volume",{"_index":4727,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.data",{"_index":3415,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.data.set(d",{"_index":4030,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["this.data.set(res",{"_index":1766,"title":{},"body":{"injectables/AdminStatsFacade.html":{}}}],["this.defaultspeed",{"_index":4757,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["this.deletesessionuc.execute(this.agentid",{"_index":2708,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.deleteuc.execute(userid",{"_index":1870,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.destroychart",{"_index":874,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.dragcounter",{"_index":2424,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.dragging",{"_index":2425,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.drawfallback(canvas",{"_index":3399,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.effective",{"_index":4543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.enrichcurrentmessage(ctx",{"_index":2570,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.ensurelib",{"_index":3410,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.ensurevoices(synth",{"_index":4659,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.error.set('la",{"_index":3733,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.error.set(e?.error?.detail",{"_index":1865,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.error.set(e?.error?.message",{"_index":3519,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["this.error.set(e?.message",{"_index":91,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/FilesFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["this.error.set(errormessage",{"_index":3703,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["this.error.set(null",{"_index":99,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{}}}],["this.extractthinkblocks(content",{"_index":1462,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.applysearch(this.form.value.search?.trim",{"_index":657,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.applysessionssearch(q",{"_index":1422,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.error",{"_index":165,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.facade.form",{"_index":169,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.getcacheduserlabel.bind(this.facade",{"_index":1374,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.items",{"_index":622,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.limit",{"_index":624,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["this.facade.load",{"_index":187,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.loaded",{"_index":171,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.loading",{"_index":626,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.facade.loadsessions",{"_index":1417,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.login",{"_index":3542,"title":{},"body":{"components/LoginPage.html":{}}}],["this.facade.messages",{"_index":1381,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.msgtotal",{"_index":1383,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.nextpage",{"_index":658,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.nextsessionspage",{"_index":1420,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.open(sessionid",{"_index":1418,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.page",{"_index":628,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["this.facade.prevpage",{"_index":659,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.prevsessionspage",{"_index":1421,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.refresh",{"_index":656,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.register",{"_index":3736,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.facade.resolveuser(userid",{"_index":1419,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.save",{"_index":188,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.saved",{"_index":173,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.saving",{"_index":175,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.selected",{"_index":1387,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.sessions",{"_index":1397,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.facade.setsector(next",{"_index":663,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.setsort(field",{"_index":660,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.sortby",{"_index":639,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.sortorder",{"_index":641,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.facade.total",{"_index":643,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["this.facade.uploadicon(file",{"_index":193,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.uploadingicon",{"_index":177,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.uploadinglogo",{"_index":179,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.facade.uploadlogo(file",{"_index":195,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["this.fb.group",{"_index":52,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminCompaniesPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.fb.record",{"_index":1585,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.files.list",{"_index":1139,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.files.list(params",{"_index":3488,"title":{},"body":{"injectables/ListFilesUseCase.html":{}}}],["this.files.listbysession(sessionid",{"_index":3491,"title":{},"body":{"injectables/ListSessionFilesUseCase.html":{}}}],["this.files.set(items",{"_index":4138,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["this.files.upload",{"_index":114,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.files.upload(file",{"_index":4782,"title":{},"body":{"injectables/UploadFileUseCase.html":{}}}],["this.filesmodal$.asobservable",{"_index":4202,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.filesmodal$.next",{"_index":4205,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.form.get('password')?.errors",{"_index":3732,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":95,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.patchvalue",{"_index":116,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.form.patchvalue(info",{"_index":87,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.form.patchvalue(res",{"_index":105,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.form.value",{"_index":103,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.form.value.email",{"_index":3543,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value.password",{"_index":3544,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value.username",{"_index":3731,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form?.valid",{"_index":2411,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.generateid",{"_index":2820,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["this.genid",{"_index":2704,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.getactive.execute",{"_index":1595,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.getinfo.execute",{"_index":1969,"title":{},"body":{"components/App.html":{}}}],["this.getprocessed(message",{"_index":1477,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.getprofileuc.execute(t",{"_index":1718,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.getsavedsidebarstate",{"_index":4388,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.getsessionuc.execute(this.agentid",{"_index":2707,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.gettoken",{"_index":4588,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["this.handleruncompleted(ctx",{"_index":2555,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.handlerunresponse(ctx",{"_index":2550,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.height",{"_index":3441,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.http.delete(url",{"_index":4309,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.http.get(dedicatedurl",{"_index":3248,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.http.get(overviewurl",{"_index":3250,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.http.get(url",{"_index":1785,"title":{},"body":{"injectables/AdminStatsService.html":{},"injectables/AuthService.html":{},"injectables/SessionsService.html":{}}}],["this.http.get(url).pipe",{"_index":2013,"title":{},"body":{"injectables/AppInfoService.html":{},"injectables/SessionsService.html":{}}}],["this.http.get>(url",{"_index":1805,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["this.http.post(`${this.baseurl}/risk/analysis/pdf",{"_index":3780,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.http.post(`${this.baseurl}/risk/analysis/text",{"_index":3774,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.http.post(url",{"_index":3041,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"injectables/SessionsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["this.info",{"_index":1968,"title":{},"body":{"components/App.html":{}}}],["this.info?.site_icon",{"_index":1976,"title":{},"body":{"components/App.html":{}}}],["this.info?.site_logo",{"_index":1977,"title":{},"body":{"components/App.html":{}}}],["this.info?.site_name",{"_index":1971,"title":{},"body":{"components/App.html":{}}}],["this.init",{"_index":3404,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.inputtext",{"_index":3775,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.inputtext().trim",{"_index":3773,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.io",{"_index":1433,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["this.io.disconnect",{"_index":1434,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{}}}],["this.io.observe(canvas",{"_index":3406,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.io?.disconnect",{"_index":3403,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.isbrowser",{"_index":3396,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.isdesktop",{"_index":4394,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.ismobile",{"_index":1705,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.isopen",{"_index":3180,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isopenchange.emit(!this.isopen",{"_index":3177,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isopenchange.emit(false",{"_index":3181,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ispaused",{"_index":4721,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.ispaused.set(false",{"_index":4691,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.ispaused.set(true",{"_index":4698,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.issending",{"_index":2410,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.issending.set(v",{"_index":2698,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.issidebaropen",{"_index":4382,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.isspeaking",{"_index":4720,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.isspeaking.set(false",{"_index":4692,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.isspeaking.set(true",{"_index":4690,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.issupported(browser",{"_index":3314,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.issupported(lang",{"_index":3322,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.issupported(saved",{"_index":3313,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.isuploadingfiles",{"_index":2409,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.items",{"_index":617,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.items.set(res.items",{"_index":569,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{}}}],["this.kpis.getkpis",{"_index":3099,"title":{},"body":{"injectables/GetKpisUseCase.html":{}}}],["this.lang",{"_index":4665,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.lang().tolowercase",{"_index":4678,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.lang.init",{"_index":1966,"title":{},"body":{"components/App.html":{}}}],["this.lastfocused",{"_index":4419,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.lastfocused?.focus",{"_index":4423,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.lastlang",{"_index":3315,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.lastsessionid",{"_index":3863,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.limit",{"_index":561,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["this.list",{"_index":1126,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.listcompanies.execute",{"_index":559,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["this.listfilesuc.execute",{"_index":2988,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["this.listfilesuc.execute(params",{"_index":2990,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["this.listmessagesuc.execute(sessionid",{"_index":1311,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.listmessagesuc.execute(this.selected",{"_index":1328,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.listsessionfiles.execute(this.sessionid",{"_index":4137,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["this.listsessionsuc.execute",{"_index":1299,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.listsessionsuc.execute(this.agentid",{"_index":2706,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.listuc.execute",{"_index":1860,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.load",{"_index":2994,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["this.loaded.set(true",{"_index":88,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["this.loadfiles",{"_index":4136,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["this.loading",{"_index":1764,"title":{},"body":{"injectables/AdminStatsFacade.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{}}}],["this.loading.set(false",{"_index":573,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["this.loading.set(true",{"_index":558,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminStatsFacade.html":{},"injectables/FilesFacade.html":{},"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"injectables/RiskFacade.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["this.loadingpromise",{"_index":3243,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["this.loadprofileifauthenticated",{"_index":1697,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.loadsessions",{"_index":1317,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.location.replacestate(`/chat/session/${raw.session_id",{"_index":2575,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.location.replacestate(`/chat/session/${sid",{"_index":2546,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.loginuc.execute(payload",{"_index":3511,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["this.mapmessagestochats(items",{"_index":4249,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.media",{"_index":4558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.media.addeventlistener?.('change",{"_index":4563,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.media.removeeventlistener?.('change",{"_index":4562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.medialistener",{"_index":4561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.messagemanager.completemessage(ctx.currentmessage",{"_index":2598,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.messages()?.length",{"_index":1438,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.messages.set",{"_index":2694,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.messages.set(list",{"_index":2693,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.messages.set(res.items",{"_index":1314,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.messages.update((arr",{"_index":1329,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"injectables/ChatFacade.html":{}}}],["this.metrickeys",{"_index":870,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.metricschartref?.nativeelement",{"_index":895,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.modalroot?.nativeelement",{"_index":4042,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["this.modalroot?.nativeelement.queryselector('button",{"_index":4146,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["this.msglimit",{"_index":1313,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.msgpage",{"_index":1312,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.msgpage.set(1",{"_index":1310,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.msgpage.update((p",{"_index":1327,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.msgtotal",{"_index":1326,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["this.msgtotal.set(res.total",{"_index":1315,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.nexttick",{"_index":4706,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.observe",{"_index":3401,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.offset",{"_index":1140,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.offset.set(0",{"_index":1145,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.offset.update((o",{"_index":1143,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.onpointermove",{"_index":2305,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.options",{"_index":3416,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.page",{"_index":560,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["this.page.set(1",{"_index":575,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.page.update((p",{"_index":580,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["this.pendingdelete",{"_index":4414,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.persistsidebarstate",{"_index":4384,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.pitch",{"_index":4669,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.port.create(payload",{"_index":2926,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["this.port.delete(userid",{"_index":2967,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["this.port.getactive",{"_index":3074,"title":{},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{}}}],["this.port.getbyruc(ruc",{"_index":3089,"title":{},"body":{"injectables/GetCompanyByRucUseCase.html":{}}}],["this.port.list(params",{"_index":3483,"title":{},"body":{"injectables/ListCompaniesUseCase.html":{},"injectables/ListUsersUseCase.html":{}}}],["this.port.listmessages(sessionid",{"_index":1211,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{}}}],["this.port.listsessions(params",{"_index":1219,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{}}}],["this.port.update(userid",{"_index":4776,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["this.port.upsert(version",{"_index":4784,"title":{},"body":{"injectables/UpsertRiskWeightsUseCase.html":{}}}],["this.prefersdark",{"_index":4542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.preparecanvas(canvas",{"_index":3413,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.processed.get(id",{"_index":1460,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.processed.set(id",{"_index":1471,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.profileemail",{"_index":1715,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profileemail.set(profile.email",{"_index":1719,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profileloading",{"_index":1727,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profileloading.set(false",{"_index":1724,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profileloading.set(true",{"_index":1717,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profilemenuopen.update((v",{"_index":1728,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.profilerole.set(profile.role",{"_index":1721,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.raf",{"_index":2311,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.rate",{"_index":4667,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.readls(storage_bg",{"_index":2266,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.readls(storage_neon",{"_index":2269,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.readls(storage_pal",{"_index":2268,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.readls(storage_prlx",{"_index":2271,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.refresh",{"_index":576,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.refresh$.asobservable",{"_index":4200,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.refresh$.next",{"_index":4201,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.registeruc.execute(payload",{"_index":3677,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["this.removeuploadedfile.emit(file",{"_index":2416,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.renderchart",{"_index":873,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.resolveuser(id",{"_index":1307,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.resultpdf.set(result",{"_index":3781,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.resulttext.set(result",{"_index":3776,"title":{},"body":{"injectables/RiskFacade.html":{}}}],["this.ro",{"_index":3427,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.ro.disconnect",{"_index":3480,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.ro.observe(canvas.parentelement",{"_index":3429,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.route.parammap.subscribe(async",{"_index":888,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.router.events.subscribe((ev",{"_index":1711,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["this.router.navigate(['/admin/companies",{"_index":893,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.router.navigatebyurl",{"_index":3117,"title":{},"body":{"injectables/GuestGuardService.html":{}}}],["this.router.navigatebyurl('/forbidden",{"_index":3809,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["this.router.navigatebyurl('/home",{"_index":3545,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1726,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"components/RegisterPage.html":{}}}],["this.safedoc",{"_index":2287,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.safedocument",{"_index":4544,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.safelocalstorageget(storage_key",{"_index":4535,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.safelocalstorageget(storage_key)?.tolowercase",{"_index":3311,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.safelocalstorageset(storage_key",{"_index":3324,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["this.safenavigatorlang",{"_index":3312,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.saved.set(false",{"_index":100,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.saved.set(true",{"_index":106,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.saving",{"_index":96,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.saving.set(false",{"_index":109,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["this.saving.set(true",{"_index":98,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{}}}],["this.scrollmanager.schedulescrolltobottom",{"_index":2558,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.scrolltobottom(container",{"_index":3963,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["this.search",{"_index":562,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.search.set(value.trim",{"_index":574,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.sector",{"_index":564,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["this.sector.set((value",{"_index":577,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{}}}],["this.selected",{"_index":1389,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.selected.set(sessionid",{"_index":1309,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.selectedsector",{"_index":615,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.selectedsector.set(next",{"_index":662,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["this.send.emit",{"_index":2412,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["this.sendmessageuc.cancel",{"_index":2711,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.sendmessageuc.execute(this.agentid",{"_index":2710,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.sentinel",{"_index":1435,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.sessionid",{"_index":4028,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["this.sessions",{"_index":1322,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["this.sessions().length",{"_index":1320,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.sessions()?.length",{"_index":1439,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.sessions.analyzecompanies('default",{"_index":1941,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{}}}],["this.sessions.deletesession(agentid",{"_index":2962,"title":{},"body":{"classes/DeleteSessionUseCase.html":{}}}],["this.sessions.getsession(agentid",{"_index":3111,"title":{},"body":{"classes/GetSessionUseCase.html":{}}}],["this.sessions.getsessions(agentid",{"_index":3495,"title":{},"body":{"classes/ListSessionsUseCase.html":{}}}],["this.sessions.sendmessage(agentid",{"_index":3977,"title":{},"body":{"classes/SendMessageRestUseCase.html":{}}}],["this.sessions.set(array.from(map.values",{"_index":1324,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.sessions.set(res.items",{"_index":1300,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.sessionsevents.onsidebarcontrol().subscribe((event",{"_index":4399,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.sessionsevents.opencompaniesmodal(this.selectedsessionid",{"_index":4431,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.sessionsevents.openfilesmodal(this.selectedsessionid",{"_index":4430,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.sessionsevents.triggerrefresh",{"_index":2547,"title":{},"body":{"injectables/ChatEventsService.html":{},"components/ShellLayout.html":{}}}],["this.sessionsport",{"_index":2666,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.setbackground",{"_index":2272,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.setfavicon(icon",{"_index":1979,"title":{},"body":{"components/App.html":{}}}],["this.setneonedges(neon",{"_index":2274,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.setpalette",{"_index":2273,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.setparallax(prlx",{"_index":2275,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.settheme(next",{"_index":4541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(t",{"_index":4536,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setupio",{"_index":1431,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.setupiosessions",{"_index":1432,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["this.setupparallaxlistener",{"_index":2286,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.setupresize(canvas",{"_index":3418,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["this.setupsystemlistener",{"_index":4539,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.shouldscrolltobottom",{"_index":3962,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["this.showpassword.set(!this.showpassword",{"_index":3540,"title":{},"body":{"components/LoginPage.html":{}}}],["this.sidebarcollapsed",{"_index":1733,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.sidebarcollapsed.set(saved",{"_index":1707,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.sidebarcollapsed.set(true",{"_index":1706,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.sidebarcollapsed.update((v",{"_index":1729,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.sidebarcontrol$.asobservable",{"_index":4208,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.sidebarcontrol$.next",{"_index":4203,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["this.sidebarstatebeforemodal",{"_index":4403,"title":{},"body":{"components/ShellLayout.html":{}}}],["this.sortby",{"_index":566,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.sortby.set(field",{"_index":586,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.sortorder",{"_index":568,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.sortorder.set('asc",{"_index":587,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.sortorder.set('desc",{"_index":1325,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.sortorder.update((o",{"_index":582,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{}}}],["this.stats.company",{"_index":851,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.stats.companyerror",{"_index":853,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.stats.companyloading",{"_index":855,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.stats.loadcompany(id",{"_index":892,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.stoptypewriter",{"_index":4768,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["this.subfolder",{"_index":1142,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.submitting",{"_index":3541,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.supported",{"_index":3325,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.taxid.set(id",{"_index":891,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["this.theme.init",{"_index":1967,"title":{},"body":{"components/App.html":{}}}],["this.title.settitle(name",{"_index":1974,"title":{},"body":{"components/App.html":{}}}],["this.token.getrole",{"_index":3807,"title":{},"body":{"injectables/RoleGuardService.html":{}}}],["this.token.gettoken",{"_index":1716,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["this.token.isauthenticated",{"_index":1714,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{}}}],["this.token.setrole(res.user.role",{"_index":3518,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["this.token.settoken(res.token.access_token",{"_index":3516,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["this.tokenstorage.gettoken",{"_index":3839,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["this.toolrunning.set(v",{"_index":2699,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.total",{"_index":579,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["this.total.set(res.total",{"_index":570,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminUsersFacade.html":{},"injectables/FilesFacade.html":{}}}],["this.translate.addlangs(this.supported",{"_index":3305,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(lang",{"_index":3316,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.lastlang",{"_index":3323,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.type",{"_index":2989,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["this.type_file",{"_index":1141,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.type_file.set(v",{"_index":1148,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.typewriter.completemessage(msg",{"_index":2591,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.typewriter.isactive",{"_index":2568,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.typewriter.starttypewriter",{"_index":2569,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.typewriter.stoptypewriter",{"_index":2596,"title":{},"body":{"injectables/ChatEventsService.html":{}}}],["this.typewritersubscription",{"_index":4765,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["this.updateuc.execute(userid",{"_index":1869,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.uploadfileuc.execute(f",{"_index":2714,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["this.uploadfileuc.execute(file",{"_index":2993,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["this.uploadingicon.set(false",{"_index":121,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.uploadingicon.set(true",{"_index":112,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.uploadinglogo.set(false",{"_index":124,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.uploadinglogo.set(true",{"_index":122,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["this.upsert.execute(this.version",{"_index":1611,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.usercache.get(userid",{"_index":1296,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.usercache.set(userid",{"_index":1298,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.users.getcacheduserlabel.bind(this.users",{"_index":1103,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.users.resolveuser(id",{"_index":1138,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.users.resolveuser(userid",{"_index":1154,"title":{},"body":{"components/AdminFilesPage.html":{}}}],["this.users.set(res.items",{"_index":1861,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["this.usersport.get(userid",{"_index":1297,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["this.version.set((res",{"_index":1597,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.version.set(input.valueasnumber",{"_index":1609,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.voicesready",{"_index":4728,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.volume",{"_index":4671,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.volume.set(v",{"_index":4726,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.waitforidle(synth",{"_index":4653,"title":{},"body":{"injectables/TtsService.html":{}}}],["this.weights",{"_index":1604,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.weights.getrawvalue",{"_index":1610,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.weights.patchvalue(res.weights",{"_index":1599,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["this.writels(storage_bg",{"_index":2277,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.writels(storage_neon",{"_index":2282,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.writels(storage_pal",{"_index":2280,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["this.writels(storage_prlx",{"_index":2285,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["threshold",{"_index":3405,"title":{},"body":{"components/LazyChartComponent.html":{},"injectables/ScrollManagerService.html":{}}}],["through",{"_index":4472,"title":{},"body":{"components/ShellLayout.html":{}}}],["throw",{"_index":3520,"title":{},"body":{"injectables/LoginFacade.html":{},"injectables/RegisterFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["thumb",{"_index":4158,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["thumb::after",{"_index":4159,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["tick",{"_index":3970,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["tienes",{"_index":3064,"title":{},"body":{"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{}}}],["til",{"_index":4514,"title":{},"body":{"injectables/ThemeService.html":{}}}],["time",{"_index":2038,"title":{},"body":{"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/variables.html":{}}}],["timedisplay",{"_index":3213,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["timeoutms",{"_index":4608,"title":{},"body":{"injectables/TtsService.html":{}}}],["timeseries",{"_index":789,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["timeseriespoint",{"_index":783,"title":{"interfaces/TimeSeriesPoint.html":{}},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["timestamp",{"_index":2336,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/Kpis.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/MessageManagerService.html":{},"miscellaneous/functions.html":{}}}],["tipo",{"_index":931,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/ChatUtilsService.html":{}}}],["title",{"_index":272,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"components/App.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsService.html":{},"interfaces/VideoData.html":{}}}],["todos",{"_index":1158,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/MessageManagerService.html":{},"injectables/SessionsService.html":{}}}],["toepochseconds",{"_index":4819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toepochseconds(s.created_at",{"_index":4242,"title":{},"body":{"injectables/SessionsService.html":{}}}],["toepochseconds(s.updated_at",{"_index":4243,"title":{},"body":{"injectables/SessionsService.html":{}}}],["toepochseconds(value",{"_index":4318,"title":{},"body":{"injectables/SessionsService.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":1465,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/HeaderComponent.html":{},"injectables/ThemeService.html":{}}}],["togglemenu",{"_index":3126,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggleprofilemenu",{"_index":1640,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["toggleprofilemenu(event",{"_index":1665,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["togglerepos",{"_index":3127,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglerepos(ev",{"_index":3145,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggles",{"_index":4460,"title":{},"body":{"components/ShellLayout.html":{}}}],["toggleshowpassword",{"_index":3526,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["togglesidebar",{"_index":1641,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["togglesidebar(event",{"_index":1667,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["togglethink",{"_index":1351,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["togglethink(message",{"_index":1367,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["toggling",{"_index":2072,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":1630,"title":{},"body":{"components/AdminShellLayout.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"injectables/LoginFacade.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TokenStorageService.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["token.gettoken",{"_index":2063,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["token.setrole(profile.role",{"_index":2068,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":3564,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["tokens",{"_index":3081,"title":{},"body":{"injectables/GetAppInfoUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["tokens/role",{"_index":3512,"title":{},"body":{"injectables/LoginFacade.html":{}}}],["tokenstorage",{"_index":3825,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["tokenstorageservice",{"_index":1685,"title":{"injectables/TokenStorageService.html":{}},"body":{"components/AdminShellLayout.html":{},"injectables/AuthGuardService.html":{},"injectables/GuestGuardService.html":{},"injectables/LoginFacade.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TokenStorageService.html":{}}}],["toms",{"_index":4821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toms(a?.created_at",{"_index":4313,"title":{},"body":{"injectables/SessionsService.html":{}}}],["toms(b?.created_at",{"_index":4314,"title":{},"body":{"injectables/SessionsService.html":{}}}],["toms(value",{"_index":4320,"title":{},"body":{"injectables/SessionsService.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":1895,"title":{"interfaces/Tool.html":{}},"body":{"interfaces/AgentModel.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/Model.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{},"interfaces/VideoData.html":{}}}],["toolcallcompleted",{"_index":2110,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{}}}],["toolcallstarted",{"_index":2109,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["toolrunning",{"_index":2612,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["tools",{"_index":1894,"title":{},"body":{"interfaces/AgentModel.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/Model.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/Storage.html":{},"interfaces/Tool.html":{},"interfaces/VideoData.html":{},"index.html":{}}}],["top",{"_index":349,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["topbar",{"_index":4474,"title":{},"body":{"components/ShellLayout.html":{}}}],["total",{"_index":516,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/MessageManagerService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["totals",{"_index":787,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["totaltimeminutes",{"_index":3202,"title":{},"body":{"interfaces/Kpis.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisSummaryDisplay.html":{}}}],["track",{"_index":681,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatUtilsService.html":{}}}],["trackby",{"_index":2800,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["trackbymessageid",{"_index":2733,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["trackbymessageid(index",{"_index":2797,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["trackbytaxid",{"_index":4000,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["transcript",{"_index":2128,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["transform",{"_index":297,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["transition",{"_index":342,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"classes/AppTranslateLoader.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"miscellaneous/variables.html":{}}}],["transitions",{"_index":4440,"title":{},"body":{"components/ShellLayout.html":{}}}],["translate",{"_index":197,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["translate/core",{"_index":186,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"dependencies.html":{}}}],["translate/http",{"_index":4793,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":2017,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":147,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["translatemodule.forroot",{"_index":2050,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["translateservice",{"_index":3302,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translatex",{"_index":431,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ShellLayout.html":{}}}],["translatex(0",{"_index":433,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ShellLayout.html":{}}}],["translatex(2px",{"_index":718,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["translatey",{"_index":356,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["translatey(0",{"_index":403,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["translatey(20px",{"_index":4087,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["translatey(2rem",{"_index":4486,"title":{},"body":{"components/ShellLayout.html":{}}}],["translation",{"_index":3320,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translationobject",{"_index":2026,"title":{},"body":{"classes/AppTranslateLoader.html":{}}}],["transparent",{"_index":250,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["trap",{"_index":4039,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["tree",{"_index":133,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["tries",{"_index":4390,"title":{},"body":{"components/ShellLayout.html":{}}}],["trigger",{"_index":4422,"title":{},"body":{"components/ShellLayout.html":{}}}],["triggerrefresh",{"_index":4182,"title":{},"body":{"injectables/SessionsEventsService.html":{}}}],["trim",{"_index":578,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/RegisterPage.html":{}}}],["trim().tolowercase",{"_index":3730,"title":{},"body":{"components/RegisterPage.html":{}}}],["true",{"_index":143,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"injectables/AuthGuardService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/CustomPreloadStrategy.html":{},"components/ForbiddenPage.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"injectables/MessageManagerService.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/TtsService.html":{},"miscellaneous/variables.html":{}}}],["true|false",{"_index":2947,"title":{},"body":{"injectables/CustomPreloadStrategy.html":{}}}],["truncate",{"_index":1072,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["try",{"_index":83,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"injectables/AdminMessagesFacade.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminUsersFacade.html":{},"components/App.html":{},"injectables/BackgroundService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/PerformanceService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RiskFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{}}}],["trynext",{"_index":4287,"title":{},"body":{"injectables/SessionsService.html":{}}}],["trynext(0).pipe",{"_index":4303,"title":{},"body":{"injectables/SessionsService.html":{}}}],["trynext(idx",{"_index":4301,"title":{},"body":{"injectables/SessionsService.html":{}}}],["tslib",{"_index":4802,"title":{},"body":{"dependencies.html":{}}}],["tts",{"_index":2512,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/TtsService.html":{}}}],["ttsservice",{"_index":2513,"title":{"injectables/TtsService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/TtsService.html":{}}}],["tu",{"_index":203,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/ChatEventsService.html":{},"components/HeaderComponent.html":{}}}],["two",{"_index":3158,"title":{},"body":{"components/HeaderComponent.html":{}}}],["type",{"_index":38,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"interfaces/AdminCompanyDashboardDTO.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"interfaces/AdminSessionItem.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminStatsDTO.html":{},"injectables/AdminStatsFacade.html":{},"classes/AdminStatsPort.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AgentModel.html":{},"interfaces/AggregateInsights.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"interfaces/AppInfo.html":{},"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{},"classes/AppTranslateLoader.html":{},"interfaces/AudioData.html":{},"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"interfaces/BaseAgentEvent.html":{},"components/ChatComposerComponent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/CompanyItem.html":{},"interfaces/CompanyItem-1.html":{},"injectables/ConnectionStatusService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"classes/DeleteSessionUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"classes/GetSessionUseCase.html":{},"components/HeaderComponent.html":{},"interfaces/ImageData.html":{},"interfaces/Kpis.html":{},"injectables/KpisApiService.html":{},"injectables/KpisMockService.html":{},"interfaces/KpisPort.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"interfaces/KpisSummaryDisplay.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedApi.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"injectables/RegisterFacade.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"injectables/RegisterUseCase.html":{},"interfaces/ResponseAudio.html":{},"injectables/RiskFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"components/SessionCompaniesModalComponent.html":{},"interfaces/SessionCompanyItem.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/Storage.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"injectables/ThemeService.html":{},"interfaces/TimeSeriesPoint.html":{},"injectables/TokenStorageService.html":{},"interfaces/Tool.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_file",{"_index":1084,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["typealiases",{"_index":4900,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":664,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminShellLayout.html":{},"injectables/BackgroundService.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi.html":{},"injectables/PerformanceService.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["types",{"_index":647,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminMessagesPage.html":{}}}],["typewriter",{"_index":2505,"title":{},"body":{"injectables/ChatEventsService.html":{},"injectables/TypewriterService.html":{}}}],["typewriterservice",{"_index":2506,"title":{"injectables/TypewriterService.html":{}},"body":{"injectables/ChatEventsService.html":{},"injectables/TypewriterService.html":{}}}],["typewritersubscription",{"_index":4743,"title":{},"body":{"injectables/TypewriterService.html":{}}}],["u",{"_index":1153,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["u.email",{"_index":1156,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["u.username",{"_index":1155,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{}}}],["ui",{"_index":556,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["ui_bg_parallax",{"_index":2265,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["ui_bg_style",{"_index":2259,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["ui_neon_edges",{"_index":2263,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["ui_palette",{"_index":2261,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/variables.html":{}}}],["ultimate",{"_index":3645,"title":{},"body":{"interfaces/PaginatedApi.html":{}}}],["un",{"_index":2766,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"injectables/ScrollManagerService.html":{},"injectables/TypewriterService.html":{}}}],["una",{"_index":1494,"title":{},"body":{"components/AdminMessagesPage.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/RegisterFacade.html":{}}}],["undefined",{"_index":563,"title":{},"body":{"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/BackgroundService.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/PerformanceService.html":{},"interfaces/SSEMessage.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["undefined/null/empty",{"_index":1801,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["under",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["underline",{"_index":1052,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["uniquserids",{"_index":1302,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["unit",{"_index":4871,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":3306,"title":{},"body":{"injectables/LanguageService.html":{}}}],["up",{"_index":1128,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/TtsService.html":{}}}],["update",{"_index":1795,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"components/App.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["update(userid",{"_index":1875,"title":{},"body":{"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{}}}],["updateappinfo",{"_index":1995,"title":{},"body":{"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{}}}],["updateappinfo(payload",{"_index":1997,"title":{},"body":{"interfaces/AppInfoPort.html":{},"injectables/AppInfoService.html":{}}}],["updateappinfousecase",{"_index":4771,"title":{"injectables/UpdateAppInfoUseCase.html":{}},"body":{"injectables/UpdateAppInfoUseCase.html":{}}}],["updated_at",{"_index":1218,"title":{},"body":{"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"injectables/SessionsService.html":{},"interfaces/VideoData.html":{}}}],["updater",{"_index":2651,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["updater(arr[arr.length",{"_index":2697,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["updates",{"_index":2702,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["updateuc",{"_index":1826,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["updateuserusecase",{"_index":1858,"title":{"injectables/UpdateUserUseCase.html":{}},"body":{"injectables/AdminUsersFacade.html":{},"injectables/UpdateUserUseCase.html":{}}}],["updating",{"_index":1451,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["updatingmemory",{"_index":2111,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"injectables/ChatEventsService.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["upload",{"_index":392,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["upload(file",{"_index":3005,"title":{},"body":{"interfaces/FilesPort.html":{},"injectables/FilesService.html":{}}}],["upload(input",{"_index":2974,"title":{},"body":{"injectables/FilesFacade.html":{}}}],["uploadedfilemeta",{"_index":73,"title":{"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminFilesPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"components/SessionFilesModalComponent.html":{},"injectables/UploadFileUseCase.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{}}}],["uploadedfiles",{"_index":2356,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["uploadedfiles.length",{"_index":2441,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["uploadfiles",{"_index":2628,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["uploadfiles(files",{"_index":2660,"title":{},"body":{"injectables/ChatFacade.html":{}}}],["uploadfileuc",{"_index":2613,"title":{},"body":{"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{}}}],["uploadfileusecase",{"_index":2683,"title":{"injectables/UploadFileUseCase.html":{}},"body":{"injectables/ChatFacade.html":{},"injectables/FilesFacade.html":{},"injectables/UploadFileUseCase.html":{}}}],["uploadicon",{"_index":27,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["uploadicon(file",{"_index":34,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["uploading",{"_index":2406,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["uploadingicon",{"_index":21,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{}}}],["uploadinglogo",{"_index":22,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{}}}],["uploadlogo",{"_index":28,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["uploadlogo(file",{"_index":40,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{}}}],["uploads",{"_index":2428,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["uppercase/i.test(errormessage",{"_index":3686,"title":{},"body":{"injectables/RegisterFacade.html":{}}}],["upsert",{"_index":1566,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{}}}],["upsert(version",{"_index":3790,"title":{},"body":{"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{}}}],["upsertriskweightsusecase",{"_index":1593,"title":{"injectables/UpsertRiskWeightsUseCase.html":{}},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["url",{"_index":1536,"title":{},"body":{"injectables/AdminMessagesService.html":{},"injectables/AdminStatsService.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/AppInfoService.html":{},"interfaces/AudioData.html":{},"injectables/AuthService.html":{},"interfaces/ChatEntry.html":{},"injectables/CompaniesService.html":{},"interfaces/CompanyItem-1.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"interfaces/ImageData.html":{},"injectables/KpisApiService.html":{},"interfaces/ListFilesResponse.html":{},"interfaces/ListFilesResponse-1.html":{},"interfaces/PaginatedApi-1.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UploadedFileMeta.html":{},"interfaces/UploadedFileMeta-1.html":{},"interfaces/VideoData.html":{}}}],["urls",{"_index":2753,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["usada",{"_index":4274,"title":{},"body":{"injectables/SessionsService.html":{}}}],["usamos",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usando",{"_index":3174,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"injectables/ScrollManagerService.html":{}}}],["use",{"_index":2181,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/LanguageService.html":{},"index.html":{}}}],["useclass",{"_index":2045,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1940,"title":{},"body":{"injectables/AnalyzeSessionCompaniesUseCase.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":2078,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2052,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1119,"title":{},"body":{"components/AdminFilesPage.html":{},"interfaces/AdminMessageItem.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/ImageData.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"injectables/MessageManagerService.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UserProfile.html":{},"interfaces/VideoData.html":{}}}],["user.usecase.ts",{"_index":2922,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.usecase.ts:11",{"_index":2925,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.usecase.ts:12",{"_index":2924,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.usecase.ts:7",{"_index":2966,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["user.usecase.ts:8",{"_index":2965,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["user_id",{"_index":1226,"title":{},"body":{"interfaces/AdminMessageItem.html":{},"interfaces/AdminMessagesPort.html":{},"interfaces/AdminSessionItem.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/SSEMessage.html":{},"classes/SendMessageRestUseCase.html":{},"classes/SendMessageUseCase.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/UserProfile.html":{}}}],["user_message",{"_index":3866,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["userbaseresponsedto",{"_index":3566,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["usercache",{"_index":1237,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["userid",{"_index":1100,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/DeleteUserUseCase.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/UpdateUserUseCase.html":{}}}],["userlabel",{"_index":1089,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["userlabel(userid",{"_index":1098,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{}}}],["usermessage",{"_index":2329,"title":{},"body":{"interfaces/BaseAgentEvent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatMessage.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":1789,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserPayload.html":{},"interfaces/CreateUserPayload-1.html":{},"injectables/ListUsersUseCase.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/PaginatedApi-2.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["userprofile",{"_index":2170,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/AuthPort.html":{},"injectables/AuthService.html":{},"injectables/GetProfileUseCase.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginSuccessResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterSuccessResponse.html":{},"interfaces/UserProfile.html":{}}}],["users",{"_index":1085,"title":{},"body":{"components/AdminFilesPage.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["users'},{'name",{"_index":469,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["users.facade.ts",{"_index":1819,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:103",{"_index":1833,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:12",{"_index":1841,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:13",{"_index":1831,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:14",{"_index":1854,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:15",{"_index":1835,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:17",{"_index":1832,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:18",{"_index":1838,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:19",{"_index":1855,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:20",{"_index":1843,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:21",{"_index":1839,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:22",{"_index":1851,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:23",{"_index":1845,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:24",{"_index":1850,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:25",{"_index":1837,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:28",{"_index":1848,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:29",{"_index":1849,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:31",{"_index":1827,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:43",{"_index":1842,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:49",{"_index":1844,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:55",{"_index":1828,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:61",{"_index":1847,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:72",{"_index":1846,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:79",{"_index":1829,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.facade.ts:98",{"_index":1852,"title":{},"body":{"injectables/AdminUsersFacade.html":{}}}],["users.port.ts",{"_index":1787,"title":{},"body":{"interfaces/AdminUserItem.html":{},"interfaces/AdminUsersPort.html":{},"interfaces/CreateUserPayload.html":{}}}],["users.port.ts:19",{"_index":1874,"title":{},"body":{"interfaces/AdminUsersPort.html":{}}}],["users.port.ts:26",{"_index":1873,"title":{},"body":{"interfaces/AdminUsersPort.html":{}}}],["users.port.ts:27",{"_index":1871,"title":{},"body":{"interfaces/AdminUsersPort.html":{}}}],["users.port.ts:28",{"_index":1876,"title":{},"body":{"interfaces/AdminUsersPort.html":{}}}],["users.port.ts:32",{"_index":1872,"title":{},"body":{"interfaces/AdminUsersPort.html":{}}}],["users.service.ts",{"_index":1797,"title":{},"body":{"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["users.service.ts:35",{"_index":1883,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:36",{"_index":1882,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:38",{"_index":1880,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:65",{"_index":1879,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:70",{"_index":1877,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:76",{"_index":1881,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.service.ts:84",{"_index":1878,"title":{},"body":{"injectables/AdminUsersService.html":{}}}],["users.usecase.ts",{"_index":3497,"title":{},"body":{"injectables/ListUsersUseCase.html":{}}}],["users.usecase.ts:8",{"_index":3499,"title":{},"body":{"injectables/ListUsersUseCase.html":{}}}],["users.usecase.ts:9",{"_index":3498,"title":{},"body":{"injectables/ListUsersUseCase.html":{}}}],["usersport",{"_index":1238,"title":{},"body":{"injectables/AdminMessagesFacade.html":{}}}],["using",{"_index":646,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/App.html":{},"injectables/FilesService.html":{},"interfaces/ListFilesResponse-1.html":{},"injectables/TtsService.html":{},"interfaces/UploadedFileMeta-1.html":{},"index.html":{}}}],["usuario",{"_index":1182,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminUsersFacade.html":{},"injectables/ChatUtilsService.html":{},"injectables/MessageManagerService.html":{},"injectables/ScrollManagerService.html":{}}}],["util",{"_index":3178,"title":{},"body":{"components/HeaderComponent.html":{}}}],["utility",{"_index":4465,"title":{},"body":{"components/ShellLayout.html":{}}}],["utils.service",{"_index":1410,"title":{},"body":{"components/AdminMessagesPage.html":{},"injectables/MessageManagerService.html":{}}}],["utils.service.ts",{"_index":2722,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:101",{"_index":2770,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:11",{"_index":2778,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:116",{"_index":2764,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:131",{"_index":2798,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:142",{"_index":2735,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:21",{"_index":2774,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:36",{"_index":2782,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:53",{"_index":2796,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:60",{"_index":2794,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:72",{"_index":2788,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:79",{"_index":2792,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utils.service.ts:86",{"_index":2772,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["utter",{"_index":4662,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.lang",{"_index":4664,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.onend",{"_index":4694,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.onerror",{"_index":4696,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.onpause",{"_index":4697,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.onresume",{"_index":4699,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.onstart",{"_index":4702,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.pitch",{"_index":4668,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.rate",{"_index":4666,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.voice",{"_index":4684,"title":{},"body":{"injectables/TtsService.html":{}}}],["utter.volume",{"_index":4670,"title":{},"body":{"injectables/TtsService.html":{}}}],["utterance",{"_index":4672,"title":{},"body":{"injectables/TtsService.html":{}}}],["v",{"_index":1136,"title":{},"body":{"components/AdminFilesPage.html":{},"components/AdminShellLayout.html":{},"injectables/BackgroundService.html":{},"injectables/ChatFacade.html":{},"components/LazyChartComponent.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{},"injectables/TtsService.html":{}}}],["v.lang?.tolowercase",{"_index":4681,"title":{},"body":{"injectables/TtsService.html":{}}}],["v.lang?.tolowercase().startswith(langlower.split",{"_index":4682,"title":{},"body":{"injectables/TtsService.html":{}}}],["val",{"_index":1096,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/TtsService.html":{}}}],["validar",{"_index":3728,"title":{},"body":{"components/RegisterPage.html":{}}}],["validationerrors",{"_index":3719,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":3721,"title":{},"body":{"components/RegisterPage.html":{}}}],["validators",{"_index":69,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["validators.email",{"_index":3533,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(3",{"_index":3712,"title":{},"body":{"components/RegisterPage.html":{}}}],["validators.minlength(6",{"_index":3534,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.required",{"_index":54,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["valor",{"_index":2901,"title":{},"body":{"injectables/ConnectionStatusService.html":{}}}],["valores",{"_index":3260,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["value",{"_index":43,"title":{},"body":{"injectables/AdminAppInfoFacade.html":{},"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminMessagesService.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"injectables/AdminStatsFacade.html":{},"injectables/AdminStatsService.html":{},"injectables/AdminUsersFacade.html":{},"injectables/AdminUsersService.html":{},"injectables/AnalyzeSessionCompaniesUseCase.html":{},"components/App.html":{},"injectables/AppInfoService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/CompaniesService.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/CustomPreloadStrategy.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FilesFacade.html":{},"injectables/FilesService.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/GetAppInfoUseCase.html":{},"injectables/GetCompanyByRucUseCase.html":{},"injectables/GetKpisUseCase.html":{},"injectables/GetProfileUseCase.html":{},"injectables/GuestGuardService.html":{},"components/HeaderComponent.html":{},"injectables/KpisApiService.html":{},"injectables/KpisService.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"injectables/ListSessionFilesUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/LoginFacade.html":{},"components/LoginPage.html":{},"injectables/LoginUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/RegisterFacade.html":{},"components/RegisterPage.html":{},"injectables/RegisterUseCase.html":{},"injectables/RiskFacade.html":{},"injectables/RiskWeightsService.html":{},"injectables/RoleGuardService.html":{},"interfaces/SSEMessage.html":{},"injectables/ScrollManagerService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"injectables/SessionsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"injectables/UpdateAppInfoUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UploadFileUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":3725,"title":{},"body":{"components/RegisterPage.html":{}}}],["values",{"_index":900,"title":{},"body":{"components/AdminCompanyPage.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["vaporwave",{"_index":2256,"title":{},"body":{"injectables/BackgroundService.html":{},"miscellaneous/typealiases.html":{}}}],["var",{"_index":453,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"components/ChatComposerComponent.html":{},"components/ForbiddenPage.html":{},"components/HeaderComponent.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"components/NotFoundPage.html":{},"components/RegisterPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["variables",{"_index":4906,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables/attr",{"_index":4555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["varias",{"_index":3953,"title":{},"body":{"injectables/ScrollManagerService.html":{}}}],["various",{"_index":4832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vars",{"_index":2299,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["vary",{"_index":825,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["vende",{"_index":961,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["ver",{"_index":940,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/ForbiddenPage.html":{}}}],["verifica",{"_index":3932,"title":{},"body":{"injectables/ScrollManagerService.html":{},"injectables/TypewriterService.html":{}}}],["version",{"_index":1567,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/UpsertRiskWeightsUseCase.html":{},"index.html":{},"properties.html":{}}}],["vertical",{"_index":737,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["very",{"_index":2035,"title":{},"body":{"classes/AppTranslateLoader.html":{},"injectables/PerformanceService.html":{},"miscellaneous/variables.html":{}}}],["vez",{"_index":3264,"title":{},"body":{"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{}}}],["via",{"_index":1412,"title":{},"body":{"components/AdminMessagesPage.html":{},"components/ShellLayout.html":{}}}],["video",{"_index":2748,"title":{},"body":{"injectables/ChatUtilsService.html":{},"components/HeaderComponent.html":{}}}],["videodata",{"_index":2131,"title":{"interfaces/VideoData.html":{}},"body":{"interfaces/AudioData.html":{},"interfaces/ChatEntry.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SessionEntry.html":{},"interfaces/VideoData.html":{}}}],["videos",{"_index":2141,"title":{},"body":{"interfaces/AudioData.html":{},"interfaces/BaseAgentEvent.html":{},"interfaces/ChatEntry.html":{},"interfaces/ChatMessage.html":{},"interfaces/ImageData.html":{},"interfaces/PlaygroundAgentExtraData.html":{},"interfaces/ReasoningSteps.html":{},"interfaces/Reference.html":{},"interfaces/ReferenceData.html":{},"interfaces/ResponseAudio.html":{},"interfaces/RunResponse.html":{},"interfaces/SSEMessage.html":{},"interfaces/SSEMessageModel.html":{},"interfaces/SessionEntry.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{},"interfaces/StreamResponseModel.html":{},"interfaces/VideoData.html":{}}}],["view",{"_index":1450,"title":{},"body":{"components/AdminMessagesPage.html":{},"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["view.expanded",{"_index":1505,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["view.main.length",{"_index":1503,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["view.thinks",{"_index":1510,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["view.thinks.length",{"_index":1504,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["viewchild",{"_index":883,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/AdminMessagesPage.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["viewchild('cancelbtn",{"_index":4356,"title":{},"body":{"components/ShellLayout.html":{}}}],["viewchild('canvas",{"_index":3385,"title":{},"body":{"components/LazyChartComponent.html":{}}}],["viewchild('closebtn",{"_index":4019,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{}}}],["viewchild('confirmbtn",{"_index":4362,"title":{},"body":{"components/ShellLayout.html":{}}}],["viewchild('deletedialog",{"_index":4364,"title":{},"body":{"components/ShellLayout.html":{}}}],["viewchild('metricschart",{"_index":864,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["viewchild('modalroot",{"_index":4024,"title":{},"body":{"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{}}}],["viewchild('sentinel",{"_index":1395,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["viewchild('sessionscontainer",{"_index":1399,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["viewchild('sessionssentinel",{"_index":1401,"title":{},"body":{"components/AdminMessagesPage.html":{}}}],["visibility",{"_index":4453,"title":{},"body":{"components/ShellLayout.html":{}}}],["visible",{"_index":1301,"title":{},"body":{"injectables/AdminMessagesFacade.html":{},"components/LazyChartComponent.html":{}}}],["visit",{"_index":4893,"title":{},"body":{"index.html":{}}}],["vista",{"_index":218,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["visual",{"_index":2785,"title":{},"body":{"injectables/ChatUtilsService.html":{},"injectables/ConnectionStatusService.html":{}}}],["visuales",{"_index":208,"title":{},"body":{"components/AdminAppInfoPage.html":{}}}],["voice",{"_index":4674,"title":{},"body":{"injectables/TtsService.html":{}}}],["voices",{"_index":4655,"title":{},"body":{"injectables/TtsService.html":{}}}],["voices.find((v",{"_index":4680,"title":{},"body":{"injectables/TtsService.html":{}}}],["voices[0",{"_index":4683,"title":{},"body":{"injectables/TtsService.html":{}}}],["voicesready",{"_index":4596,"title":{},"body":{"injectables/TtsService.html":{}}}],["void",{"_index":157,"title":{},"body":{"components/AdminAppInfoPage.html":{},"injectables/AdminCompaniesFacade.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{},"components/AdminMessagesPage.html":{},"injectables/AdminRiskWeightsFacade.html":{},"components/AdminShellLayout.html":{},"components/App.html":{},"classes/AppTranslateLoader.html":{},"injectables/BackgroundService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatEventsService.html":{},"injectables/ChatFacade.html":{},"interfaces/ChatStreamPort.html":{},"injectables/ConnectionStatusService.html":{},"injectables/CustomPreloadStrategy.html":{},"components/HeaderComponent.html":{},"injectables/LanguageService.html":{},"components/LazyChartComponent.html":{},"components/LoginPage.html":{},"injectables/MessageManagerService.html":{},"injectables/PerformanceService.html":{},"components/RegisterPage.html":{},"injectables/ScrollManagerService.html":{},"classes/SendMessageUseCase.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"injectables/SessionsEventsService.html":{},"components/ShellLayout.html":{},"injectables/SseService.html":{},"injectables/ThemeService.html":{},"injectables/TokenStorageService.html":{},"injectables/TtsService.html":{},"injectables/TypewriterService.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4597,"title":{},"body":{"injectables/TtsService.html":{}}}],["vosk",{"_index":4804,"title":{},"body":{"dependencies.html":{}}}],["w",{"_index":998,"title":{},"body":{"components/AdminCompanyPage.html":{},"injectables/BackgroundService.html":{},"components/LazyChartComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{}}}],["waitforidle",{"_index":4605,"title":{},"body":{"injectables/TtsService.html":{}}}],["waitforidle(synth",{"_index":4621,"title":{},"body":{"injectables/TtsService.html":{}}}],["waits",{"_index":3319,"title":{},"body":{"injectables/LanguageService.html":{}}}],["warm",{"_index":1127,"title":{},"body":{"components/AdminFilesPage.html":{},"injectables/AdminMessagesFacade.html":{}}}],["warning",{"_index":1044,"title":{},"body":{"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"injectables/ConnectionStatusService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/ShellLayout.html":{}}}],["warnings",{"_index":1917,"title":{},"body":{"interfaces/AggregateInsights.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompanyDashboardSummary.html":{},"interfaces/CompanyInsights.html":{},"interfaces/SessionCompaniesAnalysis.html":{},"interfaces/SessionCompanyItem.html":{}}}],["watchdog",{"_index":4714,"title":{},"body":{"injectables/TtsService.html":{}}}],["way",{"_index":3159,"title":{},"body":{"components/HeaderComponent.html":{}}}],["we'll",{"_index":3818,"title":{},"body":{"interfaces/SSEMessage.html":{},"injectables/SseService.html":{},"interfaces/StreamResponse.html":{}}}],["webkit",{"_index":287,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{},"components/HeaderComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["weight",{"_index":278,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["weights",{"_index":1568,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsConfig-1.html":{},"interfaces/RiskWeightsPort.html":{},"injectables/RiskWeightsService.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["weights.facade.ts",{"_index":1564,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:10",{"_index":1577,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:12",{"_index":1584,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:13",{"_index":1586,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:14",{"_index":1580,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:15",{"_index":1576,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:16",{"_index":1581,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:18",{"_index":1572,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:32",{"_index":1571,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:41",{"_index":1574,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:46",{"_index":1575,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:8",{"_index":1579,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.facade.ts:9",{"_index":1583,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.port.ts",{"_index":3784,"title":{},"body":{"interfaces/RiskWeightsConfig.html":{},"interfaces/RiskWeightsPort.html":{}}}],["weights.port.ts:8",{"_index":3789,"title":{},"body":{"interfaces/RiskWeightsPort.html":{}}}],["weights.port.ts:9",{"_index":3791,"title":{},"body":{"interfaces/RiskWeightsPort.html":{}}}],["weights.service.ts",{"_index":3786,"title":{},"body":{"interfaces/RiskWeightsConfig-1.html":{},"injectables/RiskWeightsService.html":{}}}],["weights.service.ts:14",{"_index":3795,"title":{},"body":{"injectables/RiskWeightsService.html":{}}}],["weights.service.ts:15",{"_index":3794,"title":{},"body":{"injectables/RiskWeightsService.html":{}}}],["weights.service.ts:17",{"_index":3792,"title":{},"body":{"injectables/RiskWeightsService.html":{}}}],["weights.service.ts:24",{"_index":3793,"title":{},"body":{"injectables/RiskWeightsService.html":{}}}],["weights.usecase",{"_index":1592,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{}}}],["weights.usecase.ts",{"_index":3068,"title":{},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["weights.usecase.ts:7",{"_index":3071,"title":{},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["weights.usecase.ts:8",{"_index":3069,"title":{},"body":{"injectables/GetActiveRiskWeightsUseCase.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["weights/get",{"_index":1590,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/GetActiveRiskWeightsUseCase.html":{}}}],["weights/upsert",{"_index":1594,"title":{},"body":{"injectables/AdminRiskWeightsFacade.html":{},"injectables/UpsertRiskWeightsUseCase.html":{}}}],["whenever",{"_index":4851,"title":{},"body":{"index.html":{}}}],["white",{"_index":308,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionFilesModalComponent.html":{}}}],["whole",{"_index":2822,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["width",{"_index":269,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/ChatComposerComponent.html":{},"injectables/PerformanceService.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["window",{"_index":1703,"title":{},"body":{"components/AdminShellLayout.html":{},"injectables/BackgroundService.html":{},"components/LazyChartComponent.html":{},"injectables/PerformanceService.html":{},"components/ShellLayout.html":{},"injectables/ThemeService.html":{},"injectables/TtsService.html":{}}}],["window.addeventlistener('pointermove",{"_index":2308,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["window.devicepixelratio",{"_index":3662,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["window.innerwidth",{"_index":1734,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["window.localstorage.getitem('adminsidebarcollapsed",{"_index":1704,"title":{},"body":{"components/AdminShellLayout.html":{}}}],["window.localstorage.getitem('chatsidebaropen",{"_index":4432,"title":{},"body":{"components/ShellLayout.html":{}}}],["window.localstorage.setitem",{"_index":1731,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["window.matchmedia",{"_index":3650,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["window.matchmedia('(max",{"_index":3651,"title":{},"body":{"injectables/PerformanceService.html":{}}}],["window.matchmedia('(min",{"_index":4386,"title":{},"body":{"components/ShellLayout.html":{}}}],["window.matchmedia('(prefers",{"_index":4559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["window.matchmedia?.('(prefers",{"_index":4564,"title":{},"body":{"injectables/ThemeService.html":{}}}],["window.open(url",{"_index":4139,"title":{},"body":{"components/SessionFilesModalComponent.html":{}}}],["window.removeeventlistener('pointermove",{"_index":2304,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["window.speechsynthesis",{"_index":4642,"title":{},"body":{"injectables/TtsService.html":{}}}],["window.speechsynthesis.cancel",{"_index":4724,"title":{},"body":{"injectables/TtsService.html":{}}}],["window.speechsynthesis.pause",{"_index":4722,"title":{},"body":{"injectables/TtsService.html":{}}}],["window.speechsynthesis.resume",{"_index":4723,"title":{},"body":{"injectables/TtsService.html":{}}}],["window:resize",{"_index":1644,"title":{},"body":{"components/AdminShellLayout.html":{},"components/ShellLayout.html":{}}}],["within",{"_index":707,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/ChatComposerComponent.html":{}}}],["within::before",{"_index":2460,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["withinterceptors([authinterceptorfn",{"_index":2049,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1424,"title":{},"body":{"components/AdminMessagesPage.html":{},"interfaces/AdminUserItem-1.html":{},"injectables/AdminUsersService.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CreateUserPayload-1.html":{},"interfaces/PaginatedApi-2.html":{}}}],["withviewtransitions",{"_index":2041,"title":{},"body":{"classes/AppTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":704,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/SessionCompaniesModalComponent.html":{}}}],["wrapper",{"_index":724,"title":{},"body":{"components/AdminCompaniesPage.html":{}}}],["writels",{"_index":2218,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["writels(k",{"_index":2235,"title":{},"body":{"injectables/BackgroundService.html":{}}}],["x",{"_index":725,"title":{},"body":{"components/AdminCompaniesPage.html":{},"injectables/BackgroundService.html":{},"components/LazyChartComponent.html":{},"components/ShellLayout.html":{}}}],["xl",{"_index":2457,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["xl::before",{"_index":2458,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["xl:focus",{"_index":2459,"title":{},"body":{"components/ChatComposerComponent.html":{}}}],["xs",{"_index":1049,"title":{},"body":{"components/AdminCompanyPage.html":{}}}],["y",{"_index":671,"title":{},"body":{"components/AdminCompaniesPage.html":{},"components/AdminCompanyPage.html":{},"components/AdminFilesPage.html":{},"components/AdminMessagesPage.html":{},"injectables/BackgroundService.html":{},"interfaces/KpisResponseDTO.html":{},"injectables/KpisService.html":{},"components/LazyChartComponent.html":{},"components/RegisterPage.html":{},"components/ShellLayout.html":{}}}],["ya",{"_index":3167,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/RegisterFacade.html":{}}}],["yes",{"_index":1203,"title":{},"body":{"injectables/AdminListMessagesUseCase.html":{},"injectables/AdminListSessionsUseCase.html":{},"interfaces/AdminMessagesPort.html":{},"injectables/AdminMessagesService.html":{},"components/AdminShellLayout.html":{},"classes/AdminStatsPort.html":{},"interfaces/AdminUsersPort.html":{},"injectables/AdminUsersService.html":{},"components/ChatComposerComponent.html":{},"injectables/ChatFacade.html":{},"injectables/ChatUtilsService.html":{},"interfaces/CompaniesPort.html":{},"injectables/CompaniesService.html":{},"injectables/FilesFacade.html":{},"interfaces/FilesPort.html":{},"injectables/FilesService.html":{},"components/HeaderComponent.html":{},"injectables/ListCompaniesUseCase.html":{},"injectables/ListFilesUseCase.html":{},"classes/ListSessionsUseCase.html":{},"injectables/ListUsersUseCase.html":{},"injectables/MessageManagerService.html":{},"injectables/SessionsEventsService.html":{},"interfaces/SessionsPort.html":{},"injectables/SessionsService.html":{},"injectables/TtsService.html":{},"injectables/UploadFileUseCase.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":3190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["youtube_video",{"_index":3134,"title":{},"body":{"components/HeaderComponent.html":{}}}],["yyyy",{"_index":801,"title":{},"body":{"interfaces/AdminCompanyDashboardDTO.html":{},"interfaces/AdminStatsDTO.html":{},"classes/AdminStatsPort.html":{},"interfaces/TimeSeriesPoint.html":{}}}],["z",{"_index":437,"title":{},"body":{"components/AdminAppInfoPage.html":{},"components/ChatComposerComponent.html":{},"components/SessionCompaniesModalComponent.html":{},"components/SessionFilesModalComponent.html":{},"components/ShellLayout.html":{}}}],["z]+\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^\\s>]+)/g",{"_index":2834,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["za",{"_index":2833,"title":{},"body":{"injectables/ChatUtilsService.html":{}}}],["zonas",{"_index":1005,"title":{},"body":{"components/AdminCompanyPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdminAppInfoFacade.html":{"url":"injectables/AdminAppInfoFacade.html","title":"injectable - AdminAppInfoFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminAppInfoFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-app-info.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appInfo\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                    Private\n                                    Readonly\n                                files\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Readonly\n                                loaded\n                            \n                            \n                                    Readonly\n                                saved\n                            \n                            \n                                    Readonly\n                                saving\n                            \n                            \n                                    Readonly\n                                uploadingIcon\n                            \n                            \n                                    Readonly\n                                uploadingLogo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                uploadIcon\n                            \n                            \n                                    Async\n                                uploadLogo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-app-info.facade.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-app-info.facade.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadIcon(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-app-info.facade.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadLogo\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadLogo(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-app-info.facade.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APP_INFO_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FILES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    site_name: ['', Validators.required],\n    site_icon: [''],\n    site_logo: [''],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        saved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        saving\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uploadingIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uploadingLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-app-info.facade.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport type { AppInfo } from '@core/models';\nimport type { FilesPort, UploadedFileMeta, AppInfoPort } from '@core/ports';\nimport { APP_INFO_PORT, FILES_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminAppInfoFacade {\n  private readonly appInfo = inject(APP_INFO_PORT);\n  private readonly files = inject(FILES_PORT);\n  private readonly fb = inject(FormBuilder);\n\n  readonly form = this.fb.group({\n    site_name: ['', Validators.required],\n    site_icon: [''],\n    site_logo: [''],\n  });\n  readonly loaded = signal(false);\n  readonly error = signal(null);\n  readonly saving = signal(false);\n  readonly saved = signal(false);\n  readonly uploadingIcon = signal(false);\n  readonly uploadingLogo = signal(false);\n\n  async load() {\n    try {\n      const info = await this.appInfo.getAppInfo();\n      this.form.patchValue(info as any);\n      this.loaded.set(true);\n    } catch (e: any) {\n      this.error.set(e?.message || 'No se pudo cargar app-info');\n    }\n  }\n\n  async save() {\n    if (this.form.invalid || this.saving()) return;\n    this.saving.set(true);\n    this.error.set(null);\n    this.saved.set(false);\n    try {\n      const res = await this.appInfo.updateAppInfo(\n        this.form.value as Partial,\n      );\n      this.form.patchValue(res as any);\n      this.saved.set(true);\n    } catch (e: any) {\n      this.error.set(e?.message || 'No se pudo guardar');\n    } finally {\n      this.saving.set(false);\n      setTimeout(() => this.saved.set(false), 2000);\n    }\n  }\n\n  async uploadIcon(file: File) {\n    this.uploadingIcon.set(true);\n    this.error.set(null);\n    try {\n      const meta: UploadedFileMeta = await this.files.upload(\n        file,\n        'app-info',\n        'admin-app-info',\n      );\n      this.form.patchValue({ site_icon: meta.url });\n    } catch (e: any) {\n      this.error.set(e?.message || 'No se pudo subir el icono');\n    } finally {\n      this.uploadingIcon.set(false);\n    }\n  }\n\n  async uploadLogo(file: File) {\n    this.uploadingLogo.set(true);\n    this.error.set(null);\n    try {\n      const meta: UploadedFileMeta = await this.files.upload(\n        file,\n        'app-info',\n        'admin-app-info',\n      );\n      this.form.patchValue({ site_logo: meta.url });\n    } catch (e: any) {\n      this.error.set(e?.message || 'No se pudo subir el logo');\n    } finally {\n      this.uploadingLogo.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminAppInfoPage.html":{"url":"components/AdminAppInfoPage.html","title":"component - AdminAppInfoPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminAppInfoPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/admin/app-info.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-app-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./app-info.css\n            \n\n\n\n            \n                templateUrl\n                ./app-info.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                facade\n                            \n                            \n                                form\n                            \n                            \n                                loaded\n                            \n                            \n                                saved\n                            \n                            \n                                saving\n                            \n                            \n                                uploadingIcon\n                            \n                            \n                                uploadingLogo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onPickIcon\n                            \n                            \n                                    Async\n                                onPickLogo\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/app-info.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPickIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPickIcon(evt: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/app-info.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPickLogo\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPickLogo(evt: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/app-info.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/app-info.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.error\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        facade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminAppInfoFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.form\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.loaded\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.saved\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saving\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.saving\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadingIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.uploadingIcon\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadingLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.uploadingLogo\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/app-info.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdminAppInfoFacade } from '@app/application/admin/admin-app-info.facade';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-admin-app-info',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TranslateModule],\n  styleUrls: ['./app-info.css'],\n  templateUrl: './app-info.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminAppInfoPage implements OnInit {\n  private readonly facade = inject(AdminAppInfoFacade);\n  form = this.facade.form;\n  loaded = this.facade.loaded;\n  error = this.facade.error;\n  saving = this.facade.saving;\n  saved = this.facade.saved;\n  uploadingIcon = this.facade.uploadingIcon;\n  uploadingLogo = this.facade.uploadingLogo;\n\n  ngOnInit() {\n    this.facade.load();\n  }\n\n  async save() {\n    await this.facade.save();\n  }\n\n  async onPickIcon(evt: Event) {\n    const input = evt.target as HTMLInputElement;\n    const file = input.files?.[0];\n    if (!file) return;\n    await this.facade.uploadIcon(file);\n    input.value = '';\n  }\n\n  async onPickLogo(evt: Event) {\n    const input = evt.target as HTMLInputElement;\n    const file = input.files?.[0];\n    if (!file) return;\n    await this.facade.uploadLogo(file);\n    input.value = '';\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n          {{ \"ADMIN.SIDENAV.APP_INFO\" | translate }}\n        \n        \n          Configura la información básica de tu aplicación\n        \n      \n    \n  \n\n  \n  @if (error()) {\n    \n      \n      {{ error() }}\n    \n  }\n\n  \n  \n    \n      \n      \n      \n        \n          \n            \n            Información General\n          \n        \n        \n        \n          \n            \n            {{ \"ADMIN.APP_INFO.FIELDS.SITE_NAME\" | translate }}\n          \n          \n        \n      \n\n      \n      \n        \n          \n            \n            Recursos Visuales\n          \n        \n\n        \n          \n          \n            \n              \n                \n                {{ \"ADMIN.APP_INFO.FIELDS.SITE_ICON\" | translate }}\n              \n              Ícono del sitio (32x32px recomendado)\n            \n            \n            \n              \n              \n                \n                \n                \n                  {{\n                    uploadingIcon()\n                      ? (\"COMPOSER.UPLOADING\" | translate)\n                      : (\"ADMIN.APP_INFO.UPLOAD\" | translate)\n                  }}\n                \n              \n            \n            \n            @if (form.value.site_icon) {\n              \n                \n                  \n                  \n                    \n                  \n                \n                Vista previa del ícono\n              \n            }\n          \n\n          \n          \n            \n              \n                \n                {{ \"ADMIN.APP_INFO.FIELDS.SITE_LOGO\" | translate }}\n              \n              Logo principal (300x100px recomendado)\n            \n            \n            \n              \n              \n                \n                \n                \n                  {{\n                    uploadingLogo()\n                      ? (\"COMPOSER.UPLOADING\" | translate)\n                      : (\"ADMIN.APP_INFO.UPLOAD\" | translate)\n                  }}\n                \n              \n            \n            \n            @if (form.value.site_logo) {\n              \n                \n                  \n                  \n                    \n                  \n                \n                Vista previa del logo\n              \n            }\n          \n        \n      \n\n      \n      \n        \n          \n            @if (saving()) {\n              \n              {{ \"LOGIN.PROCESSING\" | translate }}\n            } @else {\n              \n              {{ \"ADMIN.APP_INFO.SAVE\" | translate }}\n            }\n          \n          \n          @if (saved()) {\n            \n              \n              {{ \"ADMIN.APP_INFO.SAVED\" | translate }}\n            \n          }\n        \n      \n    \n  \n\n  \n  @if (!loaded()) {\n    \n      \n        \n        {{ \"COMMON.LOADING\" | translate }}\n      \n    \n  }\n\n\n    \n\n    \n                \n                    ./app-info.css\n                \n                /* Importar estilos base */\n@import './dashboard.css';\n\n/* ============================================\n   APP INFO PAGE - DISEÑO MODERNO\n   ============================================ */\n\n.app-info-container {\n  min-height: 100vh;\n  padding: 2rem;\n  background: \n    radial-gradient(circle at 20% 50%, hsl(var(--primary) / 0.15) 0%, transparent 50%),\n    radial-gradient(circle at 80% 20%, hsl(var(--accent) / 0.15) 0%, transparent 50%),\n    linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--muted) / 0.3) 100%);\n  color: hsl(var(--foreground));\n}\n\n/* ============================================\n   HEADER SECTION\n   ============================================ */\n\n.app-info-header {\n  margin-bottom: 3rem;\n  position: relative;\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.title-section {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.page-title {\n  font-size: 3rem;\n  font-weight: 700;\n  color: hsl(var(--foreground));\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.title-icon {\n  font-size: 2.5rem;\n  color: hsl(var(--primary));\n  animation: rotate 3s linear infinite;\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.page-subtitle {\n  font-size: 1.2rem;\n  color: hsl(var(--muted-foreground));\n  font-weight: 400;\n  opacity: 0.8;\n}\n\n/* ============================================\n   ERROR ALERT\n   ============================================ */\n\n.error-alert {\n  background: linear-gradient(135deg, #ef4444, #dc2626);\n  color: white;\n  padding: 1rem 1.5rem;\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n}\n\n.error-alert i {\n  font-size: 1.2rem;\n  animation: pulse 2s infinite;\n}\n\n/* ============================================\n   MAIN CONTENT\n   ============================================ */\n\n.main-content {\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.app-info-form {\n  display: flex;\n  flex-direction: column;\n  gap: 2.5rem;\n}\n\n/* ============================================\n   FORM SECTIONS\n   ============================================ */\n\n.form-section {\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1.5rem;\n  padding: 2rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 20px 50px rgba(0, 0, 0, 0.1),\n    0 1px 3px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.form-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));\n  opacity: 0.7;\n}\n\n.form-section:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 30px 70px rgba(0, 0, 0, 0.15),\n    0 5px 15px rgba(0, 0, 0, 0.08);\n  border-color: hsl(var(--primary) / 0.4);\n}\n\n.section-header {\n  margin-bottom: 1.5rem;\n}\n\n.section-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.25rem;\n}\n\n.section-title i {\n  color: hsl(var(--primary));\n  font-size: 1.25rem;\n}\n\n/* ============================================\n   INPUT GROUPS\n   ============================================ */\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.input-label {\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.input-label i {\n  color: hsl(var(--primary));\n  font-size: 0.9rem;\n}\n\n.modern-input {\n  background: hsl(var(--background) / 0.8);\n  border: 2px solid hsl(var(--border) / 0.4);\n  border-radius: 0.75rem;\n  padding: 0.875rem 1.25rem;\n  font-size: 1rem;\n  color: hsl(var(--foreground));\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.modern-input:focus {\n  outline: none;\n  border-color: hsl(var(--primary));\n  box-shadow: \n    0 0 0 3px hsl(var(--primary) / 0.1),\n    0 4px 12px rgba(0, 0, 0, 0.1);\n  background: hsl(var(--background));\n  transform: translateY(-1px);\n}\n\n.modern-input::placeholder {\n  color: hsl(var(--muted-foreground));\n  opacity: 0.7;\n}\n\n/* ============================================\n   ASSETS GRID\n   ============================================ */\n\n.assets-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: 2rem;\n}\n\n.asset-card {\n  background: hsl(var(--background) / 0.6);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n}\n\n.asset-card:hover {\n  border-color: hsl(var(--primary) / 0.4);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n}\n\n.asset-header {\n  margin-bottom: 1rem;\n}\n\n.asset-title {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.25rem;\n}\n\n.asset-title i {\n  color: hsl(var(--primary));\n}\n\n.asset-description {\n  font-size: 0.85rem;\n  color: hsl(var(--muted-foreground));\n  opacity: 0.8;\n}\n\n.asset-input-group {\n  display: flex;\n  gap: 0.75rem;\n  margin-bottom: 1rem;\n}\n\n.asset-input {\n  flex: 1;\n}\n\n/* ============================================\n   UPLOAD BUTTONS\n   ============================================ */\n\n.upload-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.875rem 1.25rem;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));\n  color: white;\n  border: none;\n  border-radius: 0.75rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px hsl(var(--primary) / 0.3);\n  white-space: nowrap;\n  min-width: 140px;\n  justify-content: center;\n}\n\n.upload-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px hsl(var(--primary) / 0.4);\n  background: linear-gradient(135deg, hsl(var(--primary) / 0.9), hsl(var(--primary)));\n}\n\n.upload-btn:active {\n  transform: translateY(0);\n}\n\n.upload-btn i {\n  font-size: 1rem;\n}\n\n.hidden {\n  display: none;\n}\n\n/* ============================================\n   ASSET PREVIEWS\n   ============================================ */\n\n.asset-preview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.75rem;\n  padding-top: 1rem;\n  border-top: 1px solid hsl(var(--border) / 0.2);\n}\n\n.preview-container {\n  position: relative;\n  border-radius: 0.75rem;\n  overflow: hidden;\n  border: 2px solid hsl(var(--border) / 0.3);\n  transition: all 0.3s ease;\n  background: hsl(var(--background));\n}\n\n.preview-container:hover {\n  border-color: hsl(var(--primary) / 0.6);\n  transform: scale(1.05);\n}\n\n.icon-preview {\n  width: 60px;\n  height: 60px;\n}\n\n.logo-preview {\n  width: 120px;\n  height: 60px;\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  background: hsl(var(--background));\n}\n\n.preview-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.preview-container:hover .preview-overlay {\n  opacity: 1;\n}\n\n.preview-overlay i {\n  color: white;\n  font-size: 1.2rem;\n}\n\n.preview-label {\n  font-size: 0.8rem;\n  color: hsl(var(--muted-foreground));\n  font-weight: 500;\n}\n\n/* ============================================\n   ACTION SECTION\n   ============================================ */\n\n.action-section {\n  background: hsl(var(--card) / 0.2);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.2);\n  backdrop-filter: blur(10px);\n}\n\n.action-buttons {\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  justify-content: center;\n}\n\n.save-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 1rem 2rem;\n  background: linear-gradient(135deg, #10b981, #059669);\n  color: white;\n  border: none;\n  border-radius: 0.75rem;\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n  min-width: 160px;\n  justify-content: center;\n}\n\n.save-btn:hover:not(:disabled) {\n  transform: translateY(-3px);\n  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\n  background: linear-gradient(135deg, #059669, #047857);\n}\n\n.save-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.save-btn i {\n  font-size: 1rem;\n}\n\n.success-message {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #10b981;\n  font-weight: 600;\n  animation: fadeInSuccess 0.5s ease;\n}\n\n.success-message i {\n  font-size: 1.1rem;\n}\n\n@keyframes fadeInSuccess {\n  from {\n    opacity: 0;\n    transform: translateX(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* ============================================\n   LOADING OVERLAY\n   ============================================ */\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2200;\n  backdrop-filter: blur(5px);\n}\n\n.loading-content {\n  background: hsl(var(--card));\n  padding: 2rem 3rem;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);\n  border: 1px solid hsl(var(--border) / 0.3);\n}\n\n.loading-spinner {\n  font-size: 2rem;\n  color: hsl(var(--primary));\n}\n\n.loading-content span {\n  color: hsl(var(--foreground));\n  font-weight: 500;\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 768px) {\n  .app-info-container {\n    padding: 1rem;\n  }\n  \n  .page-title {\n    font-size: 2rem;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  \n  .title-icon {\n    font-size: 1.8rem;\n  }\n  \n  .assets-grid {\n    grid-template-columns: 1fr;\n    gap: 1.5rem;\n  }\n  \n  .asset-input-group {\n    flex-direction: column;\n  }\n  \n  .action-buttons {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .save-btn {\n    width: 100%;\n  }\n  \n  .form-section {\n    padding: 1.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .page-title {\n    font-size: 1.6rem;\n  }\n  \n  .page-subtitle {\n    font-size: 1rem;\n  }\n  \n  .asset-card {\n    padding: 1rem;\n  }\n  \n  .form-section {\n    padding: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ \"ADMIN.SIDENAV.APP_INFO\" | translate }}                          Configura la información básica de tu aplicación                        @if (error()) {                {{ error() }}      }                                                                    Información General                                                                    {{ \"ADMIN.APP_INFO.FIELDS.SITE_NAME\" | translate }}                                                                                        Recursos Visuales                                                                                                        {{ \"ADMIN.APP_INFO.FIELDS.SITE_ICON\" | translate }}                            Ícono del sitio (32x32px recomendado)                                                                                                                                  {{                    uploadingIcon()                      ? (\"COMPOSER.UPLOADING\" | translate)                      : (\"ADMIN.APP_INFO.UPLOAD\" | translate)                  }}                                                                  @if (form.value.site_icon) {                                                                                                                                        Vista previa del ícono                          }                                                                                        {{ \"ADMIN.APP_INFO.FIELDS.SITE_LOGO\" | translate }}                            Logo principal (300x100px recomendado)                                                                                                                                  {{                    uploadingLogo()                      ? (\"COMPOSER.UPLOADING\" | translate)                      : (\"ADMIN.APP_INFO.UPLOAD\" | translate)                  }}                                                                  @if (form.value.site_logo) {                                                                                                                                        Vista previa del logo                          }                                                                  @if (saving()) {                            {{ \"LOGIN.PROCESSING\" | translate }}            } @else {                            {{ \"ADMIN.APP_INFO.SAVE\" | translate }}            }                              @if (saved()) {                                        {{ \"ADMIN.APP_INFO.SAVED\" | translate }}                      }                        @if (!loaded()) {                          {{ \"COMMON.LOADING\" | translate }}            }'\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminAppInfoPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminCompaniesFacade.html":{"url":"injectables/AdminCompaniesFacade.html","title":"injectable - AdminCompaniesFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminCompaniesFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-companies.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Private\n                                    Readonly\n                                listCompanies\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                search\n                            \n                            \n                                    Readonly\n                                sector\n                            \n                            \n                                setLimit\n                            \n                            \n                                    Readonly\n                                sortBy\n                            \n                            \n                                    Readonly\n                                sortOrder\n                            \n                            \n                                    Readonly\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applySearch\n                            \n                            \n                                    Async\n                                nextPage\n                            \n                            \n                                    Async\n                                prevPage\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                setSector\n                            \n                            \n                                setSort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applySearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    applySearch(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prevPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prevPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSector\n                        \n                    \n                \n            \n            \n                \nsetSector(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSort\n                        \n                    \n                \n            \n            \n                \nsetSort(field: \"tax_id\" | \"name\" | \"sector\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-companies.facade.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        \"tax_id\" | \"name\" | \"sector\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ListCompaniesUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLimit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('asc')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-companies.facade.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport type { CompanyItem } from '@core/ports';\nimport { ListCompaniesUseCase } from '@core/use-cases';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminCompaniesFacade {\n  private readonly listCompanies = inject(ListCompaniesUseCase);\n\n  readonly items = signal([]);\n  readonly page = signal(1);\n  readonly limit = signal(20);\n  readonly total = signal(0);\n  readonly sortBy = signal('');\n  readonly sortOrder = signal('asc');\n  readonly search = signal('');\n  readonly loading = signal(false);\n  readonly error = signal(null);\n  // optional sector filter (UI-driven)\n  readonly sector = signal('');\n\n  async refresh() {\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.listCompanies.execute({\n        page: this.page(),\n        limit: this.limit(),\n        search: this.search() || undefined,\n        sector: this.sector() || undefined,\n        sort_by: (this.sortBy() || undefined) as any,\n        sort_order: this.sortOrder(),\n      });\n      this.items.set(res.items || []);\n      this.total.set(res.total || 0);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando compañías');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async applySearch(value: string) {\n    this.search.set(value.trim());\n    this.page.set(1);\n    await this.refresh();\n  }\n\n  setSector(value: string) {\n    this.sector.set((value || '').trim());\n    this.page.set(1);\n    return this.refresh();\n  }\n\n  async nextPage() {\n    if (this.page() * this.limit() >= this.total()) return;\n    this.page.update((p) => p + 1);\n    await this.refresh();\n  }\n\n  async prevPage() {\n    if (this.page()  p - 1);\n    await this.refresh();\n  }\n\n  setSort(field: 'tax_id' | 'name' | 'sector') {\n    if (this.sortBy() === field) {\n      this.sortOrder.update((o) => (o === 'asc' ? 'desc' : 'asc'));\n    } else {\n      this.sortBy.set(field);\n      this.sortOrder.set('asc');\n    }\n    this.page.set(1);\n    this.refresh();\n  }\n\n  setLimit = async (limit: number) => {\n    if (!Number.isFinite(limit) || limit \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminCompaniesPage.html":{"url":"components/AdminCompaniesPage.html","title":"component - AdminCompaniesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminCompaniesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/admin/companies.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-companies\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./companies.css\n            \n\n\n\n            \n                templateUrl\n                ./companies.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                facade\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                filteredItems\n                            \n                            \n                                form\n                            \n                            \n                                items\n                            \n                            \n                                limit\n                            \n                            \n                                loading\n                            \n                            \n                                page\n                            \n                            \n                                sectors\n                            \n                            \n                                selectedSector\n                            \n                            \n                                sortBy\n                            \n                            \n                                sortOrder\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applySearch\n                            \n                            \n                                    Async\n                                copyTaxId\n                            \n                            \n                                    Async\n                                nextPage\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                prevPage\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                selectSector\n                            \n                            \n                                setSort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applySearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    applySearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        copyTaxId\n                        \n                    \n                \n            \n            \n                \n                        \n                    copyTaxId(taxId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prevPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prevPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSector\n                        \n                    \n                \n            \n            \n                \nselectSector(sector: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sector\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSort\n                        \n                    \n                \n            \n            \n                \nsetSort(field: \"tax_id\" | \"name\" | \"sector\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/companies.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        \"tax_id\" | \"name\" | \"sector\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.error\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        facade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminCompaniesFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const sector = this.selectedSector();\n    const arr = this.items() || [];\n    if (!sector) return arr;\n    return arr.filter((i) => i.sector === sector);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({ search: [''] })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.items\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.limit\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.loading\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.page\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sectors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const set = new Set();\n    for (const it of this.items() || []) {\n      if (it.sector) set.add(it.sector);\n    }\n    return Array.from(set).sort((a, b) => a.localeCompare(b));\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.sortBy\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.sortOrder\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.total\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/companies.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  computed,\n  inject,\n  signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\n// Using facade types; no direct item type import needed here\nimport { AdminCompaniesFacade } from '@app/application/admin/admin-companies.facade';\n\n@Component({\n  selector: 'app-admin-companies',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TranslateModule, RouterModule],\n  templateUrl: './companies.html',\n  styleUrls: ['./companies.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminCompaniesPage {\n  private readonly facade = inject(AdminCompaniesFacade);\n  private readonly fb = inject(FormBuilder);\n\n  items = this.facade.items;\n  // UI-only filters derived from current items\n  selectedSector = signal('');\n  sectors = computed(() => {\n    const set = new Set();\n    for (const it of this.items() || []) {\n      if (it.sector) set.add(it.sector);\n    }\n    return Array.from(set).sort((a, b) => a.localeCompare(b));\n  });\n  filteredItems = computed(() => {\n    const sector = this.selectedSector();\n    const arr = this.items() || [];\n    if (!sector) return arr;\n    return arr.filter((i) => i.sector === sector);\n  });\n  page = this.facade.page;\n  limit = this.facade.limit;\n  total = this.facade.total;\n  sortBy = this.facade.sortBy;\n  sortOrder = this.facade.sortOrder;\n  error = this.facade.error;\n  loading = this.facade.loading;\n  form = this.fb.group({ search: [''] });\n\n  async ngOnInit() {\n    await this.refresh();\n  }\n\n  async refresh() {\n    await this.facade.refresh();\n  }\n\n  async applySearch() {\n    await this.facade.applySearch(this.form.value.search?.trim() || '');\n  }\n\n  async nextPage() {\n    await this.facade.nextPage();\n  }\n\n  async prevPage() {\n    await this.facade.prevPage();\n  }\n\n  setSort(field: 'tax_id' | 'name' | 'sector') {\n    this.facade.setSort(field);\n  }\n\n  selectSector(sector: string) {\n    const next = this.selectedSector() === sector ? '' : sector;\n    this.selectedSector.set(next);\n    this.facade.setSector(next);\n  }\n\n  async copyTaxId(taxId: string) {\n    try {\n      if (typeof navigator !== 'undefined' && navigator.clipboard?.writeText) {\n        await navigator.clipboard.writeText(taxId);\n      }\n    } catch {\n      /* noop */\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n        {{ \"ADMIN.COMPANIES.TITLE\" | translate }}\n      \n      \n        Explora y gestiona la información de empresas registradas\n      \n    \n  \n\n  \n  \n    \n      \n        \n        \n        \n          \n          {{ \"ADMIN.COMPANIES.SEARCH_BUTTON\" | translate }}\n        \n      \n      \n      \n        \n          \n            \n            {{ \"ADMIN.COMPANIES.LIMIT\" | translate }}\n          \n          \n            10\n            20\n            50\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n      {{ \"ADMIN.COMPANIES.SECTOR\" | translate }}\n    \n    \n      \n        \n        {{ \"COMMON.ALL\" | translate }}\n      \n      @for (s of sectors(); track s) {\n        \n          \n          {{ s }}\n        \n      }\n    \n  \n\n  \n  @if (error()) {\n    \n      \n      {{ error() }}\n    \n  }\n\n  \n  \n    \n      \n        \n        Lista de Empresas\n      \n      \n        \n          \n          {{ items().length || 0 }} empresas\n        \n        •\n        \n          \n          {{ total() || \"∞\" }} total\n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n                \n                {{ \"ADMIN.COMPANIES.COLUMNS.TAX_ID\" | translate }}\n                @if (sortBy() === 'tax_id') {\n                  \n                } @else {\n                  \n                }\n              \n            \n            \n              \n                \n                {{ \"ADMIN.COMPANIES.COLUMNS.NAME\" | translate }}\n                @if (sortBy() === 'name') {\n                  \n                } @else {\n                  \n                }\n              \n            \n            \n              \n                \n                {{ \"ADMIN.COMPANIES.COLUMNS.SECTOR\" | translate }}\n                @if (sortBy() === 'sector') {\n                  \n                } @else {\n                  \n                }\n              \n            \n            \n              \n              {{ \"COMMON.DASHBOARD\" | translate }}\n            \n          \n        \n        \n          @for (c of filteredItems(); track c.tax_id) {\n            \n              \n                \n                  {{ c.tax_id }}\n                  \n                    \n                  \n                \n              \n              \n                \n                  @if (c.name) {\n                    \n                    {{ c.name }}\n                  } @else {\n                    \n                      \n                      Sin nombre\n                    \n                  }\n                \n              \n              \n                @if (c.sector) {\n                  \n                    \n                    {{ c.sector }}\n                  \n                } @else {\n                  \n                    \n                    Sin sector\n                  \n                }\n              \n              \n                \n                  \n                  {{ 'ADMIN.COMPANIES.OPEN_DASHBOARD' | translate }}\n                \n              \n            \n          }\n        \n      \n    \n  \n\n  \n  \n    \n      \n      {{ \"COMMON.PAGE\" | translate }} {{ page() }}\n      •\n      {{ items().length || 0 }} / {{ total() || \"∞\" }}\n    \n    \n    \n      \n        \n        {{ \"COMMON.PREVIOUS\" | translate }}\n      \n      \n      \n        {{ page() }}\n      \n      \n      = total()\"\n      >\n        {{ \"COMMON.NEXT\" | translate }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./companies.css\n                \n                /* Importar estilos base */\n@import './dashboard.css';\n\n/* ============================================\n   COMPANIES PAGE - DISEÑO MODERNO\n   ============================================ */\n\n.companies-container {\n  min-height: 100vh;\n  padding: 2rem;\n  background: \n    radial-gradient(circle at 25% 50%, hsl(var(--primary) / 0.12) 0%, transparent 50%),\n    radial-gradient(circle at 75% 25%, hsl(var(--accent) / 0.12) 0%, transparent 50%),\n    linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--muted) / 0.3) 100%);\n  color: hsl(var(--foreground));\n}\n\n/* ============================================\n   HEADER SECTION\n   ============================================ */\n\n.companies-header {\n  margin-bottom: 2.5rem;\n  text-align: center;\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-title {\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: hsl(var(--foreground));\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.title-icon {\n  font-size: 2rem;\n  color: hsl(var(--primary));\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n}\n\n.page-subtitle {\n  font-size: 1.1rem;\n  color: hsl(var(--muted-foreground));\n  font-weight: 400;\n  opacity: 0.8;\n}\n\n/* ============================================\n   SEARCH SECTION\n   ============================================ */\n\n.search-section {\n  margin-bottom: 1.5rem;\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1.5rem;\n  padding: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 20px 50px rgba(0, 0, 0, 0.1),\n    0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.search-form {\n  display: flex;\n  gap: 1.5rem;\n  align-items: flex-end;\n  flex-wrap: wrap;\n}\n\n.search-input-group {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-width: 300px;\n  background: hsl(var(--background) / 0.8);\n  border: 2px solid hsl(var(--border) / 0.3);\n  border-radius: 0.75rem;\n  padding: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n.search-input-group:focus-within {\n  border-color: hsl(var(--primary));\n  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.1);\n}\n\n.search-icon {\n  color: hsl(var(--muted-foreground));\n  font-size: 1rem;\n  margin: 0 0.75rem;\n}\n\n.search-input {\n  flex: 1;\n  border: none;\n  background: transparent;\n  color: hsl(var(--foreground));\n  font-size: 1rem;\n  outline: none;\n  padding: 0.5rem 0;\n}\n\n.search-input::placeholder {\n  color: hsl(var(--muted-foreground));\n  opacity: 0.7;\n}\n\n.search-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.875rem 1.5rem;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));\n  color: white;\n  border: none;\n  border-radius: 0.75rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px hsl(var(--primary) / 0.3);\n  white-space: nowrap;\n}\n\n.search-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px hsl(var(--primary) / 0.4);\n}\n\n.filter-controls {\n  display: flex;\n  gap: 1rem;\n  align-items: flex-end;\n}\n\n.limit-control {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.control-label {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: hsl(var(--foreground));\n}\n\n.control-label i {\n  color: hsl(var(--primary));\n  font-size: 0.8rem;\n}\n\n.limit-select {\n  padding: 0.5rem 0.75rem;\n  border: 2px solid hsl(var(--border) / 0.3);\n  border-radius: 0.5rem;\n  background: hsl(var(--background) / 0.8);\n  color: hsl(var(--foreground));\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.limit-select:focus {\n  outline: none;\n  border-color: hsl(var(--primary));\n  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.1);\n}\n\n/* ============================================\n   SECTOR FILTER\n   ============================================ */\n\n.sector-filter {\n  margin-bottom: 1.5rem;\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1.5rem;\n  padding: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 15px 35px rgba(0, 0, 0, 0.08),\n    0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.filter-header {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  margin-bottom: 1rem;\n}\n\n.filter-header i {\n  color: hsl(var(--primary));\n  font-size: 1.1rem;\n}\n\n.sector-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n}\n\n.sector-tag {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border: 2px solid hsl(var(--border) / 0.3);\n  border-radius: 2rem;\n  background: hsl(var(--background) / 0.8);\n  color: hsl(var(--foreground));\n  font-size: 0.85rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.sector-tag:hover {\n  border-color: hsl(var(--primary) / 0.5);\n  background: hsl(var(--primary) / 0.1);\n  transform: translateY(-1px);\n}\n\n.sector-tag.active {\n  border-color: hsl(var(--primary));\n  background: hsl(var(--primary));\n  color: white;\n  box-shadow: 0 4px 15px hsl(var(--primary) / 0.3);\n}\n\n.sector-tag i {\n  font-size: 0.8rem;\n}\n\n/* ============================================\n   ERROR ALERT\n   ============================================ */\n\n.error-alert {\n  background: linear-gradient(135deg, #ef4444, #dc2626);\n  color: white;\n  padding: 1rem 1.5rem;\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 1.5rem;\n  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n}\n\n.error-alert i {\n  font-size: 1.2rem;\n  animation: shake 2s infinite;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-2px); }\n  75% { transform: translateX(2px); }\n}\n\n/* ============================================\n   TABLE CONTAINER\n   ============================================ */\n\n.table-container {\n  margin-bottom: 1.5rem;\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 20px 50px rgba(0, 0, 0, 0.1),\n    0 1px 3px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.table-header {\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  padding: 1.5rem;\n  border-bottom: 1px solid hsl(var(--border) / 0.2);\n  background: hsl(var(--background) / 0.5);\n  gap: 1rem;\n}\n\n.table-title {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  margin: 0;\n  flex: 1;\n}\n\n.table-title i {\n  color: hsl(var(--primary));\n}\n\n.table-stats {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  font-size: 0.85rem;\n  color: hsl(var(--muted-foreground));\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n}\n\n.stat-separator {\n  opacity: 0.5;\n}\n\n.table-wrapper {\n  overflow-x: auto;\n}\n\n/* ============================================\n   COMPANIES TABLE\n   ============================================ */\n\n.companies-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.companies-table thead {\n  background: hsl(var(--muted) / 0.1);\n}\n\n.companies-table th {\n  padding: 1rem 1.5rem;\n  text-align: left;\n  border-bottom: 2px solid hsl(var(--border) / 0.2);\n}\n\n.companies-table th.actions-header {\n  text-align: center;\n}\n\n.sort-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 0.75rem;\n  background: transparent;\n  border: none;\n  border-radius: 0.5rem;\n  color: hsl(var(--foreground));\n  font-weight: 600;\n  font-size: 0.85rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.sort-btn:hover {\n  background: hsl(var(--muted) / 0.2);\n  color: hsl(var(--primary));\n}\n\n.sort-btn i {\n  font-size: 0.8rem;\n}\n\n.sort-inactive {\n  opacity: 0.4;\n}\n\n.company-row {\n  transition: all 0.3s ease;\n  border-bottom: 1px solid hsl(var(--border) / 0.1);\n}\n\n.company-row:hover {\n  background: hsl(var(--muted) / 0.1);\n  transform: scale(1.01);\n}\n\n.companies-table td {\n  padding: 1rem 1.5rem;\n  vertical-align: middle;\n}\n\n/* ============================================\n   TABLE CELLS\n   ============================================ */\n\n.tax-id-cell {\n  min-width: 180px;\n}\n\n.tax-id-group {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.tax-id-badge {\n  background: hsl(var(--primary) / 0.1);\n  color: hsl(var(--primary));\n  padding: 0.375rem 0.75rem;\n  border-radius: 0.5rem;\n  font-family: monospace;\n  font-size: 0.85rem;\n  font-weight: 600;\n  border: 1px solid hsl(var(--primary) / 0.2);\n}\n\n.copy-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2rem;\n  height: 2rem;\n  background: hsl(var(--muted) / 0.2);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 0.375rem;\n  color: hsl(var(--muted-foreground));\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.copy-btn:hover {\n  background: hsl(var(--primary) / 0.1);\n  border-color: hsl(var(--primary) / 0.3);\n  color: hsl(var(--primary));\n  transform: scale(1.1);\n}\n\n.name-cell {\n  min-width: 200px;\n}\n\n.company-name {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: 500;\n}\n\n.name-icon {\n  color: hsl(var(--primary));\n  font-size: 0.9rem;\n}\n\n.no-name {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: hsl(var(--muted-foreground));\n  opacity: 0.7;\n  font-style: italic;\n}\n\n.sector-cell {\n  min-width: 150px;\n}\n\n.sector-badge {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: hsl(var(--accent) / 0.1);\n  color: hsl(var(--accent));\n  padding: 0.375rem 0.75rem;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n  font-weight: 500;\n  border: 1px solid hsl(var(--accent) / 0.2);\n  max-width: fit-content;\n}\n\n.no-sector {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: hsl(var(--muted-foreground));\n  opacity: 0.7;\n  font-style: italic;\n}\n\n.actions-cell {\n  text-align: center;\n  min-width: 150px;\n}\n\n.dashboard-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: linear-gradient(135deg, hsl(var(--primary) / 0.1), hsl(var(--primary) / 0.05));\n  border: 1px solid hsl(var(--primary) / 0.3);\n  border-radius: 0.5rem;\n  color: hsl(var(--primary));\n  font-size: 0.85rem;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.dashboard-btn:hover {\n  background: hsl(var(--primary));\n  color: white;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px hsl(var(--primary) / 0.3);\n}\n\n/* ============================================\n   PAGINATION\n   ============================================ */\n\n.pagination-section {\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1.5rem;\n  padding: 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 15px 35px rgba(0, 0, 0, 0.08),\n    0 1px 3px rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: 1rem;\n}\n\n.pagination-info {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n  color: hsl(var(--muted-foreground));\n  flex: 1;\n}\n\n.separator {\n  opacity: 0.5;\n}\n\n.pagination-controls {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.nav-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  background: hsl(var(--background) / 0.8);\n  border: 2px solid hsl(var(--border) / 0.3);\n  border-radius: 0.75rem;\n  color: hsl(var(--foreground));\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.nav-btn:hover:not(:disabled) {\n  border-color: hsl(var(--primary) / 0.5);\n  background: hsl(var(--primary) / 0.1);\n  transform: translateY(-1px);\n}\n\n.nav-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.page-indicator {\n  background: hsl(var(--primary) / 0.1);\n  border: 2px solid hsl(var(--primary) / 0.3);\n  border-radius: 0.75rem;\n  padding: 0.75rem 1.25rem;\n}\n\n.current-page {\n  font-weight: 600;\n  color: hsl(var(--primary));\n  font-size: 1rem;\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 1024px) {\n  .search-form {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .search-input-group {\n    min-width: auto;\n  }\n  \n  .filter-controls {\n    justify-content: center;\n  }\n  \n  .table-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 1rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .companies-container {\n    padding: 1rem;\n  }\n  \n  .page-title {\n    font-size: 2rem;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  \n  .title-icon {\n    font-size: 1.5rem;\n  }\n  \n  .sector-tags {\n    justify-content: center;\n  }\n  \n  .companies-table th,\n  .companies-table td {\n    padding: 0.75rem;\n  }\n  \n  .tax-id-group {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n  \n  .pagination-section {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .pagination-controls {\n    width: 100%;\n    justify-content: space-between;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \"ADMIN.COMPANIES.TITLE\" | translate }}                    Explora y gestiona la información de empresas registradas                                                                      {{ \"ADMIN.COMPANIES.SEARCH_BUTTON\" | translate }}                                                                    {{ \"ADMIN.COMPANIES.LIMIT\" | translate }}                                10            20            50                                                  {{ \"ADMIN.COMPANIES.SECTOR\" | translate }}                              {{ \"COMMON.ALL\" | translate }}            @for (s of sectors(); track s) {                            {{ s }}              }          @if (error()) {                {{ error() }}      }                              Lista de Empresas                                        {{ items().length || 0 }} empresas                •                            {{ total() || \"∞\" }} total                                                                                                        {{ \"ADMIN.COMPANIES.COLUMNS.TAX_ID\" | translate }}                @if (sortBy() === \\'tax_id\\') {                                  } @else {                                  }                                                                                    {{ \"ADMIN.COMPANIES.COLUMNS.NAME\" | translate }}                @if (sortBy() === \\'name\\') {                                  } @else {                                  }                                                                                    {{ \"ADMIN.COMPANIES.COLUMNS.SECTOR\" | translate }}                @if (sortBy() === \\'sector\\') {                                  } @else {                                  }                                                                  {{ \"COMMON.DASHBOARD\" | translate }}                                                @for (c of filteredItems(); track c.tax_id) {                                                            {{ c.tax_id }}                                                                                                                                      @if (c.name) {                                        {{ c.name }}                  } @else {                                                                Sin nombre                                      }                                                            @if (c.sector) {                                                          {{ c.sector }}                                  } @else {                                                          Sin sector                                  }                                                                                {{ \\'ADMIN.COMPANIES.OPEN_DASHBOARD\\' | translate }}                                                    }                                        {{ \"COMMON.PAGE\" | translate }} {{ page() }}      •      {{ items().length || 0 }} / {{ total() || \"∞\" }}                                  {{ \"COMMON.PREVIOUS\" | translate }}                          {{ page() }}                  = total()\"      >        {{ \"COMMON.NEXT\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminCompaniesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminCompanyDashboardDTO.html":{"url":"interfaces/AdminCompanyDashboardDTO.html","title":"interface - AdminCompanyDashboardDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminCompanyDashboardDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-stats.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            financials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imputation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            llm_insights\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metrics\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            missing_data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenarios\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score_source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sector\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sector_comparison\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            signals\n                                        \n                                \n                                \n                                        \n                                            tax_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributions:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        financials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        financials:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imputation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imputation:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        llm_insights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        llm_insights:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metrics:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missing_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missing_data:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarios\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenarios:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score_source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score_source:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sector:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sector_comparison\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sector_comparison:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signals:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeSeriesPoint {\n  date: string;\n  count: number;\n}\nexport interface AdminStatsDTO {\n  totals: Record;\n  files_breakdown: Record;\n  timeseries: Record;\n}\n\nexport interface AdminCompanyDashboardDTO {\n  // Minimal identity\n  tax_id: string;\n  name?: string | null;\n  sector?: string | null;\n\n  // New enriched payload from backend\n  company?: {\n    tax_id?: string;\n    business_name?: string;\n    legal_status?: string;\n    ciiu?: string;\n    company_type?: string;\n    incorporation_date?: string; // ISO or YYYY-MM-DD\n    address?: string;\n    representatives?: any[];\n    representative?: string;\n    source_url?: string;\n    additional?: {\n      is_state_supplier?: boolean;\n      offers_remittances?: boolean;\n      sells_on_credit?: boolean;\n      belongs_to_mv?: boolean;\n      is_public_interest?: boolean;\n      is_bic?: boolean;\n      bic_since_year?: number | null;\n      bic_impact_areas?: string[] | null;\n      judicial_disposition?: string | null;\n      last_corp_update_at?: string | null;\n      is_foreign_domiciled?: boolean;\n    };\n    fetched_at?: string;\n  } | null;\n  score?: number | null;\n  score_source?: string | null;\n  financials?: any[];\n  contributions?: any[];\n  sector_comparison?: any;\n  missing_data?: string[];\n  imputation?: { error?: string; missing?: string[] } | null;\n  scenarios?: any[];\n\n  // Existing fields\n  llm_insights?: any; // can vary\n  metrics?: Record;\n  signals?: Array;\n  overview?: string | null;\n}\n\nexport abstract class AdminStatsPort {\n  abstract getOverview(days?: number): Promise;\n  abstract getCompanyDashboard(\n    taxId: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminCompanyPage.html":{"url":"components/AdminCompanyPage.html","title":"component - AdminCompanyPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminCompanyPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/admin/company.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-company\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./company.css\n            \n\n\n\n            \n                templateUrl\n                ./company.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                chart\n                            \n                            \n                                    Readonly\n                                company\n                            \n                            \n                                    Readonly\n                                companyError\n                            \n                            \n                                    Readonly\n                                companyLoading\n                            \n                            \n                                copyText\n                            \n                            \n                                    Readonly\n                                metricKeys\n                            \n                            \n                                    \n                                    Optional\n                                metricsChartRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                metricsEffect\n                            \n                            \n                                    Private\n                                    Readonly\n                                route\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                stats\n                            \n                            \n                                    Readonly\n                                taxId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                    Private\n                                destroyChart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                renderChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/company.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyChart\n                        \n                    \n                \n            \n            \n                \n                        \n                    destroyChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/company.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/company.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderChart\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/company.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.stats.company\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        companyError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.stats.companyError\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        companyLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.stats.companyLoading\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        metricKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const m = this.company()?.metrics || null;\n    return m ? Object.keys(m) : [];\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metricsChartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('metricsChart', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        metricsEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(() => {\n    const keys = this.metricKeys();\n    const loading = this.companyLoading();\n    if (!loading && keys.length) {\n      setTimeout(() => this.renderChart());\n    } else {\n      this.destroyChart();\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        stats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminStatsFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        taxId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/company.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, computed, effect, inject, signal, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Chart from 'chart.js/auto';\nimport { AdminStatsFacade } from '@app/application/admin/admin-stats.facade';\n\n@Component({\n  selector: 'app-admin-company',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, RouterModule],\n  templateUrl: './company.html',\n  styleUrls: ['./company.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminCompanyPage {\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly stats = inject(AdminStatsFacade);\n\n  readonly taxId = signal(null);\n  readonly company = this.stats.company;\n  readonly companyLoading = this.stats.companyLoading;\n  readonly companyError = this.stats.companyError;\n  readonly metricKeys = computed(() => {\n    const m = this.company()?.metrics || null;\n    return m ? Object.keys(m) : [];\n  });\n\n  @ViewChild('metricsChart', { static: false }) metricsChartRef?: ElementRef;\n  private chart?: Chart;\n\n  private readonly metricsEffect = effect(() => {\n    const keys = this.metricKeys();\n    const loading = this.companyLoading();\n    if (!loading && keys.length) {\n      setTimeout(() => this.renderChart());\n    } else {\n      this.destroyChart();\n    }\n  });\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(async (pm) => {\n      const id = pm.get('taxId');\n      this.taxId.set(id);\n      if (id) await this.stats.loadCompany(id);\n    });\n  }\n\n  back() { this.router.navigate(['/admin/companies']); }\n\n  copyText = async (text?: string | null) => {\n    if (!text) return;\n    try { await navigator.clipboard?.writeText(text); } catch {}\n  };\n\n  private renderChart() {\n    const el = this.metricsChartRef?.nativeElement;\n    const data = this.company()?.metrics || {};\n    if (!el || !Object.keys(data).length) return;\n    this.destroyChart();\n    const labels = Object.keys(data);\n    const values = labels.map((k) => Number((data as any)[k]) || 0);\n    this.chart = new Chart(el, {\n      type: 'bar',\n      data: {\n        labels,\n        datasets: [{ label: 'Metrics', data: values, backgroundColor: 'rgba(59,130,246,0.4)', borderColor: 'rgba(59,130,246,1)', borderWidth: 1 }]\n      },\n      options: { responsive: true, plugins: { legend: { display: false } }, scales: { y: { beginAtZero: true } } }\n    });\n  }\n\n  private destroyChart() {\n    try { this.chart?.destroy(); } catch {} finally { this.chart = undefined; }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n        Admin\n      \n      \n      \n        \n        {{ 'ADMIN.COMPANIES.TITLE' | translate }}\n      \n      \n      {{ taxId() }}\n    \n  \n\n  \n  \n    \n      \n        \n        {{ 'ADMIN.COMPANIES.DASHBOARD_TITLE' | translate }}\n        {{ taxId() }}\n      \n      \n        \n        {{ 'COMMON.BACK' | translate }}\n      \n    \n  \n\n  @if (companyLoading()) {\n  \n      \n      \n        \n          \n          \n        \n        \n          \n          \n        \n        \n          \n          \n        \n      \n      \n        \n        \n        \n      \n      \n        \n      \n    \n  } @else if (companyError()) {\n    {{ companyError() }}\n  } @else if (company()) {\n  \n      \n        {{ 'ADMIN.COMPANIES.COLUMNS.TAX_ID' | translate }}\n        \n          {{ company()!.tax_id }}\n          ⧉\n        \n      \n      \n        {{ 'ADMIN.COMPANIES.COLUMNS.NAME' | translate }}\n        \n          {{ company()!.name || company()!.company?.business_name || '-' }}\n          @if (company()!.name || company()!.company?.business_name) { ⧉ }\n        \n      \n      \n        {{ 'ADMIN.COMPANIES.COLUMNS.SECTOR' | translate }}\n        \n          {{ company()!.sector || '-' }}\n          @if (company()!.sector) { ⧉ }\n        \n      \n      @if (company()!.company?.legal_status) {\n        \n          Estado legal\n          {{ company()!.company!.legal_status }}\n        \n      }\n      @if (company()!.company?.ciiu) {\n        \n          CIIU\n          {{ company()!.company!.ciiu }}\n        \n      }\n      @if (company()!.company?.company_type) {\n        \n          Tipo\n          {{ company()!.company!.company_type }}\n        \n      }\n      @if (company()!.company?.incorporation_date) {\n        \n          Constitución\n          {{ company()!.company!.incorporation_date }}\n        \n      }\n      @if (company()!.company?.address) {\n        \n          Dirección\n          {{ company()!.company!.address }}\n        \n      }\n      @if (company()!.company?.source_url) {\n        \n          Ver fuente ↗\n        \n      }\n    \n\n  \n      @if (company()!.score !== undefined && company()!.score !== null) {\n        \n          Score\n          \n            {{ company()!.score }}\n            @if (company()!.score_source) { {{ company()!.score_source }} }\n          \n        \n      }\n      @if (company()!.company?.fetched_at) {\n        \n          Actualizado\n          {{ company()!.company!.fetched_at }}\n        \n      }\n    \n\n    @if (company()!.imputation?.error) {\n      {{ company()!.imputation!.error }}\n    }\n    @if (company()!.missing_data?.length) {\n  \n        Datos faltantes\n        \n          @for (m of company()!.missing_data!; track m) { {{ m }} }\n        \n      \n    }\n\n    @if (company()!.company?.additional) {\n  \n        Atributos adicionales\n        \n          @if (company()!.company!.additional!.is_state_supplier !== undefined) {\n            Proveedor del Estado: {{ company()!.company!.additional!.is_state_supplier ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.offers_remittances !== undefined) {\n            Remesas: {{ company()!.company!.additional!.offers_remittances ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.sells_on_credit !== undefined) {\n            Vende a crédito: {{ company()!.company!.additional!.sells_on_credit ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.belongs_to_mv !== undefined) {\n            Pertenece a MV: {{ company()!.company!.additional!.belongs_to_mv ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.is_public_interest !== undefined) {\n            Interés público: {{ company()!.company!.additional!.is_public_interest ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.is_bic !== undefined) {\n            BIC: {{ company()!.company!.additional!.is_bic ? 'Sí' : 'No' }}\n          }\n          @if (company()!.company!.additional!.judicial_disposition) {\n            Disposición judicial: {{ company()!.company!.additional!.judicial_disposition }}\n          }\n        \n      \n    }\n\n    @if (company()!.overview) {\n      {{ company()!.overview }}\n    }\n\n    @if (company()!.metrics) {\n  \n        {{ 'ADMIN.COMPANIES.METRICS' | translate }}\n        \n          @for (k of metricKeys(); track k) {\n            \n              {{ k }}\n              {{ company()!.metrics![k] | number:'1.0-2' }}\n            \n          }\n        \n        \n          \n        \n      \n    }\n\n    @if (company()!.signals?.length) {\n  \n        {{ 'ADMIN.COMPANIES.SIGNALS' | translate }}\n        \n          @for (s of company()!.signals!; track s.key) {\n            {{ s.key }}: {{ s.value }}\n          }\n        \n      \n    }\n\n    @if (company()!.llm_insights) {\n      \n        {{ 'ADMIN.COMPANIES.LLM_INSIGHTS' | translate }}\n        \n          @if (ins.narrative) {\n            {{ ins.narrative }}\n          }\n          \n            @if (ins.risk_summary) { {{ ins.risk_summary }} }\n            @if (ins.reputation) { {{ ins.reputation }} }\n            @if (ins.credit_recommendation) { {{ ins.credit_recommendation }} }\n          \n          @if (ins.key_factors?.length) {\n            \n              Factores clave\n              @for (k of ins.key_factors; track k) { {{ k }} }\n            \n          }\n          @if (ins.warnings?.length) {\n            \n              Advertencias\n              @for (w of ins.warnings; track w) { {{ w }} }\n            \n          }\n          @if (ins.suggested_actions?.length) {\n            \n              Acciones sugeridas\n              @for (a of ins.suggested_actions; track a) { {{ a }} }\n            \n          }\n          @if (ins.opportunity_zones?.length) {\n            \n              Zonas de oportunidad\n              @for (o of ins.opportunity_zones; track o) { {{ o }} }\n            \n          }\n          @if (ins.early_alerts?.length) {\n            \n              Alertas tempranas\n              @for (e of ins.early_alerts; track e) { {{ e }} }\n            \n          }\n          @if (ins.data_quality_flags?.length) {\n            \n              Banderas de calidad de datos\n              @for (f of ins.data_quality_flags; track f) { {{ f }} }\n            \n          }\n          Ver JSON crudo{{ (ins | json) }}\n        \n      \n    }\n  } @else {\n    {{ 'COMMON.NO_SUMMARY' | translate }}\n  }\n\n\n    \n\n    \n                \n                    ./company.css\n                \n                /* Importar estilos base */\n@import './dashboard.css';\n\n/* ============================================\n   COMPANY PAGE - DISEÑO MODERNO\n   ============================================ */\n\n.company-container {\n  min-height: 100vh;\n  padding: 2rem;\n  background: \n    radial-gradient(circle at 30% 40%, hsl(var(--primary) / 0.12) 0%, transparent 50%),\n    radial-gradient(circle at 70% 60%, hsl(var(--accent) / 0.12) 0%, transparent 50%),\n    linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--muted) / 0.3) 100%);\n  color: hsl(var(--foreground));\n}\n\n/* ============================================\n   BREADCRUMB NAVIGATION\n   ============================================ */\n\n.breadcrumb-nav {\n  margin-bottom: 2rem;\n  background: hsl(var(--card) / 0.3);\n  border-radius: 1rem;\n  padding: 1rem 1.5rem;\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 10px 25px rgba(0, 0, 0, 0.05),\n    0 1px 3px rgba(0, 0, 0, 0.03);\n}\n\n.breadcrumb-list {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  font-size: 0.9rem;\n}\n\n.breadcrumb-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: hsl(var(--muted-foreground));\n  text-decoration: none;\n  transition: all 0.3s ease;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n}\n\n.breadcrumb-item:hover {\n  color: hsl(var(--primary));\n  background: hsl(var(--primary) / 0.1);\n}\n\n.breadcrumb-separator {\n  color: hsl(var(--muted-foreground));\n  opacity: 0.5;\n  font-size: 0.8rem;\n}\n\n.breadcrumb-current {\n  color: hsl(var(--primary));\n  font-weight: 600;\n  font-family: monospace;\n  background: hsl(var(--primary) / 0.1);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n}\n\n/* ============================================\n   HEADER SECTION\n   ============================================ */\n\n.company-header {\n  margin-bottom: 2.5rem;\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: 2rem;\n  flex-wrap: wrap;\n}\n\n.page-title {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 2rem;\n  font-weight: 700;\n  color: hsl(var(--foreground));\n  flex: 1;\n}\n\n.title-icon {\n  color: hsl(var(--primary));\n  font-size: 1.8rem;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n}\n\n.tax-id-badge {\n  background: hsl(var(--primary) / 0.1);\n  color: hsl(var(--primary));\n  padding: 0.5rem 1rem;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  font-weight: 600;\n  border: 1px solid hsl(var(--primary) / 0.2);\n  font-family: monospace;\n}\n\n.back-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  background: hsl(var(--muted) / 0.2);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 0.75rem;\n  color: hsl(var(--foreground));\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.back-btn:hover {\n  background: hsl(var(--primary) / 0.1);\n  border-color: hsl(var(--primary) / 0.3);\n  color: hsl(var(--primary));\n  transform: translateX(-3px);\n}\n\n/* ============================================\n   MODERN CARD IMPROVEMENTS\n   ============================================ */\n\n.modern-card {\n  background: hsl(var(--card) / 0.3);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 1rem;\n  backdrop-filter: blur(20px);\n  box-shadow: \n    0 10px 25px rgba(0, 0, 0, 0.05),\n    0 1px 3px rgba(0, 0, 0, 0.03);\n  margin-bottom: 1.5rem;\n  transition: all 0.3s ease;\n}\n\n.modern-card:hover {\n  border-color: hsl(var(--primary) / 0.2);\n  box-shadow: \n    0 15px 35px rgba(0, 0, 0, 0.08),\n    0 5px 15px rgba(0, 0, 0, 0.05);\n  transform: translateY(-2px);\n}\n\n/* ============================================\n   GRID LAYOUT IMPROVEMENTS\n   ============================================ */\n\n.grid {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.grid-cols-1 {\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n}\n\n.grid-cols-2 {\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n}\n\n.grid-cols-3 {\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n}\n\n/* ============================================\n   BADGES AND STATUS INDICATORS\n   ============================================ */\n\n.badge {\n  padding: 0.5rem 0.75rem;\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border: 1px solid transparent;\n  transition: all 0.3s ease;\n}\n\n.badge-outline {\n  background: transparent;\n  border-color: hsl(var(--border));\n  color: hsl(var(--foreground));\n}\n\n.badge-outline:hover {\n  background: hsl(var(--muted) / 0.2);\n}\n\n.badge-ghost {\n  background: hsl(var(--muted) / 0.1);\n  color: hsl(var(--muted-foreground));\n}\n\n.badge-success {\n  background: hsl(var(--success) / 0.1);\n  color: hsl(var(--success));\n  border-color: hsl(var(--success) / 0.2);\n}\n\n.badge-error {\n  background: hsl(var(--destructive) / 0.1);\n  color: hsl(var(--destructive));\n  border-color: hsl(var(--destructive) / 0.2);\n}\n\n.badge-warning {\n  background: hsl(var(--warning) / 0.1);\n  color: hsl(var(--warning));\n  border-color: hsl(var(--warning) / 0.2);\n}\n\n/* ============================================\n   BUTTONS AND LINKS\n   ============================================ */\n\n.btn {\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  border: 1px solid hsl(var(--border));\n  background: hsl(var(--background));\n  color: hsl(var(--foreground));\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.btn:hover {\n  background: hsl(var(--muted) / 0.2);\n  border-color: hsl(var(--primary) / 0.3);\n}\n\n.btn-primary {\n  background: hsl(var(--primary));\n  color: hsl(var(--primary-foreground));\n  border-color: hsl(var(--primary));\n}\n\n.btn-primary:hover {\n  background: hsl(var(--primary) / 0.9);\n}\n\n.btn-ghost {\n  background: transparent;\n  border-color: transparent;\n  color: hsl(var(--muted-foreground));\n}\n\n.btn-ghost:hover {\n  background: hsl(var(--muted) / 0.1);\n  color: hsl(var(--foreground));\n}\n\n.btn-xs {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.75rem;\n}\n\n.link {\n  color: hsl(var(--primary));\n  text-decoration: none;\n  transition: color 0.3s ease;\n}\n\n.link:hover {\n  color: hsl(var(--primary) / 0.8);\n  text-decoration: underline;\n}\n\n.link-primary {\n  color: hsl(var(--primary));\n}\n\n/* ============================================\n   ALERTS AND NOTIFICATIONS\n   ============================================ */\n\n.alert {\n  padding: 1rem;\n  border-radius: 0.75rem;\n  border: 1px solid;\n  margin: 1rem 0;\n}\n\n.alert-error {\n  background: hsl(var(--destructive) / 0.1);\n  color: hsl(var(--destructive));\n  border-color: hsl(var(--destructive) / 0.2);\n}\n\n.alert-warning {\n  background: hsl(var(--warning) / 0.1);\n  color: hsl(var(--warning));\n  border-color: hsl(var(--warning) / 0.2);\n}\n\n/* ============================================\n   LOADING STATES\n   ============================================ */\n\n.skeleton {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  border-radius: 0.5rem;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 768px) {\n  .company-container {\n    padding: 1rem;\n  }\n  \n  .page-title {\n    font-size: 1.5rem;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.75rem;\n  }\n  \n  .title-icon {\n    font-size: 1.5rem;\n  }\n  \n  .header-content {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .back-btn {\n    align-self: flex-start;\n  }\n  \n  .breadcrumb-list {\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n  \n  .grid-cols-3 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n  \n  .grid-cols-2 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n}\n\n@media (min-width: 768px) {\n  .sm\\\\:grid-cols-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  \n  .sm\\\\:grid-cols-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  \n  .sm\\\\:col-span-2 {\n    grid-column: span 2 / span 2;\n  }\n}\n\n/* ============================================\n   SPECIFIC CONTENT STYLING\n   ============================================ */\n\n.font-mono {\n  font-family: 'Courier New', monospace;\n}\n\n.opacity-70 {\n  opacity: 0.7;\n}\n\n.prose {\n  max-width: none;\n  line-height: 1.6;\n}\n\n.prose p {\n  margin-bottom: 1rem;\n}\n\n.list-disc {\n  list-style-type: disc;\n}\n\n.pl-5 {\n  padding-left: 1.25rem;\n}\n\n.space-y-1 > * + * {\n  margin-top: 0.25rem;\n}\n\n.space-y-2 > * + * {\n  margin-top: 0.5rem;\n}\n\n.truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.text-xs {\n  font-size: 0.75rem;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n}\n\n.text-base {\n  font-size: 1rem;\n}\n\n.font-medium {\n  font-weight: 500;\n}\n\n.font-semibold {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Admin                                  {{ \\'ADMIN.COMPANIES.TITLE\\' | translate }}                  {{ taxId() }}                                    {{ \\'ADMIN.COMPANIES.DASHBOARD_TITLE\\' | translate }}        {{ taxId() }}                            {{ \\'COMMON.BACK\\' | translate }}              @if (companyLoading()) {                                                                                                                                                                                              } @else if (companyError()) {    {{ companyError() }}  } @else if (company()) {                {{ \\'ADMIN.COMPANIES.COLUMNS.TAX_ID\\' | translate }}                  {{ company()!.tax_id }}          ⧉                            {{ \\'ADMIN.COMPANIES.COLUMNS.NAME\\' | translate }}                  {{ company()!.name || company()!.company?.business_name || \\'-\\' }}          @if (company()!.name || company()!.company?.business_name) { ⧉ }                            {{ \\'ADMIN.COMPANIES.COLUMNS.SECTOR\\' | translate }}                  {{ company()!.sector || \\'-\\' }}          @if (company()!.sector) { ⧉ }                    @if (company()!.company?.legal_status) {                  Estado legal          {{ company()!.company!.legal_status }}              }      @if (company()!.company?.ciiu) {                  CIIU          {{ company()!.company!.ciiu }}              }      @if (company()!.company?.company_type) {                  Tipo          {{ company()!.company!.company_type }}              }      @if (company()!.company?.incorporation_date) {                  Constitución          {{ company()!.company!.incorporation_date }}              }      @if (company()!.company?.address) {                  Dirección          {{ company()!.company!.address }}              }      @if (company()!.company?.source_url) {                  Ver fuente ↗              }            @if (company()!.score !== undefined && company()!.score !== null) {                  Score                      {{ company()!.score }}            @if (company()!.score_source) { {{ company()!.score_source }} }                        }      @if (company()!.company?.fetched_at) {                  Actualizado          {{ company()!.company!.fetched_at }}              }        @if (company()!.imputation?.error) {      {{ company()!.imputation!.error }}    }    @if (company()!.missing_data?.length) {          Datos faltantes                  @for (m of company()!.missing_data!; track m) { {{ m }} }                  }    @if (company()!.company?.additional) {          Atributos adicionales                  @if (company()!.company!.additional!.is_state_supplier !== undefined) {            Proveedor del Estado: {{ company()!.company!.additional!.is_state_supplier ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.offers_remittances !== undefined) {            Remesas: {{ company()!.company!.additional!.offers_remittances ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.sells_on_credit !== undefined) {            Vende a crédito: {{ company()!.company!.additional!.sells_on_credit ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.belongs_to_mv !== undefined) {            Pertenece a MV: {{ company()!.company!.additional!.belongs_to_mv ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.is_public_interest !== undefined) {            Interés público: {{ company()!.company!.additional!.is_public_interest ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.is_bic !== undefined) {            BIC: {{ company()!.company!.additional!.is_bic ? \\'Sí\\' : \\'No\\' }}          }          @if (company()!.company!.additional!.judicial_disposition) {            Disposición judicial: {{ company()!.company!.additional!.judicial_disposition }}          }                  }    @if (company()!.overview) {      {{ company()!.overview }}    }    @if (company()!.metrics) {          {{ \\'ADMIN.COMPANIES.METRICS\\' | translate }}                  @for (k of metricKeys(); track k) {                          {{ k }}              {{ company()!.metrics![k] | number:\\'1.0-2\\' }}                      }                                            }    @if (company()!.signals?.length) {          {{ \\'ADMIN.COMPANIES.SIGNALS\\' | translate }}                  @for (s of company()!.signals!; track s.key) {            {{ s.key }}: {{ s.value }}          }                  }    @if (company()!.llm_insights) {              {{ \\'ADMIN.COMPANIES.LLM_INSIGHTS\\' | translate }}                  @if (ins.narrative) {            {{ ins.narrative }}          }                      @if (ins.risk_summary) { {{ ins.risk_summary }} }            @if (ins.reputation) { {{ ins.reputation }} }            @if (ins.credit_recommendation) { {{ ins.credit_recommendation }} }                    @if (ins.key_factors?.length) {                          Factores clave              @for (k of ins.key_factors; track k) { {{ k }} }                      }          @if (ins.warnings?.length) {                          Advertencias              @for (w of ins.warnings; track w) { {{ w }} }                      }          @if (ins.suggested_actions?.length) {                          Acciones sugeridas              @for (a of ins.suggested_actions; track a) { {{ a }} }                      }          @if (ins.opportunity_zones?.length) {                          Zonas de oportunidad              @for (o of ins.opportunity_zones; track o) { {{ o }} }                      }          @if (ins.early_alerts?.length) {                          Alertas tempranas              @for (e of ins.early_alerts; track e) { {{ e }} }                      }          @if (ins.data_quality_flags?.length) {                          Banderas de calidad de datos              @for (f of ins.data_quality_flags; track f) { {{ f }} }                      }          Ver JSON crudo{{ (ins | json) }}                  }  } @else {    {{ \\'COMMON.NO_SUMMARY\\' | translate }}  }'\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminCompanyPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFilesPage.html":{"url":"components/AdminFilesPage.html","title":"component - AdminFilesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFilesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/admin/files.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-files\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./files.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                files\n                            \n                            \n                                getCachedUserLabel\n                            \n                            \n                                items\n                            \n                            \n                                limit\n                            \n                            \n                                offset\n                            \n                            \n                                subfolder\n                            \n                            \n                                total\n                            \n                            \n                                type_file\n                            \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applyFilters\n                            \n                            \n                                    Private\n                                list\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onTypeChange\n                            \n                            \n                                    Async\n                                prev\n                            \n                            \n                                    Async\n                                userLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applyFilters\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTypeChange\n                        \n                    \n                \n            \n            \n                \nonTypeChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prev\n                        \n                    \n                \n            \n            \n                \n                        \n                    prev()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLabel(userId: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/files.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FilesFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedUserLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.users.getCachedUserLabel.bind(this.users)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subfolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type_file\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminMessagesFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/files.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  inject,\n  signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport type { UploadedFileMeta } from '@core/ports';\nimport { FilesFacade } from '@app/application/files/files.facade';\nimport { AdminMessagesFacade } from '@app/application/admin/admin-messages.facade';\n\n@Component({\n  selector: 'app-admin-files',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TranslateModule],\n  templateUrl: './files.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminFilesPage {\n  private readonly files = inject(FilesFacade);\n  // Reuse AdminMessagesFacade to resolve user details and leverage its cache\n  private readonly users = inject(AdminMessagesFacade);\n  items = signal([]);\n  total = signal(0);\n  limit = signal(20);\n  offset = signal(0);\n  type_file = signal('');\n  subfolder = signal('');\n  // Expose cached label getter for template\n  getCachedUserLabel = this.users.getCachedUserLabel.bind(this.users);\n\n  async ngOnInit() {\n    const res = await this.list();\n    this.items.set(res.items || []);\n    this.total.set(res.total || 0);\n    // Warm up user cache for listed files\n    const ids = Array.from(\n      new Set(\n        (res.items || [])\n          .map((f) => f.owner_id)\n          .filter((v): v is string => !!v),\n      ),\n    );\n    await Promise.all(ids.map((id) => this.users.resolveUser(id)));\n  }\n\n  private list() {\n    return this.files.list({\n      limit: this.limit(),\n      offset: this.offset(),\n      type_file: (this.type_file() || undefined) as any,\n      subfolder: this.subfolder() || undefined,\n    });\n  }\n\n  async next() {\n    if (this.offset() + this.limit() >= this.total()) return;\n    this.offset.update((o) => o + this.limit());\n    const res = await this.list();\n    this.items.set(res.items || []);\n    this.total.set(res.total || 0);\n    const ids = Array.from(\n      new Set(\n        (res.items || [])\n          .map((f) => f.owner_id)\n          .filter((v): v is string => !!v),\n      ),\n    );\n    await Promise.all(ids.map((id) => this.users.resolveUser(id)));\n  }\n\n  async prev() {\n    if (this.offset()  Math.max(0, o - this.limit()));\n    const res = await this.list();\n    this.items.set(res.items || []);\n    this.total.set(res.total || 0);\n    const ids = Array.from(\n      new Set(\n        (res.items || [])\n          .map((f) => f.owner_id)\n          .filter((v): v is string => !!v),\n      ),\n    );\n    await Promise.all(ids.map((id) => this.users.resolveUser(id)));\n  }\n\n  async applyFilters() {\n    this.offset.set(0);\n    const res = await this.list();\n    this.items.set(res.items || []);\n    this.total.set(res.total || 0);\n    const ids = Array.from(\n      new Set(\n        (res.items || [])\n          .map((f) => f.owner_id)\n          .filter((v): v is string => !!v),\n      ),\n    );\n    await Promise.all(ids.map((id) => this.users.resolveUser(id)));\n  }\n\n  onTypeChange(val: string) {\n    const v = (val ?? '').trim();\n    if (v === '' || v === 'image' || v === 'pdf' || v === 'document') {\n      this.type_file.set(v as any);\n      this.applyFilters();\n    }\n  }\n\n  // Resolve user details for display (email/name) with caching, similar to Admin Messages\n  async userLabel(userId: string | null | undefined): Promise {\n    if (!userId) return '';\n    const u = await this.users.resolveUser(userId);\n    if (!u) return userId;\n    if (u.username && u.email) return `${u.username} `;\n    return u.email || u.username || userId;\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n        {{ \"ADMIN.FILES.TITLE\" | translate }}\n        ({{ total() }})\n      \n      \n        Gestiona y explora todos los archivos subidos al sistema\n      \n    \n  \n\n  \n  \n    \n      \n        \n        Filtros y Controles\n      \n    \n    \n    \n      \n      \n        \n          \n          Tipo de Archivo\n        \n        \n          {{ \"ADMIN.FILES.TYPE_ALL\" | translate }}\n          Imágenes\n          PDFs\n          Documentos\n        \n      \n\n      \n      \n        \n          \n          Subcarpeta\n        \n        \n      \n\n      \n      \n        \n          \n          {{ \"COMMON.PREVIOUS\" | translate }}\n        \n        \n        \n          Mostrando\n          {{ items().length }}\n          archivos\n        \n        \n        = total()\"\n        >\n          {{ \"COMMON.NEXT\" | translate }}\n          \n        \n      \n    \n  \n\n  \n  \n    @for (f of items(); track f.url) {\n      \n        \n        \n          @if (f.content_type.startsWith('image/')) {\n            \n              \n              \n                \n              \n            \n          } @else if (f.content_type === 'application/pdf') {\n            \n              \n              PDF\n            \n          } @else {\n            \n              \n              {{ f.type_file || 'DOC' }}\n            \n          }\n        \n\n        \n        \n          \n            \n            {{ f.filename }}\n          \n          \n          \n            \n              \n              {{ f.content_type }}\n              •\n              {{ f.type_file }}\n            \n            \n            @if (f.session_id) {\n              \n                \n                Sesión:\n                {{ f.session_id }}\n              \n            }\n            \n            @if (f.owner_id) {\n              \n                \n                Usuario:\n                \n                  {{ getCachedUserLabel(f.owner_id) || f.owner_id }}\n                \n              \n            }\n          \n        \n\n        \n        \n          \n            \n            {{ \"COMMON.OPEN\" | translate }}\n          \n          \n          \n            \n          \n        \n      \n    }\n  \n\n  \n  @if (items().length === 0) {\n    \n      \n        \n      \n      No se encontraron archivos\n      \n        No hay archivos que coincidan con los filtros seleccionados.\n      \n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \"ADMIN.FILES.TITLE\" | translate }}        ({{ total() }})                    Gestiona y explora todos los archivos subidos al sistema                                          Filtros y Controles                                                          Tipo de Archivo                          {{ \"ADMIN.FILES.TYPE_ALL\" | translate }}          Imágenes          PDFs          Documentos                                                      Subcarpeta                                                              {{ \"COMMON.PREVIOUS\" | translate }}                                  Mostrando          {{ items().length }}          archivos                        = total()\"        >          {{ \"COMMON.NEXT\" | translate }}                                      @for (f of items(); track f.url) {                                @if (f.content_type.startsWith(\\'image/\\')) {                                                                                            } @else if (f.content_type === \\'application/pdf\\') {                                        PDF                      } @else {                                        {{ f.type_file || \\'DOC\\' }}                      }                                                          {{ f.filename }}                                                                      {{ f.content_type }}              •              {{ f.type_file }}                                    @if (f.session_id) {                                              Sesión:                {{ f.session_id }}                          }                        @if (f.owner_id) {                                              Usuario:                                  {{ getCachedUserLabel(f.owner_id) || f.owner_id }}                                          }                                                                    {{ \"COMMON.OPEN\" | translate }}                                                                      }      @if (items().length === 0) {                              No se encontraron archivos              No hay archivos que coincidan con los filtros seleccionados.            }'\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFilesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminListMessagesUseCase.html":{"url":"injectables/AdminListMessagesUseCase.html","title":"injectable - AdminListMessagesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminListMessagesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin-messages/list-messages.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(sessionId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin-messages/list-messages.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_MESSAGES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin-messages/list-messages.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { AdminMessagesPort, AdminMessageItem } from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\nimport { ADMIN_MESSAGES_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminListMessagesUseCase {\n  private readonly port = inject(ADMIN_MESSAGES_PORT);\n  execute(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise> {\n    return this.port.listMessages(sessionId, params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminListSessionsUseCase.html":{"url":"injectables/AdminListSessionsUseCase.html","title":"injectable - AdminListSessionsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminListSessionsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin-messages/list-sessions.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin-messages/list-sessions.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_MESSAGES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin-messages/list-sessions.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { AdminMessagesPort, AdminSessionItem } from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\nimport { ADMIN_MESSAGES_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminListSessionsUseCase {\n  private readonly port = inject(ADMIN_MESSAGES_PORT);\n  execute(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    return this.port.listSessions(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminMessageItem.html":{"url":"interfaces/AdminMessageItem.html","title":"interface - AdminMessageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminMessageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-messages.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            file_ids\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"agent\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"agent\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminMessageItem {\n  id: string;\n  role: 'user' | 'agent';\n  content: string;\n  created_at: string;\n  file_ids: string[];\n}\nexport interface AdminSessionItem {\n  session_id: string;\n  user_id: string;\n  title: string;\n  updated_at: string;\n}\n\nexport interface AdminMessagesPort {\n  listSessions(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  listMessages(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMessagesFacade.html":{"url":"injectables/AdminMessagesFacade.html","title":"injectable - AdminMessagesFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminMessagesFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-messages.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Private\n                                    Readonly\n                                listMessagesUC\n                            \n                            \n                                    Private\n                                    Readonly\n                                listSessionsUC\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Readonly\n                                messages\n                            \n                            \n                                    Readonly\n                                msgLimit\n                            \n                            \n                                    Readonly\n                                msgPage\n                            \n                            \n                                    Readonly\n                                msgTotal\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                search\n                            \n                            \n                                    Readonly\n                                selected\n                            \n                            \n                                    Readonly\n                                sessions\n                            \n                            \n                                    Readonly\n                                sortBy\n                            \n                            \n                                    Readonly\n                                sortOrder\n                            \n                            \n                                    Readonly\n                                total\n                            \n                            \n                                    Private\n                                    Readonly\n                                userCache\n                            \n                            \n                                    Private\n                                    Readonly\n                                usersPort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applySessionsSearch\n                            \n                            \n                                getCachedUserLabel\n                            \n                            \n                                    Async\n                                loadSessions\n                            \n                            \n                                    Async\n                                nextMsgPage\n                            \n                            \n                                    Async\n                                nextSessionsInfinite\n                            \n                            \n                                    Async\n                                nextSessionsPage\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                    Async\n                                prevSessionsPage\n                            \n                            \n                                    Async\n                                resolveUser\n                            \n                            \n                                setLimit\n                            \n                            \n                                setSessionsSort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applySessionsSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    applySessionsSearch(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedUserLabel\n                        \n                    \n                \n            \n            \n                \ngetCachedUserLabel(userId: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadSessions\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadSessions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextMsgPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextMsgPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextSessionsInfinite\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextSessionsInfinite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextSessionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextSessionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                        \n                    open(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prevSessionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prevSessionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveUser(userId: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLimit\n                        \n                    \n                \n            \n            \n                \nsetLimit(limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSessionsSort\n                        \n                    \n                \n            \n            \n                \nsetSessionsSort(field: \"updated_at\" | \"title\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-messages.facade.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        \"updated_at\" | \"title\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listMessagesUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminListMessagesUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listSessionsUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminListSessionsUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        msgLimit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(10)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        msgPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        msgTotal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('desc')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        usersPort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_USERS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-messages.facade.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport {\n  AdminListSessionsUseCase,\n  AdminListMessagesUseCase,\n} from '@core/use-cases';\nimport type {\n  AdminSessionItem,\n  AdminMessageItem,\n  AdminUsersPort,\n  AdminUserItem,\n} from '@core/ports';\nimport { ADMIN_USERS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminMessagesFacade {\n  private readonly listSessionsUC = inject(AdminListSessionsUseCase);\n  private readonly listMessagesUC = inject(AdminListMessagesUseCase);\n  private readonly usersPort = inject(ADMIN_USERS_PORT);\n\n  readonly sessions = signal([]);\n  readonly selected = signal(null);\n  readonly messages = signal(null);\n  readonly loading = signal(false);\n  readonly error = signal(null);\n  // pagination state\n  readonly page = signal(1);\n  readonly limit = signal(20);\n  readonly total = signal(0);\n  readonly search = signal('');\n  readonly sortBy = signal('');\n  readonly sortOrder = signal('desc');\n  readonly msgPage = signal(1);\n  readonly msgLimit = signal(10);\n  readonly msgTotal = signal(0);\n\n  // cache user details to avoid repeated calls\n  private readonly userCache = new Map();\n\n  async resolveUser(\n    userId: string | null | undefined,\n  ): Promise {\n    if (!userId) return null;\n    const cached = this.userCache.get(userId);\n    if (cached) return cached;\n    try {\n      const u = await this.usersPort.get(userId);\n      if (u) this.userCache.set(userId, u);\n      return u ?? null;\n    } catch {\n      return null;\n    }\n  }\n\n  getCachedUserLabel(userId: string | null | undefined): string | null {\n    if (!userId) return null;\n    const u = this.userCache.get(userId);\n    if (!u) return null;\n    if (u.username && u.email) return `${u.username} `;\n    return u.email || u.username || userId;\n  }\n\n  async loadSessions() {\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.listSessionsUC.execute({\n        page: this.page(),\n        limit: this.limit(),\n        search: this.search() || undefined,\n        sort_by: (this.sortBy() || undefined) as any,\n        sort_order: this.sortOrder(),\n      });\n      this.sessions.set(res.items || []);\n      this.total.set(res.total || 0);\n      // Warm up user cache for visible sessions\n      const uniqUserIds = Array.from(\n        new Set((res.items || []).map((s) => s.user_id).filter(Boolean)),\n      );\n      await Promise.all(uniqUserIds.map((id) => this.resolveUser(id)));\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando sesiones');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async open(sessionId: string) {\n    this.selected.set(sessionId);\n    this.msgPage.set(1);\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.listMessagesUC.execute(sessionId, {\n        page: this.msgPage(),\n        limit: this.msgLimit(),\n      });\n      this.messages.set(res.items || []);\n      this.msgTotal.set(res.total || 0);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando mensajes');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async nextSessionsPage() {\n    if (this.page() * this.limit() >= this.total()) return;\n    this.page.update((p) => p + 1);\n    await this.loadSessions();\n  }\n  async nextSessionsInfinite() {\n    // append next page of sessions if available\n    if ((this.sessions().length || 0) >= this.total()) return;\n    this.page.update((p) => p + 1);\n    this.loading.set(true);\n    try {\n      const res = await this.listSessionsUC.execute({\n        page: this.page(),\n        limit: this.limit(),\n        search: this.search() || undefined,\n        sort_by: (this.sortBy() || undefined) as any,\n        sort_order: this.sortOrder(),\n      });\n      const next = res.items || [];\n      // dedupe by session_id\n      const map = new Map();\n      for (const s of this.sessions()) map.set(s.session_id, s);\n      for (const s of next) map.set(s.session_id, s);\n      this.sessions.set(Array.from(map.values()));\n      this.total.set(res.total || this.total());\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando sesiones');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n  async prevSessionsPage() {\n    if (this.page()  p - 1);\n    await this.loadSessions();\n  }\n  async applySessionsSearch(value: string) {\n    this.search.set(value.trim());\n    this.page.set(1);\n    await this.loadSessions();\n  }\n  setSessionsSort(field: 'updated_at' | 'title') {\n    if (this.sortBy() === field) {\n      this.sortOrder.update((o) => (o === 'asc' ? 'desc' : 'asc'));\n    } else {\n      this.sortBy.set(field);\n      this.sortOrder.set('desc');\n    }\n    this.page.set(1);\n    this.loadSessions();\n  }\n  setLimit(limit: number) {\n    if (!Number.isFinite(limit) || limit = this.msgTotal()) return;\n    this.msgPage.update((p) => p + 1);\n    const res = await this.listMessagesUC.execute(this.selected()!, {\n      page: this.msgPage(),\n      limit: this.msgLimit(),\n    });\n    this.messages.update((arr) => [...(arr || []), ...(res.items || [])]);\n    this.msgTotal.set(res.total || 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminMessagesPage.html":{"url":"components/AdminMessagesPage.html","title":"component - AdminMessagesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminMessagesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/admin/messages.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-messages\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            MarkdownModule\n                            MatIconModule\n                                SessionFilesModalComponent\n                                SessionCompaniesModalComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./messages.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                chatUtils\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                facade\n                            \n                            \n                                getCachedUserLabel\n                            \n                            \n                                    Private\n                                    Optional\n                                io\n                            \n                            \n                                    Private\n                                    Optional\n                                ioSessions\n                            \n                            \n                                limit\n                            \n                            \n                                loading\n                            \n                            \n                                messages\n                            \n                            \n                                msgTotal\n                            \n                            \n                                page\n                            \n                            \n                                    Private\n                                processed\n                            \n                            \n                                selected\n                            \n                            \n                                selectedOwnerId\n                            \n                            \n                                    \n                                    Optional\n                                sentinel\n                            \n                            \n                                sessions\n                            \n                            \n                                    \n                                    Optional\n                                sessionsContainer\n                            \n                            \n                                    \n                                    Optional\n                                sessionsSentinel\n                            \n                            \n                                showCompaniesModal\n                            \n                            \n                                showFilesModal\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applySessionsSearch\n                            \n                            \n                                    Private\n                                extractThinkBlocks\n                            \n                            \n                                getProcessed\n                            \n                            \n                                    Async\n                                nextSessionsPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                    Async\n                                prevSessionsPage\n                            \n                            \n                                    Private\n                                setupIO\n                            \n                            \n                                    Private\n                                setupIOSessions\n                            \n                            \n                                toggleThink\n                            \n                            \n                                    Async\n                                userLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applySessionsSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    applySessionsSearch(q: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                q\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractThinkBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractThinkBlocks(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessed\n                        \n                    \n                \n            \n            \n                \ngetProcessed(message: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextSessionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextSessionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                        \n                    open(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prevSessionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prevSessionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupIO\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupIO()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupIOSessions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupIOSessions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleThink\n                        \n                    \n                \n            \n            \n                \ntoggleThink(message: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLabel(userId: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/admin/messages.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        chatUtils\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatUtilsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.error\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        facade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminMessagesFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedUserLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.getCachedUserLabel.bind(this.facade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        io\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ioSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.limit\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.loading\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.messages\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msgTotal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.msgTotal\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.page\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.selected\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOwnerId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const id = this.selected();\n    if (!id) return null;\n    const list = this.sessions() || [];\n    const found = list.find((s) => s.session_id === id);\n    return found?.user_id || null;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sentinel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sentinel', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.sessions\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sessionsContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sessionsContainer', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sessionsSentinel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sessionsSentinel', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showCompaniesModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFilesModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.total\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/admin/messages.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ViewChild,\n  inject,\n  computed,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdminMessagesFacade } from '@app/application/admin/admin-messages.facade';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ChatUtilsService } from '@infrastructure/services/chat-utils.service';\n// Types are implied via facade signals; no direct import needed here\nimport { SessionFilesModalComponent } from '../../components/files/session-files-modal.component';\nimport { SessionCompaniesModalComponent } from '../../components/companies/session-companies-modal.component';\n\n@Component({\n  selector: 'app-admin-messages',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MarkdownModule,\n    MatIconModule,\n    SessionFilesModalComponent,\n    SessionCompaniesModalComponent,\n  ],\n  templateUrl: './messages.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminMessagesPage {\n  private readonly facade = inject(AdminMessagesFacade);\n  protected readonly chatUtils = inject(ChatUtilsService);\n\n  sessions = this.facade.sessions;\n  selected = this.facade.selected;\n  getCachedUserLabel = this.facade.getCachedUserLabel.bind(this.facade);\n  selectedOwnerId = computed(() => {\n    const id = this.selected();\n    if (!id) return null;\n    const list = this.sessions() || [];\n    const found = list.find((s) => s.session_id === id);\n    return found?.user_id || null;\n  });\n  messages = this.facade.messages;\n  loading = this.facade.loading;\n  error = this.facade.error;\n  // pagination and filters\n  page = this.facade.page;\n  limit = this.facade.limit;\n  total = this.facade.total;\n  msgTotal = this.facade.msgTotal;\n\n  // session extras\n  showFilesModal = false;\n  showCompaniesModal = false;\n\n  async ngOnInit() {\n    await this.facade.loadSessions();\n  }\n\n  async open(sessionId: string) {\n    await this.facade.open(sessionId);\n  }\n\n  // Resolve user details for display (email/name) with caching\n  async userLabel(userId: string | null | undefined): Promise {\n    if (!userId) return '';\n    const u = await this.facade.resolveUser(userId);\n    if (!u) return userId;\n    if (u.username && u.email) return `${u.username} `;\n    return u.email || u.username || userId;\n  }\n\n  // sessions controls\n  async nextSessionsPage() {\n    await this.facade.nextSessionsPage();\n  }\n  async prevSessionsPage() {\n    await this.facade.prevSessionsPage();\n  }\n  async applySessionsSearch(q: string) {\n    await this.facade.applySessionsSearch(q);\n  }\n  // messages infinite scroll\n  @ViewChild('sentinel', { static: false })\n  sentinel?: ElementRef;\n  private io?: IntersectionObserver;\n  @ViewChild('sessionsSentinel', { static: false })\n  sessionsSentinel?: ElementRef;\n  @ViewChild('sessionsContainer', { static: false })\n  sessionsContainer?: ElementRef;\n  private ioSessions?: IntersectionObserver;\n\n  // Cache for processed message content (main without  and extracted think blocks)\n  private processed = new Map();\n\n  ngAfterViewInit() {\n    // set up intersection observer when sentinel is available\n    queueMicrotask(() => this.setupIO());\n    queueMicrotask(() => this.setupIOSessions());\n  }\n\n  private setupIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n    if (!this.sentinel) return;\n    this.io = new IntersectionObserver(\n      (entries) => {\n        for (const e of entries) {\n          if (e.isIntersecting) {\n            const count = this.messages()?.length || 0;\n            const total = this.msgTotal();\n            if (count  {\n        for (const e of entries) {\n          if (e.isIntersecting) {\n            const count = this.sessions()?.length || 0;\n            const total = this.total();\n            if (!total || count  blocks from a markdown string\n  private extractThinkBlocks(content: string): {\n    main: string;\n    thinks: string[];\n  } {\n    if (!content) return { main: '', thinks: [] };\n    const thinks: string[] = [];\n    const re = /]*>([\\s\\S]*?)/gi;\n    let main = content;\n    let m: RegExpExecArray | null;\n    while ((m = re.exec(content)) !== null) {\n      const inner = (m[1] || '').trim();\n      if (inner) thinks.push(inner);\n    }\n    main = main.replace(re, '').trim();\n    return { main, thinks };\n  }\n\n  // Get or (re)build processed view for a message, updating cache when content changes\n  getProcessed(message: { id?: string; content?: string }): {\n    main: string;\n    thinks: string[];\n    expanded: boolean;\n  } {\n    const id =\n      message.id ||\n      `${message.content?.slice(0, 16) ?? 'msg'}-${Math.random()}`;\n  const content = this.chatUtils.cleanForMarkdown(message.content ?? '');\n    const cached = this.processed.get(id);\n    if (!cached || cached.last !== content) {\n      const { main, thinks } = this.extractThinkBlocks(content);\n      const expanded = cached?.expanded ?? false; // preserve toggle state\n      const entry = {\n        main: this.chatUtils.cleanForMarkdown(main),\n        thinks: thinks.map((t) => this.chatUtils.cleanForMarkdown(t)),\n        expanded,\n        last: content,\n      };\n      this.processed.set(id, entry);\n      return entry;\n    }\n    return {\n      main: cached.main,\n      thinks: cached.thinks,\n      expanded: cached.expanded,\n    };\n  }\n\n  toggleThink(message: { id?: string; content?: string }) {\n    const id = message.id || `${message.content?.slice(0, 16) ?? 'msg'}`;\n    const p = this.processed.get(id);\n    if (p) {\n      p.expanded = !p.expanded;\n    } else {\n      const cur = this.getProcessed(message);\n      this.processed.set(id, {\n        main: cur.main,\n        thinks: cur.thinks,\n        expanded: !cur.expanded,\n        last: message.content ?? '',\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n        {{ \"ADMIN.MESSAGES.TITLE\" | translate }}\n      \n      \n        Gestiona y revisa las conversaciones del sistema\n      \n    \n  \n\n  \n  \n    \n    \n      \n        \n          \n          Sesiones de Chat\n        \n      \n      \n      \n      \n        \n          \n          \n          \n            \n            {{ \"ADMIN.MESSAGES.FILTER\" | translate }}\n          \n        \n      \n\n      \n      \n        @for (s of sessions(); track s.session_id) {\n          \n            \n              \n                \n                {{ s.title || s.session_id }}\n              \n              \n                \n                  \n                  {{ s.updated_at }}\n                \n                •\n                \n                  \n                  {{\n                    getCachedUserLabel(s.user_id) || s.user_id\n                  }}\n                \n              \n            \n            \n              \n            \n          \n        }\n        \n        \n        \n          @if (loading()) {\n            \n              \n              {{ \"COMMON.LOADING\" | translate }}\n            \n          }\n        \n      \n\n      \n      \n        \n          \n          {{ sessions().length }} / {{ total() || \"∞\" }}\n        \n      \n    \n\n    \n    \n      @if (!selected()) {\n        \n          \n            \n          \n          {{ \"ADMIN.MESSAGES.SELECT_SESSION\" | translate }}\n          \n            Selecciona una sesión de la lista para ver los mensajes\n          \n        \n      } @else {\n        \n        \n          \n            \n              \n              {{\n                getCachedUserLabel(selectedOwnerId()) || selectedOwnerId()\n              }}\n            \n          \n          \n          \n            \n              \n              {{ 'CHAT.ATTACHMENTS_VIEW' | translate }}\n            \n            \n              \n              {{ 'COMMON.COMPANIES' | translate }}\n            \n          \n        \n\n        \n        \n          @for (m of messages(); track m.id) {\n            \n              \n                \n                  @if (m.role === 'user') {\n                    \n                  } @else if (m.role === 'agent') {\n                    \n                  } @else {\n                    \n                  }\n                  {{ m.role }}\n                \n                \n                  \n                  {{ m.created_at }}\n                \n              \n              \n              @let view = getProcessed(m);\n              \n                @if (view.main.length) {\n                  \n                    \n                  \n                }\n                \n                @if (view.thinks.length) {\n                  \n                    \n                      \n                      \n                        {{\n                          view.expanded\n                            ? (\"CHAT.HIDE_THINK\" | translate)\n                            : (\"CHAT.SHOW_THINK\" | translate)\n                        }}\n                      \n                    \n                    \n                    @if (view.expanded) {\n                      \n                        \n                          \n                          &lt;think&gt;\n                        \n                        @for (t of view.thinks; track t) {\n                          \n                            \n                          \n                        }\n                      \n                    }\n                  \n                }\n              \n            \n          }\n          \n          \n          \n            @if ((messages()?.length || 0) \n                \n                {{ \"ADMIN.MESSAGES.LOADING_MORE\" | translate }}\n              \n            }\n          \n        \n      }\n    \n  \n\n  \n  @if (showFilesModal && selected()) {\n    \n  }\n  @if (showCompaniesModal && selected()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \"ADMIN.MESSAGES.TITLE\" | translate }}                    Gestiona y revisa las conversaciones del sistema                                                          Sesiones de Chat                                                                                              {{ \"ADMIN.MESSAGES.FILTER\" | translate }}                                            @for (s of sessions(); track s.session_id) {                                                                    {{ s.title || s.session_id }}                                                                                {{ s.updated_at }}                                •                                                    {{                    getCachedUserLabel(s.user_id) || s.user_id                  }}                                                                                                  }                                  @if (loading()) {                                        {{ \"COMMON.LOADING\" | translate }}                      }                                                      {{ sessions().length }} / {{ total() || \"∞\" }}                                @if (!selected()) {                                                  {{ \"ADMIN.MESSAGES.SELECT_SESSION\" | translate }}                      Selecciona una sesión de la lista para ver los mensajes                        } @else {                                                                  {{                getCachedUserLabel(selectedOwnerId()) || selectedOwnerId()              }}                                                                                  {{ \\'CHAT.ATTACHMENTS_VIEW\\' | translate }}                                                    {{ \\'COMMON.COMPANIES\\' | translate }}                                                        @for (m of messages(); track m.id) {                                                            @if (m.role === \\'user\\') {                                      } @else if (m.role === \\'agent\\') {                                      } @else {                                      }                  {{ m.role }}                                                                    {{ m.created_at }}                                                          @let view = getProcessed(m);                              @if (view.main.length) {                                                                        }                                @if (view.thinks.length) {                                                                                                          {{                          view.expanded                            ? (\"CHAT.HIDE_THINK\" | translate)                            : (\"CHAT.SHOW_THINK\" | translate)                        }}                                                                                  @if (view.expanded) {                                                                                                                                                  @for (t of view.thinks; track t) {                                                                                                        }                                          }                                  }                                    }                                          @if ((messages()?.length || 0)                                 {{ \"ADMIN.MESSAGES.LOADING_MORE\" | translate }}                          }                        }          @if (showFilesModal && selected()) {      }  @if (showCompaniesModal && selected()) {      }'\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminMessagesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminMessagesPort.html":{"url":"interfaces/AdminMessagesPort.html","title":"interface - AdminMessagesPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminMessagesPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-messages.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listMessages\n                                    \n                                \n                                \n                                    \n                                        listSessions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listMessages\n                        \n                    \n                \n            \n            \n                \nlistMessages(sessionId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-messages.port.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listSessions\n                        \n                    \n                \n            \n            \n                \nlistSessions(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-messages.port.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminMessageItem {\n  id: string;\n  role: 'user' | 'agent';\n  content: string;\n  created_at: string;\n  file_ids: string[];\n}\nexport interface AdminSessionItem {\n  session_id: string;\n  user_id: string;\n  title: string;\n  updated_at: string;\n}\n\nexport interface AdminMessagesPort {\n  listSessions(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  listMessages(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMessagesService.html":{"url":"injectables/AdminMessagesService.html","title":"injectable - AdminMessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminMessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                listMessages\n                            \n                            \n                                    Async\n                                listSessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    listMessages(sessionId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-messages.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listSessions\n                        \n                    \n                \n            \n            \n                \n                        \n                    listSessions(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-messages.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-messages.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-messages.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport type {\n  AdminMessagesPort,\n  AdminMessageItem,\n  AdminSessionItem,\n} from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminMessagesService implements AdminMessagesPort {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async listSessions(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/agent/sessions`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.search != null && src.search !== '') qp.search = src.search;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    if (Array.isArray(data)) {\n      return {\n        items: data,\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data as PaginatedApi)?.results ?? [],\n      page:\n        (data as PaginatedApi)?.info?.page_number ??\n        params?.page ??\n        1,\n      limit:\n        (data as PaginatedApi)?.results?.length ??\n        params?.limit ??\n        10,\n      total:\n        (data as PaginatedApi)?.info?.count ??\n        (data as PaginatedApi)?.results?.length ??\n        0,\n    };\n  }\n\n  async listMessages(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise> {\n    const url = `${this.base}/agent/sessions/${sessionId}/messages`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    if (Array.isArray(data)) {\n      return {\n        items: data,\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data as PaginatedApi)?.results ?? [],\n      page:\n        (data as PaginatedApi)?.info?.page_number ??\n        params?.page ??\n        1,\n      limit:\n        (data as PaginatedApi)?.results?.length ??\n        params?.limit ??\n        10,\n      total:\n        (data as PaginatedApi)?.info?.count ??\n        (data as PaginatedApi)?.results?.length ??\n        0,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminRiskWeightsFacade.html":{"url":"injectables/AdminRiskWeightsFacade.html","title":"injectable - AdminRiskWeightsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminRiskWeightsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-risk-weights.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                    Private\n                                    Readonly\n                                getActive\n                            \n                            \n                                loaded\n                            \n                            \n                                saving\n                            \n                            \n                                    Private\n                                    Readonly\n                                upsert\n                            \n                            \n                                version\n                            \n                            \n                                weights\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKey\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                onVersionChange\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addKey\n                        \n                    \n                \n            \n            \n                \naddKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-risk-weights.facade.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-risk-weights.facade.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVersionChange\n                        \n                    \n                \n            \n            \n                \nonVersionChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-risk-weights.facade.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-risk-weights.facade.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        getActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GetActiveRiskWeightsUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saving\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        upsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UpsertRiskWeightsUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weights\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.record({})\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-risk-weights.facade.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { GetActiveRiskWeightsUseCase } from '@core/use-cases/risk-weights/get-active-risk-weights.usecase';\nimport { UpsertRiskWeightsUseCase } from '@core/use-cases/risk-weights/upsert-risk-weights.usecase';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminRiskWeightsFacade {\n  private readonly getActive = inject(GetActiveRiskWeightsUseCase);\n  private readonly upsert = inject(UpsertRiskWeightsUseCase);\n  private readonly fb = inject(FormBuilder);\n\n  version = signal(1);\n  weights = this.fb.record({});\n  loaded = signal(false);\n  error = signal(null);\n  saving = signal(false);\n\n  async load() {\n    this.error.set(null);\n    try {\n      const res: any = await this.getActive.execute();\n      if (res?.weights) {\n        this.version.set((res as any).version || 1);\n        this.weights.patchValue(res.weights || {});\n      }\n      this.loaded.set(true);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando configuración');\n    }\n  }\n\n  addKey() {\n    const key = prompt('Nombre del factor:');\n    if (!key) return;\n    (this.weights as any).addControl(\n      key,\n      new FormControl(0, { nonNullable: true }),\n    );\n  }\n\n  onVersionChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.version.set(input.valueAsNumber || 1);\n  }\n\n  async save() {\n    this.saving.set(true);\n    this.error.set(null);\n    try {\n      const weights = this.weights.getRawValue() as Record;\n      await this.upsert.execute(this.version(), weights);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error guardando');\n    } finally {\n      this.saving.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminSessionItem.html":{"url":"interfaces/AdminSessionItem.html","title":"interface - AdminSessionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminSessionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-messages.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            session_id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminMessageItem {\n  id: string;\n  role: 'user' | 'agent';\n  content: string;\n  created_at: string;\n  file_ids: string[];\n}\nexport interface AdminSessionItem {\n  session_id: string;\n  user_id: string;\n  title: string;\n  updated_at: string;\n}\n\nexport interface AdminMessagesPort {\n  listSessions(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  listMessages(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminShellLayout.html":{"url":"components/AdminShellLayout.html","title":"component - AdminShellLayout","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminShellLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/layouts/admin-shell/admin-shell.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-shell\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterOutlet\n                            MatIconModule\n                            TranslateModule\n                                ProfileMenuComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-shell.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-shell.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                getProfileUC\n                            \n                            \n                                    Private\n                                    Readonly\n                                lang\n                            \n                            \n                                profileEmail\n                            \n                            \n                                profileLoading\n                            \n                            \n                                profileMenuOpen\n                            \n                            \n                                profileRole\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                sidebarCollapsed\n                            \n                            \n                                    Protected\n                                    Readonly\n                                theme\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                closeOnOutsideClick\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                isMobile\n                            \n                            \n                                    Private\n                                    Async\n                                loadProfileIfAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                setTheme\n                            \n                            \n                                switchLang\n                            \n                            \n                                toggleProfileMenu\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \ndocument:click()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:162\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closeOnOutsideClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeOnOutsideClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isMobile\n                        \n                    \n                \n            \n            \n                \n                        \n                    isMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadProfileIfAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProfileIfAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(value: \"light\" | \"dark\" | \"system\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        \"light\" | \"dark\" | \"system\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchLang\n                        \n                    \n                \n            \n            \n                \nswitchLang(lang: \"es\" | \"en\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                        \"es\" | \"en\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleProfileMenu\n                        \n                    \n                \n            \n            \n                \ntoggleProfileMenu(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        getProfileUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GetProfileUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarCollapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/admin-shell/admin-shell.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  HostListener,\n  inject,\n  signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  Router,\n  RouterLink,\n  RouterOutlet,\n  NavigationEnd,\n} from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TokenStorageService } from '@infrastructure/services/token-storage.service';\nimport { GetProfileUseCase } from '@core/use-cases';\nimport { LanguageService } from '@infrastructure/services/language.service';\nimport { ThemeService } from '@infrastructure/services/theme.service';\nimport { ProfileMenuComponent } from '../../components/profile-menu/profile-menu';\n\n@Component({\n  selector: 'app-admin-shell',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterLink,\n    RouterOutlet,\n    MatIconModule,\n    TranslateModule,\n    ProfileMenuComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './admin-shell.html',\n  styleUrl: './admin-shell.css',\n})\nexport class AdminShellLayout {\n  private readonly router = inject(Router);\n  private readonly token = inject(TokenStorageService);\n  private readonly getProfileUC = inject(GetProfileUseCase);\n  private readonly lang = inject(LanguageService);\n  protected readonly theme = inject(ThemeService);\n\n  // Profile state (mirrors SidebarComponent)\n  profileEmail = signal(null);\n  profileRole = signal(null);\n  profileLoading = signal(false);\n  profileMenuOpen = signal(false);\n  // Sidebar state\n  sidebarCollapsed = signal(false);\n\n  ngOnInit() {\n    this.loadProfileIfAuthenticated();\n    // Restore sidebar collapsed state from localStorage (desktop), but default-collapsed on mobile\n    try {\n      const saved =\n        typeof window !== 'undefined'\n          ? window.localStorage.getItem('adminSidebarCollapsed')\n          : null;\n      if (this.isMobile()) {\n        this.sidebarCollapsed.set(true);\n      } else if (saved != null) {\n        this.sidebarCollapsed.set(saved === '1');\n      }\n    } catch {\n      /* ignore */\n    }\n\n    // Collapse on route change for mobile to avoid sticky open menu\n    this.router.events.subscribe((ev) => {\n      if (ev instanceof NavigationEnd) {\n        if (this.isMobile()) this.sidebarCollapsed.set(true);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    return this.token.isAuthenticated();\n  }\n\n  private async loadProfileIfAuthenticated() {\n    if (!this.token.isAuthenticated() || this.profileEmail()) return;\n    const t = this.token.getToken();\n    if (!t) return;\n    this.profileLoading.set(true);\n    try {\n      const profile = await this.getProfileUC.execute(t);\n      this.profileEmail.set(profile.email || profile.username || null);\n      this.profileRole.set(profile.role || null);\n    } catch {\n      // optional: keep token, ignore errors\n    } finally {\n      this.profileLoading.set(false);\n    }\n  }\n\n  toggleProfileMenu(event?: Event) {\n    event?.stopPropagation();\n    if (!this.token.isAuthenticated()) {\n      this.router.navigateByUrl('/login');\n      return;\n    }\n    if (!this.profileEmail() && !this.profileLoading()) {\n      this.loadProfileIfAuthenticated();\n    }\n    this.profileMenuOpen.update((v) => !v);\n  }\n\n  toggleSidebar(event?: Event) {\n    event?.stopPropagation();\n    this.sidebarCollapsed.update((v) => !v);\n    // Persist state\n    try {\n      typeof window !== 'undefined' &&\n        window.localStorage.setItem(\n          'adminSidebarCollapsed',\n          this.sidebarCollapsed() ? '1' : '0',\n        );\n    } catch {\n      /* ignore */\n    }\n  }\n\n  private isMobile(): boolean {\n    try {\n      return typeof window !== 'undefined' && window.innerWidth \n    \n\n    \n        \n  \n  @if (!sidebarCollapsed()) {\n    \n  }\n  \n    \n      \n        \n          admin_panel_settings\n          {{ \"ADMIN.SIDENAV.HEADER\" | translate }}\n        \n      \n      \n        {{\n            \"ADMIN.SIDENAV.DASHBOARD\" | translate\n          }}\n        {{ \"ADMIN.SIDENAV.USERS\" | translate }}\n        {{ \"ADMIN.SIDENAV.FILES\" | translate }}\n        {{\n            \"ADMIN.SIDENAV.MESSAGES\" | translate\n          }}\n        {{\n            \"ADMIN.SIDENAV.APP_INFO\" | translate\n          }}\n        {{\n            \"ADMIN.SIDENAV.COMPANIES\" | translate\n          }}\n      \n    \n\n    \n    \n      \n    \n  \n  \n    \n      \n        \n        {{ \"COMMON.MENU\" | translate }}\n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (!sidebarCollapsed()) {      }                              admin_panel_settings          {{ \"ADMIN.SIDENAV.HEADER\" | translate }}                            {{            \"ADMIN.SIDENAV.DASHBOARD\" | translate          }}        {{ \"ADMIN.SIDENAV.USERS\" | translate }}        {{ \"ADMIN.SIDENAV.FILES\" | translate }}        {{            \"ADMIN.SIDENAV.MESSAGES\" | translate          }}        {{            \"ADMIN.SIDENAV.APP_INFO\" | translate          }}        {{            \"ADMIN.SIDENAV.COMPANIES\" | translate          }}                                                          {{ \"COMMON.MENU\" | translate }}                '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminShellLayout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStatsDTO.html":{"url":"interfaces/AdminStatsDTO.html","title":"interface - AdminStatsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminStatsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-stats.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            files_breakdown\n                                        \n                                \n                                \n                                        \n                                            timeseries\n                                        \n                                \n                                \n                                        \n                                            totals\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        files_breakdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files_breakdown:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeseries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeseries:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totals:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeSeriesPoint {\n  date: string;\n  count: number;\n}\nexport interface AdminStatsDTO {\n  totals: Record;\n  files_breakdown: Record;\n  timeseries: Record;\n}\n\nexport interface AdminCompanyDashboardDTO {\n  // Minimal identity\n  tax_id: string;\n  name?: string | null;\n  sector?: string | null;\n\n  // New enriched payload from backend\n  company?: {\n    tax_id?: string;\n    business_name?: string;\n    legal_status?: string;\n    ciiu?: string;\n    company_type?: string;\n    incorporation_date?: string; // ISO or YYYY-MM-DD\n    address?: string;\n    representatives?: any[];\n    representative?: string;\n    source_url?: string;\n    additional?: {\n      is_state_supplier?: boolean;\n      offers_remittances?: boolean;\n      sells_on_credit?: boolean;\n      belongs_to_mv?: boolean;\n      is_public_interest?: boolean;\n      is_bic?: boolean;\n      bic_since_year?: number | null;\n      bic_impact_areas?: string[] | null;\n      judicial_disposition?: string | null;\n      last_corp_update_at?: string | null;\n      is_foreign_domiciled?: boolean;\n    };\n    fetched_at?: string;\n  } | null;\n  score?: number | null;\n  score_source?: string | null;\n  financials?: any[];\n  contributions?: any[];\n  sector_comparison?: any;\n  missing_data?: string[];\n  imputation?: { error?: string; missing?: string[] } | null;\n  scenarios?: any[];\n\n  // Existing fields\n  llm_insights?: any; // can vary\n  metrics?: Record;\n  signals?: Array;\n  overview?: string | null;\n}\n\nexport abstract class AdminStatsPort {\n  abstract getOverview(days?: number): Promise;\n  abstract getCompanyDashboard(\n    taxId: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStatsFacade.html":{"url":"injectables/AdminStatsFacade.html","title":"injectable - AdminStatsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminStatsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-stats.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                company\n                            \n                            \n                                    Readonly\n                                companyError\n                            \n                            \n                                    Readonly\n                                companyLoading\n                            \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(days: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-stats.facade.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                days\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadCompany\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCompany(taxId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-stats.facade.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AdminStatsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        companyError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        companyLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-stats.facade.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, signal } from '@angular/core';\nimport {\n  AdminStatsDTO,\n  AdminCompanyDashboardDTO,\n} from '@core/ports/admin-stats.port';\nimport { AdminStatsService } from '@infrastructure/services/admin-stats.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminStatsFacade {\n  private readonly api = inject(AdminStatsService);\n\n  readonly loading = signal(false);\n  readonly data = signal(null);\n  readonly error = signal(null);\n\n  readonly companyLoading = signal(false);\n  readonly company = signal(null);\n  readonly companyError = signal(null);\n\n  async load(days = 30): Promise {\n    if (this.loading()) return;\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.api.getOverview(days);\n      this.data.set(res);\n    } catch (e: any) {\n      this.error.set(e?.message ?? 'Failed to load stats');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async loadCompany(taxId: string): Promise {\n    if (!taxId || this.companyLoading()) return;\n    this.companyLoading.set(true);\n    this.companyError.set(null);\n    try {\n      const res = await this.api.getCompanyDashboard(taxId);\n      this.company.set(res);\n    } catch (e: any) {\n      this.companyError.set(e?.message ?? 'Failed to load company dashboard');\n    } finally {\n      this.companyLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminStatsPort.html":{"url":"classes/AdminStatsPort.html","title":"class - AdminStatsPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminStatsPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-stats.port.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCompanyDashboard\n                            \n                            \n                                    Abstract\n                                getOverview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCompanyDashboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCompanyDashboard(taxId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-stats.port.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getOverview\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOverview(days?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-stats.port.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                days\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface TimeSeriesPoint {\n  date: string;\n  count: number;\n}\nexport interface AdminStatsDTO {\n  totals: Record;\n  files_breakdown: Record;\n  timeseries: Record;\n}\n\nexport interface AdminCompanyDashboardDTO {\n  // Minimal identity\n  tax_id: string;\n  name?: string | null;\n  sector?: string | null;\n\n  // New enriched payload from backend\n  company?: {\n    tax_id?: string;\n    business_name?: string;\n    legal_status?: string;\n    ciiu?: string;\n    company_type?: string;\n    incorporation_date?: string; // ISO or YYYY-MM-DD\n    address?: string;\n    representatives?: any[];\n    representative?: string;\n    source_url?: string;\n    additional?: {\n      is_state_supplier?: boolean;\n      offers_remittances?: boolean;\n      sells_on_credit?: boolean;\n      belongs_to_mv?: boolean;\n      is_public_interest?: boolean;\n      is_bic?: boolean;\n      bic_since_year?: number | null;\n      bic_impact_areas?: string[] | null;\n      judicial_disposition?: string | null;\n      last_corp_update_at?: string | null;\n      is_foreign_domiciled?: boolean;\n    };\n    fetched_at?: string;\n  } | null;\n  score?: number | null;\n  score_source?: string | null;\n  financials?: any[];\n  contributions?: any[];\n  sector_comparison?: any;\n  missing_data?: string[];\n  imputation?: { error?: string; missing?: string[] } | null;\n  scenarios?: any[];\n\n  // Existing fields\n  llm_insights?: any; // can vary\n  metrics?: Record;\n  signals?: Array;\n  overview?: string | null;\n}\n\nexport abstract class AdminStatsPort {\n  abstract getOverview(days?: number): Promise;\n  abstract getCompanyDashboard(\n    taxId: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStatsService.html":{"url":"injectables/AdminStatsService.html","title":"injectable - AdminStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCompanyDashboard\n                            \n                            \n                                    Async\n                                getOverview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCompanyDashboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCompanyDashboard(taxId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-stats.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOverview\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOverview(days: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-stats.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                days\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-stats.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-stats.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport {\n  AdminStatsDTO,\n  AdminStatsPort,\n  AdminCompanyDashboardDTO,\n} from '@core/ports/admin-stats.port';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminStatsService implements AdminStatsPort {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async getOverview(days = 30): Promise {\n    const url = `${this.base}/admin/stats/overview`;\n    const data = await firstValueFrom(\n      this.http.get(url, { params: { days } }),\n    );\n    return data;\n  }\n\n  async getCompanyDashboard(taxId: string): Promise {\n    const url = `${this.base}/admin/stats/company/${encodeURIComponent(taxId)}/`;\n    return await firstValueFrom(this.http.get(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminUserItem.html":{"url":"interfaces/AdminUserItem.html","title":"interface - AdminUserItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminUserItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-users.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\nexport interface AdminUsersPort {\n  list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  get(userId: string): Promise;\n  create(payload: CreateUserPayload): Promise;\n  update(\n    userId: string,\n    payload: Partial,\n  ): Promise;\n  delete(userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminUserItem-1.html":{"url":"interfaces/AdminUserItem-1.html","title":"interface - AdminUserItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminUserItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminUsersService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/users/`;\n    // build params without undefined/null/empty values to avoid sending 'undefined'\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.email != null && src.email !== '') qp.email = src.email;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(\n      this.http.get>(url, { params: qp }),\n    );\n    return {\n      items: data?.results ?? [],\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: params?.limit ?? 10,\n      total: data?.info?.count ?? 0,\n    };\n  }\n\n  async get(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async create(payload: CreateUserPayload): Promise {\n    // Backend's register endpoint creates users\n    const url = `${this.base}/auth/register`;\n    return firstValueFrom(this.http.post(url, payload));\n  }\n\n  async update(\n    userId: string,\n    payload: Partial,\n  ): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.put(url, payload));\n  }\n\n  async delete(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    await firstValueFrom(this.http.delete(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminUsersFacade.html":{"url":"injectables/AdminUsersFacade.html","title":"injectable - AdminUsersFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminUsersFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/admin/admin-users.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applySearch\n                            \n                            \n                                create\n                            \n                            \n                                    Private\n                                    Readonly\n                                createUC\n                            \n                            \n                                    Readonly\n                                creating\n                            \n                            \n                                delete\n                            \n                            \n                                    Private\n                                    Readonly\n                                deleteUC\n                            \n                            \n                                    Readonly\n                                end\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Private\n                                    Readonly\n                                listUC\n                            \n                            \n                                nextPage\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                prevPage\n                            \n                            \n                                    Readonly\n                                search\n                            \n                            \n                                setLimit\n                            \n                            \n                                setSort\n                            \n                            \n                                    Readonly\n                                sortBy\n                            \n                            \n                                    Readonly\n                                sortOrder\n                            \n                            \n                                    Readonly\n                                start\n                            \n                            \n                                    Readonly\n                                total\n                            \n                            \n                                update\n                            \n                            \n                                    Private\n                                    Readonly\n                                updateUC\n                            \n                            \n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/admin/admin-users.facade.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        applySearch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        createUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CreateUserUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        creating\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        deleteUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUserUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    Math.min(this.page() * this.limit(), this.total()),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(10)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ListUsersUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLimit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('asc')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.page() - 1) * this.limit() + 1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updateUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UpdateUserUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/application/admin/admin-users.facade.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal, computed } from '@angular/core';\nimport type { AdminUserItem } from '@core/ports';\nimport {\n  ListUsersUseCase,\n  CreateUserUseCase,\n  UpdateUserUseCase,\n  DeleteUserUseCase,\n} from '@core/use-cases';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminUsersFacade {\n  private readonly listUC = inject(ListUsersUseCase);\n  private readonly createUC = inject(CreateUserUseCase);\n  private readonly updateUC = inject(UpdateUserUseCase);\n  private readonly deleteUC = inject(DeleteUserUseCase);\n\n  readonly creating = signal(false);\n  readonly error = signal(null);\n  readonly users = signal([]);\n  readonly page = signal(1);\n  readonly limit = signal(10);\n  readonly total = signal(0);\n  readonly search = signal('');\n  readonly start = computed(() => (this.page() - 1) * this.limit() + 1);\n  readonly end = computed(() =>\n    Math.min(this.page() * this.limit(), this.total()),\n  );\n  readonly sortBy = signal('');\n  readonly sortOrder = signal('asc');\n\n  async refresh() {\n    const res = await this.listUC.execute({\n      page: this.page(),\n      limit: this.limit(),\n      email: this.search() || undefined,\n      sort_by: (this.sortBy() || undefined) as any,\n      sort_order: this.sortOrder(),\n    });\n    this.users.set(res.items || []);\n    this.total.set(res.total || 0);\n  }\n\n  nextPage = async () => {\n    if (this.page() * this.limit() >= this.total()) return;\n    this.page.update((p) => p + 1);\n    await this.refresh();\n  };\n\n  prevPage = async () => {\n    if (this.page()  p - 1);\n    await this.refresh();\n  };\n\n  applySearch = async (value: string) => {\n    this.search.set(value.trim());\n    this.page.set(1);\n    await this.refresh();\n  };\n\n  setSort = (field: 'email' | 'username' | 'created_at') => {\n    if (this.sortBy() === field) {\n      this.sortOrder.update((o) => (o === 'asc' ? 'desc' : 'asc'));\n    } else {\n      this.sortBy.set(field);\n      this.sortOrder.set('asc');\n    }\n    this.page.set(1);\n    this.refresh();\n  };\n\n  setLimit = async (limit: number) => {\n    if (!Number.isFinite(limit) || limit  {\n    if (this.creating()) return;\n    this.creating.set(true);\n    this.error.set(null);\n    try {\n      await this.createUC.execute(payload);\n      await this.refresh();\n    } catch (e: any) {\n      this.error.set(e?.error?.detail || e?.message || 'Error creando usuario');\n    } finally {\n      this.creating.set(false);\n    }\n  };\n\n  update = async (userId: string, payload: any) => {\n    await this.updateUC.execute(userId, payload);\n    await this.refresh();\n  };\n\n  delete = async (userId: string) => {\n    await this.deleteUC.execute(userId);\n    await this.refresh();\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminUsersPort.html":{"url":"interfaces/AdminUsersPort.html","title":"interface - AdminUsersPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminUsersPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-users.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(payload: CreateUserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-users.port.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-users.port.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-users.port.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-users.port.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(userId: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/admin-users.port.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\nexport interface AdminUsersPort {\n  list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  get(userId: string): Promise;\n  create(payload: CreateUserPayload): Promise;\n  update(\n    userId: string,\n    payload: Partial,\n  ): Promise;\n  delete(userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminUsersService.html":{"url":"injectables/AdminUsersService.html","title":"injectable - AdminUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: CreateUserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-users.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-users.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-users.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-users.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/admin-users.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-users.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/admin-users.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminUsersService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/users/`;\n    // build params without undefined/null/empty values to avoid sending 'undefined'\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.email != null && src.email !== '') qp.email = src.email;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(\n      this.http.get>(url, { params: qp }),\n    );\n    return {\n      items: data?.results ?? [],\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: params?.limit ?? 10,\n      total: data?.info?.count ?? 0,\n    };\n  }\n\n  async get(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async create(payload: CreateUserPayload): Promise {\n    // Backend's register endpoint creates users\n    const url = `${this.base}/auth/register`;\n    return firstValueFrom(this.http.post(url, payload));\n  }\n\n  async update(\n    userId: string,\n    payload: Partial,\n  ): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.put(url, payload));\n  }\n\n  async delete(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    await firstValueFrom(this.http.delete(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgentModel.html":{"url":"interfaces/AgentModel.html","title":"interface - AgentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/agent-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            add_context\n                                        \n                                \n                                \n                                        \n                                            agent_id\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            instructions\n                                        \n                                \n                                \n                                        \n                                            knowledge\n                                        \n                                \n                                \n                                        \n                                            memory\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            storage\n                                        \n                                \n                                \n                                        \n                                            tools\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add_context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        add_context:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        agent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instructions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        knowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        knowledge:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        memory:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storage:         Storage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Storage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tools:         Tool[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tool[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tool {\n  name: string;\n  parameters: {\n    type: string;\n    properties: Record;\n    required: string[];\n  };\n  requires_confirmation: boolean;\n  external_execution: boolean;\n}\n\nexport interface Model {\n  name: string;\n  model: string;\n  provider: string;\n}\n\nexport interface Storage {\n  name: string;\n}\n\nexport interface AgentModel {\n  agent_id: string;\n  name: string;\n  model: Model;\n  add_context: boolean;\n  tools: Tool[];\n  memory: any | null;\n  storage: Storage;\n  knowledge: any | null;\n  description: string | null;\n  instructions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AggregateInsights.html":{"url":"interfaces/AggregateInsights.html","title":"interface - AggregateInsights","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AggregateInsights\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/session-analysis.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action_recommendations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            common_opportunities\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            common_risks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diversification_comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ranking\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action_recommendations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action_recommendations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        common_opportunities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        common_opportunities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        common_risks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        common_risks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diversification_comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diversification_comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ranking\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ranking:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyDashboardSummary {\n  company?: any;\n  score?: {\n    score?: number;\n    risk_class?: string;\n    recommended_credit_limit?: number;\n  } | null;\n  contributions?: any;\n  scenarios?: any[];\n  financials?: any[];\n}\n\nexport interface CompanyInsights {\n  narrative?: string;\n  risk_summary?: string;\n  reputation?: string;\n  credit_recommendation?: string;\n  key_factors?: string[];\n  warnings?: string[];\n  suggested_actions?: string[];\n  opportunity_zones?: string[];\n  early_alerts?: string[];\n  data_quality_flags?: string[];\n}\n\nexport interface SessionCompanyItem {\n  tax_id: string;\n  dashboard?: CompanyDashboardSummary | Record;\n  insights?: CompanyInsights | null;\n  error?: string;\n}\n\nexport interface AggregateInsights {\n  overview?: string;\n  ranking?: Array;\n  common_opportunities?: string[];\n  common_risks?: string[];\n  diversification_comment?: string;\n  action_recommendations?: string[];\n}\n\nexport interface SessionCompaniesAnalysis {\n  session_id: string;\n  company_count: number;\n  companies: SessionCompanyItem[];\n  aggregate_insights?: AggregateInsights | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalyzeSessionCompaniesUseCase.html":{"url":"injectables/AnalyzeSessionCompaniesUseCase.html","title":"injectable - AnalyzeSessionCompaniesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalyzeSessionCompaniesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/sessions/analyze-session-companies.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/sessions/analyze-session-companies.usecase.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SESSIONS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/sessions/analyze-session-companies.usecase.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { SESSIONS_PORT } from '@core/tokens';\nimport type { SessionsPort } from '@core/ports/sessions.port';\nimport type { Observable } from 'rxjs';\nimport type { SessionCompaniesAnalysis } from '@core/models/session-analysis';\n\n@Injectable({ providedIn: 'root' })\nexport class AnalyzeSessionCompaniesUseCase {\n  private readonly sessions = inject(SESSIONS_PORT);\n  execute(sessionId: string): Observable {\n    // agentId is not used by backend\n    return this.sessions.analyzeCompanies('default', sessionId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                getInfo\n                            \n                            \n                                    Optional\n                                info\n                            \n                            \n                                    Private\n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                            \n                                    Private\n                                    Readonly\n                                theme\n                            \n                            \n                                    Private\n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setFavicon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setFavicon\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFavicon(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        getInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GetAppInfoUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  inject,\n  PLATFORM_ID,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { GetAppInfoUseCase } from '@core/use-cases';\nimport type { AppInfo } from '@core/models';\nimport { LanguageService } from '@infrastructure/services/language.service';\nimport { ThemeService } from '@infrastructure/services/theme.service';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  private readonly getInfo = inject(GetAppInfoUseCase);\n  private readonly lang = inject(LanguageService);\n  private readonly theme = inject(ThemeService);\n  private readonly title = inject(Title);\n  private readonly platformId = inject(PLATFORM_ID);\n  info?: AppInfo;\n\n  async ngOnInit() {\n    try {\n      this.lang.init();\n      this.theme.init();\n      this.info = await this.getInfo.execute();\n      // Update page title and favicon using app info\n      const name = this.info?.site_name || 'Agente IA';\n      this.title.setTitle(name);\n      if (isPlatformBrowser(this.platformId)) {\n        const icon =\n          this.info?.site_icon || this.info?.site_logo || '/favicon.ico';\n        this.setFavicon(icon);\n      }\n    } catch {}\n  }\n\n  private setFavicon(href: string) {\n    try {\n      const d = document;\n      let found = d.querySelector(\"link[rel*='icon']\");\n      let el: HTMLLinkElement;\n      if (found && found instanceof HTMLLinkElement) {\n        el = found;\n      } else {\n        const created = d.createElement('link');\n        created.setAttribute('rel', 'icon');\n        d.head.appendChild(created);\n        el = d.querySelector(\"link[rel='icon']\") as HTMLLinkElement;\n      }\n      el.type = 'image/x-icon';\n      el.href = href;\n    } catch {}\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppInfo.html":{"url":"interfaces/AppInfo.html","title":"interface - AppInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            site_icon\n                                        \n                                \n                                \n                                        \n                                            site_logo\n                                        \n                                \n                                \n                                        \n                                            site_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_logo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AppInfo {\n  site_name: string;\n  site_icon: string;\n  site_logo: string;\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppInfoPort.html":{"url":"interfaces/AppInfoPort.html","title":"interface - AppInfoPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppInfoPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/app-info.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAppInfo\n                                    \n                                \n                                \n                                    \n                                        updateAppInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppInfo\n                        \n                    \n                \n            \n            \n                \ngetAppInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/app-info.port.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAppInfo\n                        \n                    \n                \n            \n            \n                \nupdateAppInfo(payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/app-info.port.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { AppInfo } from '../models/app-info';\n\nexport interface AppInfoPort {\n  getAppInfo(): Promise;\n  updateAppInfo(payload: Partial): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppInfoService.html":{"url":"injectables/AppInfoService.html","title":"injectable - AppInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/app-info.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAppInfo\n                            \n                            \n                                    Async\n                                updateAppInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/app-info.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAppInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAppInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/app-info.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAppInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAppInfo(payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/app-info.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/app-info.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport type { AppInfo } from '@core/models/app-info';\nimport type { AppInfoPort } from '@core/ports';\n\n@Injectable({ providedIn: 'root' })\nexport class AppInfoService implements AppInfoPort {\n  private readonly base = environment.baseUrl;\n\n  constructor(private readonly http: HttpClient) {}\n\n  async getAppInfo(): Promise {\n    const url = `${this.base}/app-info/`;\n    return firstValueFrom(\n      this.http.get(url).pipe(\n        catchError(() =>\n          of({\n            site_name: 'Agente IA',\n            site_icon: '/favicon.ico',\n            site_logo: '/favicon.ico',\n          } satisfies AppInfo),\n        ),\n      ),\n    );\n  }\n\n  async updateAppInfo(payload: Partial): Promise {\n    const url = `${this.base}/app-info/`;\n    return firstValueFrom(this.http.put(url, payload));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppTranslateLoader.html":{"url":"classes/AppTranslateLoader.html","title":"class - AppTranslateLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppTranslateLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.config.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.config.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApplicationConfig,\n  provideBrowserGlobalErrorListeners,\n  provideZonelessChangeDetection,\n  importProvidersFrom,\n  provideAppInitializer,\n  inject, //  = {\n      es: es as TranslationObject,\n      en: en as TranslationObject,\n    };\n    return of(map[lang] || map['es']);\n  }\n}\n\nexport function HttpLoaderFactory(_http: HttpClient) {\n  return new AppTranslateLoader();\n}\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideMarkdown(),\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n\n    // Skip the very first view transition to avoid bootstrap-time InvalidStateError\n    provideRouter(routes, withViewTransitions({ skipInitialTransition: true })),\n    { provide: PreloadingStrategy, useClass: CustomPreloadStrategy },\n\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withFetch(), withInterceptors([authInterceptorFn])),\n\n    importProvidersFrom(\n      TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient],\n        },\n        fallbackLang: 'es',\n      }),\n    ),\n\n    // Initializer 1: language init\n    provideAppInitializer(() => {\n      const langService = inject(LanguageService);\n      return langService.initApp(); // can return void or Promise\n    }),\n\n    // Initializer 2: refresh role from token (client only)\n    provideAppInitializer(() => {\n      const token = inject(TokenStorageService);\n      const getProfile = inject(GetProfileUseCase);\n\n      const t = token.getToken();\n      if (!t) return; // nothing to do\n\n      return getProfile\n        .execute(t)\n        .then((profile) => {\n          if (profile?.role) token.setRole(profile.role);\n        })\n        .catch(() => {\n          // swallow bootstrap errors\n        });\n    }),\n\n    // Initializer 3: performance-lite toggling for mobile/low-end\n    provideAppInitializer(() => {\n      const perf = inject(PerformanceService);\n      perf.init();\n    }),\n\n    { provide: CHAT_STREAM_PORT, useExisting: SseService },\n    { provide: SESSIONS_PORT, useExisting: SessionsService },\n    { provide: AUTH_PORT, useExisting: AuthService },\n    { provide: APP_INFO_PORT, useExisting: AppInfoService },\n    { provide: FILES_PORT, useExisting: FilesService },\n    { provide: ADMIN_USERS_PORT, useExisting: AdminUsersService },\n    { provide: COMPANIES_PORT, useExisting: CompaniesService },\n    { provide: RISK_WEIGHTS_PORT, useExisting: RiskWeightsService },\n    { provide: ADMIN_MESSAGES_PORT, useExisting: AdminMessagesService },\n\n    // KPIS_PORT: feature flag para mock/api\n    {\n      provide: KPIS_PORT,\n      useClass: environment.mockKpis ? KpisMockService : KpisApiService,\n    },\n  ],\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioData.html":{"url":"interfaces/AudioData.html","title":"interface - AudioData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            base64_audio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sample_rate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64_audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64_audio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sample_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sample_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/guards/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/guards/auth.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/auth.guard.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/auth.guard.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuardService {\n  private token = inject(TokenStorageService);\n  private router = inject(Router);\n  canActivate(): boolean {\n    if (!this.token.isAuthenticated()) {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n    return true;\n  }\n}\n\nexport const AuthGuard: CanActivateFn = () => {\n  return inject(AuthGuardService).canActivate();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthPort.html":{"url":"interfaces/AuthPort.html","title":"interface - AuthPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/auth.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getProfile\n                                    \n                                \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        register\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/auth.port.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(payload: LoginRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/auth.port.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(payload: RegisterRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/auth.port.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type {\n  LoginRequest,\n  RegisterRequest,\n  UserProfile,\n  LoginSuccessResponse,\n  RegisterSuccessResponse,\n} from '../models/auth';\n\nexport interface AuthPort {\n  login(payload: LoginRequest): Promise;\n  register(payload: RegisterRequest): Promise;\n  getProfile(token: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: LoginRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: RegisterRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport type {\n  LoginRequest,\n  RegisterRequest,\n  UserProfile,\n  LoginSuccessResponse,\n  RegisterSuccessResponse,\n} from '@core/models/auth';\nimport type { AuthPort } from '@core/ports';\nimport { environment } from '@environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService implements AuthPort {\n  private readonly http = inject(HttpClient);\n  // Use same-origin endpoints served by SSR express server\n  private readonly base = environment.baseUrl;\n\n  async login(payload: LoginRequest): Promise {\n    const url = `${this.base}/auth/login`;\n    return firstValueFrom(this.http.post(url, payload));\n  }\n\n  async register(payload: RegisterRequest): Promise {\n    const url = `${this.base}/auth/register`;\n    const body = {\n      email: payload.email,\n      password: payload.password,\n      username: payload.username,\n    };\n    return firstValueFrom(this.http.post(url, body));\n  }\n\n  getProfile(token: string): Promise {\n    const url = `${this.base}/auth/me`;\n    return firstValueFrom(\n      this.http.get(url, {\n        headers: { Authorization: `Bearer ${token}` },\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackgroundService.html":{"url":"injectables/BackgroundService.html","title":"injectable - BackgroundService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackgroundService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/background.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bg\n                            \n                            \n                                    Private\n                                _neon\n                            \n                            \n                                    Private\n                                _palette\n                            \n                            \n                                    Private\n                                _parallax\n                            \n                            \n                                    Readonly\n                                bg\n                            \n                            \n                                    Readonly\n                                neon\n                            \n                            \n                                    Private\n                                onPointerMove\n                            \n                            \n                                    Readonly\n                                palette\n                            \n                            \n                                    Readonly\n                                parallax\n                            \n                            \n                                    Private\n                                raf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyBodyClasses\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                readLS\n                            \n                            \n                                    Private\n                                safeDoc\n                            \n                            \n                                setBackground\n                            \n                            \n                                setNeonEdges\n                            \n                            \n                                setPalette\n                            \n                            \n                                setParallax\n                            \n                            \n                                    Private\n                                setupParallaxListener\n                            \n                            \n                                    Private\n                                writeLS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyBodyClasses\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyBodyClasses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readLS\n                        \n                    \n                \n            \n            \n                \n                        \n                    readLS(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDoc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Document | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBackground\n                        \n                    \n                \n            \n            \n                \nsetBackground(style: BgStyle)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                style\n                                            \n                                                            BgStyle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNeonEdges\n                        \n                    \n                \n            \n            \n                \nsetNeonEdges(enabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                enabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPalette\n                        \n                    \n                \n            \n            \n                \nsetPalette(p: Palette)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                p\n                                            \n                                                            Palette\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setParallax\n                        \n                    \n                \n            \n            \n                \nsetParallax(enabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                enabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupParallaxListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupParallaxListener()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        writeLS\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLS(k: string, v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/background.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('bokeh')\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _neon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _palette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('vaporwave')\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _parallax\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._bg.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        neon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._neon.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onPointerMove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        palette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._palette.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        parallax\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._parallax.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        raf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/background.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nexport type BgStyle = 'minimal' | 'aurora' | 'bokeh';\nexport type Palette = 'default' | 'vaporwave' | 'cyber';\n\nconst STORAGE_BG = 'ui_bg_style';\nconst STORAGE_PAL = 'ui_palette';\nconst STORAGE_NEON = 'ui_neon_edges';\nconst STORAGE_PRLX = 'ui_bg_parallax';\n\n@Injectable({ providedIn: 'root' })\nexport class BackgroundService {\n  private _bg = signal('bokeh');\n  readonly bg = this._bg.asReadonly();\n  private _palette = signal('vaporwave');\n  readonly palette = this._palette.asReadonly();\n  private _neon = signal(true);\n  readonly neon = this._neon.asReadonly();\n  private _parallax = signal(true);\n  readonly parallax = this._parallax.asReadonly();\n\n  private raf = 0;\n\n  init() {\n    const bg = this.readLS(STORAGE_BG) as BgStyle | null;\n    const pal = this.readLS(STORAGE_PAL) as Palette | null;\n    const neon = this.readLS(STORAGE_NEON);\n    const prlx = this.readLS(STORAGE_PRLX);\n\n    this.setBackground(\n      bg === 'minimal' || bg === 'aurora' || bg === 'bokeh' ? bg : 'bokeh',\n    );\n    this.setPalette(\n      pal === 'vaporwave' || pal === 'cyber' || pal === 'default'\n        ? pal\n        : 'vaporwave',\n    );\n    this.setNeonEdges(neon === 'false' ? false : true);\n    this.setParallax(prlx === 'false' ? false : true);\n  }\n\n  setBackground(style: BgStyle) {\n    this._bg.set(style);\n    this.writeLS(STORAGE_BG, style);\n    this.applyBodyClasses();\n  }\n\n  setPalette(p: Palette) {\n    this._palette.set(p);\n    this.writeLS(STORAGE_PAL, p);\n    this.applyBodyClasses();\n  }\n\n  setNeonEdges(enabled: boolean) {\n    this._neon.set(enabled);\n    this.writeLS(STORAGE_NEON, String(enabled));\n    this.applyBodyClasses();\n  }\n\n  setParallax(enabled: boolean) {\n    this._parallax.set(enabled);\n    this.writeLS(STORAGE_PRLX, String(enabled));\n    this.applyBodyClasses();\n    this.setupParallaxListener();\n  }\n\n  private applyBodyClasses() {\n    const doc = this.safeDoc();\n    if (!doc) return;\n    const body = doc.body;\n    // background style\n    body.classList.remove('bg-minimal', 'bg-aurora', 'bg-bokeh');\n    body.classList.add(`bg-${this._bg()}`);\n    // palette\n    body.classList.remove(\n      'palette-default',\n      'palette-vaporwave',\n      'palette-cyber',\n    );\n    body.classList.add(`palette-${this._palette()}`);\n    // neon edges\n    body.classList.toggle('neon-edges', this._neon());\n    // parallax baseline vars\n    if (!body.style.getPropertyValue('--bg-px')) {\n      body.style.setProperty('--bg-px', '0%');\n      body.style.setProperty('--bg-py', '0%');\n    }\n  }\n\n  private setupParallaxListener() {\n    if (typeof window === 'undefined') return;\n    window.removeEventListener('pointermove', this.onPointerMove, {\n      capture: false,\n    } as any);\n    if (!this._parallax()) return;\n    window.addEventListener('pointermove', this.onPointerMove, {\n      passive: true,\n    });\n  }\n\n  private onPointerMove = (ev: PointerEvent) => {\n    if (this.raf) return;\n    this.raf = requestAnimationFrame(() => {\n      this.raf = 0;\n      const doc = this.safeDoc();\n      if (!doc) return;\n      const body = doc.body;\n      const { innerWidth: w, innerHeight: h } = window;\n      const x = (ev.clientX / w) * 2 - 1; // -1..1\n      const y = (ev.clientY / h) * 2 - 1; // -1..1\n      // map to small percent shift\n      const max = 2; // percent\n      const px = (x * max).toFixed(2) + '%';\n      const py = (y * max).toFixed(2) + '%';\n      body.style.setProperty('--bg-px', px);\n      body.style.setProperty('--bg-py', py);\n    });\n  };\n\n  private readLS(k: string): string | null {\n    try {\n      return localStorage.getItem(k);\n    } catch {\n      return null;\n    }\n  }\n  private writeLS(k: string, v: string) {\n    try {\n      localStorage.setItem(k, v);\n    } catch {}\n  }\n  private safeDoc(): Document | null {\n    try {\n      return document;\n    } catch {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAgentEvent.html":{"url":"interfaces/BaseAgentEvent.html","title":"interface - BaseAgentEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseAgentEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/chat-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            agent_id\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            run_id\n                                        \n                                \n                                \n                                        \n                                            session_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         ContentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ContentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        run_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type EventType =\n  | 'UserMessage'\n  | 'RunResponse'\n  | 'RunStarted'\n  | 'RunCompleted'\n  | 'RunError'\n  | 'UpdatingMemory'\n  | 'ToolCallStarted'\n  | 'Error'\n  | 'Cancelled';\n\nexport type ContentType = 'text' | 'str';\n\nexport interface BaseAgentEvent {\n  content: string;\n  agent_id: string;\n  event: EventType;\n  run_id: string;\n  session_id: string;\n  created_at: number;\n  content_type: ContentType;\n}\n\nexport interface ChatMessage {\n  id: string;\n  content: string;\n  displayedContent: string;\n  isComplete: boolean;\n  isStreaming: boolean;\n  event: EventType;\n  timestamp: number;\n  // Enriched fields from streaming\n  extra_data?: {\n    reasoning_steps?: Array;\n    references?: Array;\n      time?: number;\n    }>;\n  };\n  images?: Array;\n  videos?: Array;\n  audio?: Array;\n  response_audio?: {\n    id?: string;\n    content?: string;\n    transcript?: string;\n    channels?: number;\n    sample_rate?: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComposerComponent.html":{"url":"components/ChatComposerComponent.html","title":"component - ChatComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/components/chat/composer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-composer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./composer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./composer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragCounter\n                            \n                            \n                                dragging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onDragEnter\n                            \n                            \n                                onDragLeave\n                            \n                            \n                                onDragOver\n                            \n                            \n                                onDrop\n                            \n                            \n                                onRemove\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowUpload\n                            \n                            \n                                filesCount\n                            \n                            \n                                form\n                            \n                            \n                                isSending\n                            \n                            \n                                isUploadingFiles\n                            \n                            \n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                composerInput\n                            \n                            \n                                filesDropped\n                            \n                            \n                                filesSelected\n                            \n                            \n                                keydown\n                            \n                            \n                                removeUploadedFile\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowUpload\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filesCount\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isUploadingFiles\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploadedFiles\n                    \n                \n                \n                    \n                        Type :     UploadedFileMeta[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composerInput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filesDropped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filesSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keydown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeUploadedFile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        send\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/chat/composer.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragEnter\n                        \n                    \n                \n            \n            \n                \nonDragEnter(e: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragLeave\n                        \n                    \n                \n            \n            \n                \nonDragLeave(e: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \nonDragOver(e: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrop\n                        \n                    \n                \n            \n            \n                \nonDrop(e: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemove\n                        \n                    \n                \n            \n            \n                \nonRemove(file: UploadedFileMeta, e?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            UploadedFileMeta\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/chat/composer.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dragCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/chat/composer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/chat/composer.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormGroup } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport type { UploadedFileMeta } from '@core/ports';\n\n@Component({\n  selector: 'app-chat-composer',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    TranslateModule,\n  ],\n  templateUrl: './composer.component.html',\n  styleUrls: ['./composer.component.css'],\n})\nexport class ChatComposerComponent {\n  @Input() form!: FormGroup;\n  @Input() isSending = false;\n  @Input() filesCount = 0;\n  @Input() isUploadingFiles = false;\n  @Input() uploadedFiles: UploadedFileMeta[] = [];\n  // When false, file attach UI is disabled (e.g., on brand new chat before first message)\n  @Input() allowUpload: boolean = true;\n  @Output() send = new EventEmitter();\n  @Output() cancel = new EventEmitter();\n  @Output() filesSelected = new EventEmitter();\n  @Output() filesDropped = new EventEmitter();\n  @Output() removeUploadedFile = new EventEmitter();\n  @Output() keydown = new EventEmitter();\n  @Output() composerInput = new EventEmitter();\n\n  // Drag & Drop state\n  dragging = false;\n  private dragCounter = 0;\n\n  onSubmit() {\n    // Hard guard: do not emit send if uploading files, already sending, or form invalid\n    if (this.isUploadingFiles || this.isSending || !this.form?.valid) {\n      return;\n    }\n    this.send.emit();\n  }\n  onCancel() {\n    this.cancel.emit();\n  }\n  onRemove(file: UploadedFileMeta, e?: Event) {\n    e?.preventDefault();\n    e?.stopPropagation();\n    this.removeUploadedFile.emit(file);\n  }\n\n  onDragEnter(e: DragEvent) {\n    if (!this.allowUpload || !e) return;\n    const hasFiles =\n      !!e.dataTransfer &&\n      Array.from(e.dataTransfer.types || []).includes('Files');\n    if (!hasFiles) return;\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n    this.dragging = true;\n    if (e.dataTransfer) e.dataTransfer.dropEffect = 'copy';\n  }\n\n  onDragOver(e: DragEvent) {\n    if (!this.allowUpload) return; // block when uploads are not allowed\n    if (!e) return;\n    // Only react to file drags\n    const hasFiles =\n      !!e.dataTransfer &&\n      Array.from(e.dataTransfer.types || []).includes('Files');\n    if (!hasFiles) return;\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragging = true;\n    if (e.dataTransfer) e.dataTransfer.dropEffect = 'copy';\n  }\n\n  onDragLeave(e: DragEvent) {\n    if (!e) return;\n    e.preventDefault();\n    e.stopPropagation();\n    // Use counter to avoid flicker when overlay/dom changes\n    if (this.dragCounter > 0) this.dragCounter--;\n    if (this.dragCounter \n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n\n        \n          \n            \n          \n        \n\n        \n          \n            \n          \n          @if (isSending) {\n            \n              \n            \n          }\n        \n      \n\n      @if (!allowUpload) {\n        \n          \n          {{ \"COMPOSER.UPLOADS_DISABLED\" | translate }}\n        \n      }\n\n      \n        {{ \"CHAT.HINT\" | translate }}\n        \n          @if (!allowUpload) {\n            \n              {{ \"COMPOSER.UPLOADS_DISABLED\" | translate }}\n            \n          }\n          @if (isUploadingFiles) {\n            \n          }\n          @if (filesCount) {\n            \n              {{ \"CHAT.FILES_COUNT\" | translate: { count: filesCount } }}\n            \n          }\n          {{ form.get(\"message\")?.value?.length || 0 }}/1000\n        \n      \n\n      @if (isUploadingFiles) {\n        \n          \n          {{ \"COMPOSER.UPLOADING_FILES\" | translate }}\n        \n      }\n\n      @if (dragging) {\n        \n          \n            \n            \n              {{ \"COMPOSER.DROP_HINT\" | translate }}\n            \n          \n        \n      }\n\n      @if (uploadedFiles.length) {\n        \n          @for (f of uploadedFiles; track f.id) {\n            \n              \n                \n                {{ f.filename }}\n              \n              \n                \n              \n            \n          }\n        \n      }\n    \n  \n\n\n    \n\n    \n                \n                    ./composer.component.css\n                \n                /* ============================================\n   MODERN CHAT COMPOSER - GLASSMORPHISM DESIGN\n   ============================================ */\n\n.composer-surface {\n  position: relative;\n  bottom: auto;\n  z-index: 50;\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.4) 0%, \n    hsl(var(--card) / 0.2) 100%);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 1.5rem;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.1),\n    0 5px 20px rgba(0, 0, 0, 0.05),\n    inset 0 1px 0 hsl(var(--foreground) / 0.05);\n  transition: all 0.3s ease;\n  margin: 1rem;\n  overflow: hidden;\n}\n\n.composer-surface:hover {\n  border-color: hsl(var(--primary) / 0.4);\n  box-shadow: \n    0 25px 50px rgba(0, 0, 0, 0.15),\n    0 8px 30px rgba(0, 0, 0, 0.08),\n    inset 0 1px 0 hsl(var(--foreground) / 0.08);\n  transform: translateY(-2px);\n}\n\n.composer-surface::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n}\n\n/* ============================================\n   TEXTAREA STYLING\n   ============================================ */\n\n.composer-surface textarea {\n  min-height: 3rem;\n  max-height: 8rem;\n  background: transparent;\n  color: hsl(var(--foreground));\n  border: none;\n  outline: none;\n  resize: none;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-family: inherit;\n  transition: all 0.3s ease;\n}\n\n.composer-surface textarea::placeholder {\n  color: hsl(var(--muted-foreground));\n  opacity: 0.7;\n}\n\n.composer-surface textarea:focus::placeholder {\n  opacity: 0.5;\n  transform: translateY(-2px);\n}\n\n/* ============================================\n   INPUT CONTAINER\n   ============================================ */\n\n.composer-surface .rounded-xl {\n  background: linear-gradient(135deg, \n    hsl(var(--background) / 0.8) 0%, \n    hsl(var(--background) / 0.4) 100%);\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.composer-surface .rounded-xl::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.2) 50%, \n    transparent 100%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.composer-surface .rounded-xl:focus-within::before {\n  opacity: 1;\n}\n\n.composer-surface .rounded-xl:focus-within {\n  border-color: hsl(var(--primary) / 0.5);\n  box-shadow: \n    0 0 0 3px hsl(var(--primary) / 0.1),\n    0 4px 12px rgba(0, 0, 0, 0.05);\n  background: linear-gradient(135deg, \n    hsl(var(--background) / 0.9) 0%, \n    hsl(var(--background) / 0.6) 100%);\n}\n\n/* ============================================\n   BUTTONS STYLING\n   ============================================ */\n\n.composer-surface .btn {\n  min-width: 3rem;\n  height: 3rem;\n  border-radius: 0.75rem;\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.3) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.composer-surface .btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.1) 50%, \n    transparent 100%);\n  transition: left 0.5s ease;\n}\n\n.composer-surface .btn:hover::before {\n  left: 100%;\n}\n\n.composer-surface .btn:hover {\n  border-color: hsl(var(--primary) / 0.4);\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.15) 0%, \n    hsl(var(--primary) / 0.08) 100%);\n  transform: translateY(-2px);\n  box-shadow: \n    0 6px 20px rgba(0, 0, 0, 0.1),\n    0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.composer-surface .btn-primary {\n  background: linear-gradient(135deg, \n    hsl(var(--primary)) 0%, \n    hsl(var(--primary) / 0.8) 100%);\n  border-color: hsl(var(--primary) / 0.3);\n  color: hsl(var(--primary-foreground));\n  box-shadow: \n    0 4px 16px hsl(var(--primary) / 0.3),\n    0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.composer-surface .btn-primary:hover {\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.9) 0%, \n    hsl(var(--primary) / 0.7) 100%);\n  box-shadow: \n    0 6px 24px hsl(var(--primary) / 0.4),\n    0 4px 12px rgba(0, 0, 0, 0.15);\n  transform: translateY(-3px) scale(1.05);\n}\n\n.composer-surface .btn:disabled {\n  opacity: 0.5;\n  transform: none;\n  cursor: not-allowed;\n}\n\n.composer-surface .btn:disabled:hover {\n  transform: none;\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.3) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n}\n\n/* ============================================\n   DRAG AND DROP STATES\n   ============================================ */\n\n.drop-active {\n  border-color: hsl(var(--primary) / 0.6) !important;\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.1) 0%, \n    hsl(var(--primary) / 0.05) 100%);\n  box-shadow: \n    0 0 0 3px hsl(var(--primary) / 0.2),\n    0 4px 16px rgba(0, 0, 0, 0.1);\n  animation: pulseGlow 1.5s infinite;\n}\n\n@keyframes pulseGlow {\n  0%, 100% {\n    box-shadow: \n      0 0 0 3px hsl(var(--primary) / 0.2),\n      0 4px 16px rgba(0, 0, 0, 0.1);\n  }\n  50% {\n    box-shadow: \n      0 0 0 6px hsl(var(--primary) / 0.1),\n      0 6px 24px rgba(0, 0, 0, 0.15);\n  }\n}\n\n/* ============================================\n   DROP OVERLAY\n   ============================================ */\n\n.drop-overlay {\n  position: absolute;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed hsl(var(--primary) / 0.6);\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.15) 0%, \n    hsl(var(--primary) / 0.08) 100%);\n  backdrop-filter: blur(15px);\n  -webkit-backdrop-filter: blur(15px);\n  border-radius: 1.5rem;\n  color: hsl(var(--primary));\n  pointer-events: none;\n  transition: all 0.3s ease;\n  animation: dropOverlayPulse 2s infinite;\n  z-index: 100;\n}\n\n@keyframes dropOverlayPulse {\n  0%, 100% {\n    transform: scale(1);\n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(1.02);\n    opacity: 1;\n  }\n}\n\n.drop-overlay__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 2rem;\n  animation: bounceIn 0.5s ease-out;\n}\n\n@keyframes bounceIn {\n  0% {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.1);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.drop-overlay mat-icon {\n  font-size: 4rem;\n  height: 4rem;\n  width: 4rem;\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));\n}\n\n/* ============================================\n   UPLOAD DISABLED BANNER\n   ============================================ */\n\n.upload-disabled-banner {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin: 0.5rem 0;\n  padding: 0.75rem 1rem;\n  border-radius: 0.75rem;\n  background: linear-gradient(135deg, \n    hsl(var(--warning) / 0.15) 0%, \n    hsl(var(--warning) / 0.08) 100%);\n  color: hsl(var(--warning));\n  border: 1px solid hsl(var(--warning) / 0.3);\n  backdrop-filter: blur(10px);\n  animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.upload-disabled-banner mat-icon {\n  font-size: 1.25rem;\n  height: 1.25rem;\n  width: 1.25rem;\n}\n\n/* ============================================\n   FILE BADGES\n   ============================================ */\n\n.badge {\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.3) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border: 1px solid hsl(var(--border) / 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 0.5rem;\n  padding: 0.375rem 0.75rem;\n  transition: all 0.3s ease;\n}\n\n.badge:hover {\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.15) 0%, \n    hsl(var(--primary) / 0.08) 100%);\n  border-color: hsl(var(--primary) / 0.3);\n  transform: translateY(-1px);\n}\n\n.badge-info {\n  background: linear-gradient(135deg, \n    hsl(var(--info) / 0.15) 0%, \n    hsl(var(--info) / 0.08) 100%);\n  border-color: hsl(var(--info) / 0.3);\n  color: hsl(var(--info));\n}\n\n.badge-warning {\n  background: linear-gradient(135deg, \n    hsl(var(--warning) / 0.15) 0%, \n    hsl(var(--warning) / 0.08) 100%);\n  border-color: hsl(var(--warning) / 0.3);\n  color: hsl(var(--warning));\n}\n\n/* ============================================\n   LOADING INDICATORS\n   ============================================ */\n\n.loading-spinner {\n  filter: hue-rotate(180deg) brightness(1.2);\n}\n\n.loading-dots {\n  background: linear-gradient(90deg, \n    hsl(var(--info)) 25%, \n    hsl(var(--info) / 0.5) 50%, \n    hsl(var(--info)) 75%);\n  background-size: 200% 100%;\n  animation: shimmer 1.5s infinite;\n}\n\n@keyframes shimmer {\n  0% { background-position: -200% 0; }\n  100% { background-position: 200% 0; }\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 768px) {\n  .composer-surface {\n    margin: 0.5rem;\n    border-radius: 1rem;\n  }\n  \n  .composer-surface .btn {\n    min-width: 2.5rem;\n    height: 2.5rem;\n  }\n  \n  .composer-surface textarea {\n    font-size: 0.95rem;\n  }\n  \n  .drop-overlay__content {\n    padding: 1.5rem;\n  }\n  \n  .drop-overlay mat-icon {\n    font-size: 3rem;\n    height: 3rem;\n    width: 3rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                @if (isSending) {                                                }                    @if (!allowUpload) {                            {{ \"COMPOSER.UPLOADS_DISABLED\" | translate }}              }              {{ \"CHAT.HINT\" | translate }}                  @if (!allowUpload) {                          {{ \"COMPOSER.UPLOADS_DISABLED\" | translate }}                      }          @if (isUploadingFiles) {                      }          @if (filesCount) {                          {{ \"CHAT.FILES_COUNT\" | translate: { count: filesCount } }}                      }          {{ form.get(\"message\")?.value?.length || 0 }}/1000                    @if (isUploadingFiles) {                            {{ \"COMPOSER.UPLOADING_FILES\" | translate }}              }      @if (dragging) {                                                        {{ \"COMPOSER.DROP_HINT\" | translate }}                                    }      @if (uploadedFiles.length) {                  @for (f of uploadedFiles; track f.id) {                                                          {{ f.filename }}                                                                                }              }      '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatEntry.html":{"url":"interfaces/ChatEntry.html","title":"interface - ChatEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatEventsService.html":{"url":"injectables/ChatEventsService.html","title":"injectable - ChatEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/chat-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enrichCurrentMessage\n                            \n                            \n                                handleComplete\n                            \n                            \n                                handleError\n                            \n                            \n                                handleRunCompleted\n                            \n                            \n                                handleRunResponse\n                            \n                            \n                                handleStreamData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatFacade: ChatFacade, connectionStatus: ConnectionStatusService, typewriter: TypewriterService, scrollManager: ScrollManagerService, sessionsEvents: SessionsEventsService, location: Location, tts: TtsService, chatUtils: ChatUtilsService, messageManager: MessageManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/chat-events.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatFacade\n                                                  \n                                                        \n                                                                        ChatFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionStatus\n                                                  \n                                                        \n                                                                        ConnectionStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typewriter\n                                                  \n                                                        \n                                                                        TypewriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scrollManager\n                                                  \n                                                        \n                                                                        ScrollManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionsEvents\n                                                  \n                                                        \n                                                                        SessionsEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tts\n                                                  \n                                                        \n                                                                        TtsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUtils\n                                                  \n                                                        \n                                                                        ChatUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageManager\n                                                  \n                                                        \n                                                                        MessageManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enrichCurrentMessage\n                        \n                    \n                \n            \n            \n                \nenrichCurrentMessage(ctx: ChatPageCtx, data: StreamResponseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StreamResponseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleComplete\n                        \n                    \n                \n            \n            \n                \nhandleComplete(ctx: ChatPageCtx)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(ctx: ChatPageCtx, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRunCompleted\n                        \n                    \n                \n            \n            \n                \nhandleRunCompleted(ctx: ChatPageCtx, data: StreamResponseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StreamResponseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRunResponse\n                        \n                    \n                \n            \n            \n                \nhandleRunResponse(ctx: ChatPageCtx, data: StreamResponseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StreamResponseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleStreamData\n                        \n                    \n                \n            \n            \n                \nhandleStreamData(ctx: ChatPageCtx, data: StreamResponseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-events.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            ChatPageCtx\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StreamResponseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, type ChangeDetectorRef } from '@angular/core';\nimport type { StreamResponseModel, ChatMessage } from '@core/models';\nimport { ChatFacade } from '@app/application';\nimport {\n  ConnectionStatusService,\n  TypewriterService,\n  ScrollManagerService,\n  SessionsEventsService,\n  TtsService,\n  ChatUtilsService,\n  MessageManagerService,\n} from './index';\nimport { Location } from '@angular/common';\n\nexport type ChatPageCtx = {\n  currentMessage: ChatMessage | null;\n  selectedSessionId: string | null;\n  streamingSessionId: string | null;\n  cdr: ChangeDetectorRef;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ChatEventsService {\n  constructor(\n    private readonly chatFacade: ChatFacade,\n    private readonly connectionStatus: ConnectionStatusService,\n    private readonly typewriter: TypewriterService,\n    private readonly scrollManager: ScrollManagerService,\n    private readonly sessionsEvents: SessionsEventsService,\n    private readonly location: Location,\n    private readonly tts: TtsService,\n    private readonly chatUtils: ChatUtilsService,\n    private readonly messageManager: MessageManagerService,\n  ) {}\n\n  handleStreamData(ctx: ChatPageCtx, data: StreamResponseModel) {\n    this.connectionStatus.setStatus('streaming');\n\n    switch (data.event) {\n      case 'UserMessage': {\n        const sid = (data as any)?.rawMessage?.session_id;\n        if (!ctx.selectedSessionId && sid) {\n          queueMicrotask(() => {\n            ctx.selectedSessionId = sid;\n            ctx.streamingSessionId = sid;\n            this.location.replaceState(`/chat/session/${sid}`);\n            this.sessionsEvents.triggerRefresh();\n            ctx.cdr.markForCheck();\n          });\n        }\n        break;\n      }\n      case 'RunResponse':\n        this.handleRunResponse(ctx, data);\n        break;\n      case 'RunStarted':\n        this.chatFacade.addSystemMessage(\n          '🤖 El agente está procesando tu solicitud...',\n          'RunStarted',\n        );\n        break;\n      case 'RunCompleted':\n        this.handleRunCompleted(ctx, data);\n        break;\n      case 'UpdatingMemory':\n      case 'ToolCallStarted':\n        this.chatFacade.setToolRunning(true);\n        break;\n      default:\n        if (data.currentChunk) {\n          this.handleRunResponse(ctx, data);\n        }\n    }\n\n    this.scrollManager.scheduleScrollToBottom();\n    queueMicrotask(() => ctx.cdr.detectChanges());\n  }\n\n  handleRunResponse(ctx: ChatPageCtx, data: StreamResponseModel) {\n    if (!ctx.currentMessage || ctx.currentMessage.isComplete) {\n      ctx.currentMessage = this.chatFacade.createBotMessage(\n        data.rawMessage.run_id || this.chatUtils.generateId(),\n        data.rawMessage.created_at,\n      );\n    }\n\n    if (data.currentChunk && ctx.currentMessage) {\n      ctx.currentMessage.content = data.fullContent;\n      if (!this.typewriter.isActive()) {\n        this.typewriter.startTypewriter(\n          ctx.currentMessage,\n          () => {\n            this.scrollManager.scheduleScrollToBottom();\n            ctx.cdr.detectChanges();\n          },\n          25,\n        );\n      }\n    }\n\n    this.enrichCurrentMessage(ctx, data);\n\n    const raw: any = data.rawMessage;\n    if (!ctx.selectedSessionId && raw?.session_id) {\n      queueMicrotask(() => {\n        ctx.selectedSessionId = raw.session_id;\n        ctx.streamingSessionId = raw.session_id;\n        this.location.replaceState(`/chat/session/${raw.session_id}`);\n        this.sessionsEvents.triggerRefresh();\n        ctx.cdr.markForCheck();\n      });\n    }\n  }\n\n  enrichCurrentMessage(ctx: ChatPageCtx, data: StreamResponseModel) {\n    const msg = ctx.currentMessage;\n    if (!msg) return;\n    if (data.currentChunk) {\n      msg.content = data.fullContent;\n    }\n    const raw: any = data.rawMessage;\n    if (raw?.extra_data?.reasoning_steps) {\n      msg.extra_data = {\n        ...msg.extra_data,\n        reasoning_steps: raw.extra_data.reasoning_steps,\n        references: msg.extra_data?.references,\n      };\n    }\n    if (raw?.extra_data?.references) {\n      msg.extra_data = {\n        ...msg.extra_data,\n        references: raw.extra_data.references,\n        reasoning_steps: msg.extra_data?.reasoning_steps,\n      };\n    }\n    if (raw?.images) msg.images = raw.images;\n    if (raw?.videos) msg.videos = raw.videos;\n  }\n\n  handleRunCompleted(ctx: ChatPageCtx, data: StreamResponseModel) {\n    const msg = ctx.currentMessage;\n    if (msg) {\n      const raw: any = data.rawMessage;\n      if (raw?.extra_data) {\n        msg.extra_data = {\n          reasoning_steps:\n            raw.extra_data.reasoning_steps ?? msg.extra_data?.reasoning_steps,\n          references: raw.extra_data.references ?? msg.extra_data?.references,\n        };\n      }\n      if (raw?.images) msg.images = raw.images;\n      if (raw?.videos) msg.videos = raw.videos;\n\n      this.typewriter.completeMessage(msg);\n    }\n\n    this.chatFacade.setToolRunning(false);\n    this.scrollManager.scheduleScrollToBottom();\n    queueMicrotask(() => {\n      ctx.cdr.detectChanges();\n      ctx.streamingSessionId = null;\n      this.sessionsEvents.triggerRefresh();\n      ctx.cdr.markForCheck();\n    });\n  }\n\n  handleError(ctx: ChatPageCtx, error: any) {\n    console.error('❌ Error en el stream:', error);\n    this.connectionStatus.setStatus('error');\n    this.typewriter.stopTypewriter();\n    this.chatFacade.setIsSending(false);\n    this.chatFacade.setToolRunning(false);\n\n    if (ctx.currentMessage) {\n      this.messageManager.completeMessage(ctx.currentMessage);\n    }\n    const errorMessage = error?.message || 'Error desconocido en la conexión';\n    this.chatFacade.addErrorMessage(`❌ Error: ${errorMessage}`);\n    this.scrollManager.scheduleScrollToBottom();\n    ctx.cdr.detectChanges();\n  }\n\n  handleComplete(ctx: ChatPageCtx) {\n    console.log('✅ Stream completado');\n    this.connectionStatus.setStatus('idle');\n    this.typewriter.stopTypewriter();\n    this.chatFacade.setIsSending(false);\n    this.chatFacade.setToolRunning(false);\n\n    if (ctx.currentMessage) {\n      this.messageManager.completeMessage(ctx.currentMessage);\n    }\n    queueMicrotask(() => ctx.cdr.detectChanges());\n    if (ctx.selectedSessionId) {\n      queueMicrotask(() => this.sessionsEvents.triggerRefresh());\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatFacade.html":{"url":"injectables/ChatFacade.html","title":"injectable - ChatFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/chat/chat.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chatStream\n                            \n                            \n                                    Private\n                                    Readonly\n                                deleteSessionUC\n                            \n                            \n                                    Private\n                                    Readonly\n                                getSessionUC\n                            \n                            \n                                    Readonly\n                                isSending\n                            \n                            \n                                    Private\n                                    Readonly\n                                listSessionsUC\n                            \n                            \n                                    Readonly\n                                messages\n                            \n                            \n                                    Private\n                                    Readonly\n                                sendMessageUC\n                            \n                            \n                                    Private\n                                    Readonly\n                                sessionsPort\n                            \n                            \n                                    Readonly\n                                toolRunning\n                            \n                            \n                                    Private\n                                    Readonly\n                                uploadFileUC\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addErrorMessage\n                            \n                            \n                                addMessage\n                            \n                            \n                                addSystemMessage\n                            \n                            \n                                addUserMessage\n                            \n                            \n                                    Private\n                                agentId\n                            \n                            \n                                cancel\n                            \n                            \n                                clearMessages\n                            \n                            \n                                createBotMessage\n                            \n                            \n                                deleteSession\n                            \n                            \n                                    Private\n                                genId\n                            \n                            \n                                getSession\n                            \n                            \n                                listSessions\n                            \n                            \n                                replaceLastMessage\n                            \n                            \n                                sendMessage\n                            \n                            \n                                setIsSending\n                            \n                            \n                                setMessages\n                            \n                            \n                                setToolRunning\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addErrorMessage\n                        \n                    \n                \n            \n            \n                \naddErrorMessage(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMessage\n                        \n                    \n                \n            \n            \n                \naddMessage(msg: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSystemMessage\n                        \n                    \n                \n            \n            \n                \naddSystemMessage(content: string, event: EventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserMessage\n                        \n                    \n                \n            \n            \n                \naddUserMessage(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        agentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    agentId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearMessages\n                        \n                    \n                \n            \n            \n                \nclearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBotMessage\n                        \n                    \n                \n            \n            \n                \ncreateBotMessage(runId: string, timestamp?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                runId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        genId\n                        \n                    \n                \n            \n            \n                \n                        \n                    genId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listSessions\n                        \n                    \n                \n            \n            \n                \nlistSessions(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceLastMessage\n                        \n                    \n                \n            \n            \n                \nreplaceLastMessage(updater: (m: ChatMessage) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updater\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsSending\n                        \n                    \n                \n            \n            \n                \nsetIsSending(v: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMessages\n                        \n                    \n                \n            \n            \n                \nsetMessages(list: ChatMessage[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToolRunning\n                        \n                    \n                \n            \n            \n                \nsetToolRunning(v: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFiles(files: File[], opts?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/chat/chat.facade.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chatStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CHAT_STREAM_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        deleteSessionUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeleteSessionUseCase(\n    this.sessionsPort,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        getSessionUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GetSessionUseCase(this.sessionsPort)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isSending\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listSessionsUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ListSessionsUseCase(this.sessionsPort)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sendMessageUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SendMessageUseCase(this.chatStream)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sessionsPort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SESSIONS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        toolRunning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        uploadFileUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadFileUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/chat/chat.facade.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport type { Observable } from 'rxjs';\nimport type {\n  StreamResponseModel,\n  SessionEntry,\n  ChatMessage,\n  EventType,\n} from '@core/models';\nimport type {\n  ChatStreamPort,\n  SessionsPort,\n  UploadedFileMeta,\n} from '@core/ports';\nimport { CHAT_STREAM_PORT, SESSIONS_PORT } from '@core/tokens';\nimport {\n  ListSessionsUseCase,\n  GetSessionUseCase,\n  UploadFileUseCase,\n  DeleteSessionUseCase,\n} from '@core/use-cases';\nimport { SendMessageUseCase } from '@core/use-cases/send-message.usecase';\n\n@Injectable({ providedIn: 'root' })\nexport class ChatFacade {\n  // SSE stream port\n  private readonly chatStream = inject(CHAT_STREAM_PORT);\n  private readonly sessionsPort = inject(SESSIONS_PORT);\n\n  // Use-cases\n  private readonly sendMessageUC = new SendMessageUseCase(this.chatStream); // SSE enabled\n  // private readonly sendMessageRestUC = new SendMessageRestUseCase(this.sessionsPort); // REST fallback (disabled)\n  private readonly listSessionsUC = new ListSessionsUseCase(this.sessionsPort);\n  private readonly getSessionUC = new GetSessionUseCase(this.sessionsPort);\n  private readonly deleteSessionUC = new DeleteSessionUseCase(\n    this.sessionsPort,\n  );\n  private readonly uploadFileUC = inject(UploadFileUseCase);\n\n  // UI state signals to simplify page component\n  readonly messages = signal([]);\n  readonly isSending = signal(false);\n  readonly toolRunning = signal(false);\n\n  setMessages(list: ChatMessage[]) {\n    this.messages.set(list);\n  }\n  clearMessages() {\n    this.messages.set([]);\n  }\n  addMessage(msg: ChatMessage) {\n    this.messages.update((arr) => [...arr, msg]);\n  }\n  replaceLastMessage(updater: (m: ChatMessage) => ChatMessage) {\n    this.messages.update((arr) =>\n      arr.length ? [...arr.slice(0, -1), updater(arr[arr.length - 1])] : arr,\n    );\n  }\n  setIsSending(v: boolean) {\n    this.isSending.set(v);\n  }\n  setToolRunning(v: boolean) {\n    this.toolRunning.set(v);\n  }\n\n  // Message helpers (immutable updates)\n  private genId(): string {\n    return (\n      Math.random().toString(36).slice(2) + Math.random().toString(36).slice(2)\n    );\n  }\n\n  addUserMessage(content: string): ChatMessage {\n    const msg: ChatMessage = {\n      id: this.genId(),\n      content,\n      displayedContent: content,\n      isComplete: true,\n      isStreaming: false,\n      event: 'UserMessage',\n      timestamp: Date.now(),\n    } as ChatMessage;\n    this.messages.update((arr) => [...arr, msg]);\n    return msg;\n  }\n\n  addSystemMessage(content: string, event: EventType): ChatMessage {\n    const msg: ChatMessage = {\n      id: this.genId(),\n      content,\n      displayedContent: content,\n      isComplete: true,\n      isStreaming: false,\n      event,\n      timestamp: Date.now(),\n    } as ChatMessage;\n    this.messages.update((arr) => [...arr, msg]);\n    return msg;\n  }\n\n  addErrorMessage(content: string): ChatMessage {\n    const msg: ChatMessage = {\n      id: this.genId(),\n      content,\n      displayedContent: content,\n      isComplete: true,\n      isStreaming: false,\n      event: 'Error',\n      timestamp: Date.now(),\n    } as ChatMessage;\n    this.messages.update((arr) => [...arr, msg]);\n    return msg;\n  }\n\n  createBotMessage(runId: string, timestamp?: number): ChatMessage {\n    const msg: ChatMessage = {\n      id: runId || this.genId(),\n      content: '',\n      displayedContent: '',\n      isComplete: false,\n      isStreaming: true,\n      event: 'RunResponse',\n      timestamp: timestamp || Date.now(),\n    } as ChatMessage;\n    this.messages.update((arr) => [...arr, msg]);\n    return msg;\n  }\n\n  private agentId(): string {\n    return 'default';\n  }\n\n  listSessions(params?: {\n    page?: number;\n    limit?: number;\n  }): Observable {\n    return this.listSessionsUC.execute(this.agentId(), params);\n  }\n\n  getSession(sessionId: string): Observable {\n    return this.getSessionUC.execute(this.agentId(), sessionId);\n  }\n\n  deleteSession(sessionId: string) {\n    return this.deleteSessionUC.execute(this.agentId(), sessionId);\n  }\n\n  sendMessage(payload: {\n    message?: string;\n    session_id?: string;\n    user_id?: string;\n    audioFile?: File;\n    files?: File[];\n    file_ids?: string[];\n  }): Observable {\n    // SSE enabled\n    return this.sendMessageUC.execute(this.agentId(), payload as any);\n  }\n\n  cancel(): void {\n    // Cancel SSE stream\n    this.sendMessageUC.cancel();\n  }\n\n  async uploadFiles(\n    files: File[],\n    opts?: { sessionId?: string; subfolder?: string },\n  ): Promise {\n    const result: UploadedFileMeta[] = [];\n    const sessionId = opts?.sessionId;\n    const subfolder = opts?.subfolder ?? 'chat';\n    for (const f of files) {\n      const meta = await this.uploadFileUC.execute(f, subfolder, sessionId);\n      result.push(meta);\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/chat-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            displayedContent\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extra_data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            isComplete\n                                        \n                                \n                                \n                                        \n                                            isStreaming\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response_audio\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            videos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayedContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayedContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extra_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra_data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStreaming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isStreaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_audio:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videos:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type EventType =\n  | 'UserMessage'\n  | 'RunResponse'\n  | 'RunStarted'\n  | 'RunCompleted'\n  | 'RunError'\n  | 'UpdatingMemory'\n  | 'ToolCallStarted'\n  | 'Error'\n  | 'Cancelled';\n\nexport type ContentType = 'text' | 'str';\n\nexport interface BaseAgentEvent {\n  content: string;\n  agent_id: string;\n  event: EventType;\n  run_id: string;\n  session_id: string;\n  created_at: number;\n  content_type: ContentType;\n}\n\nexport interface ChatMessage {\n  id: string;\n  content: string;\n  displayedContent: string;\n  isComplete: boolean;\n  isStreaming: boolean;\n  event: EventType;\n  timestamp: number;\n  // Enriched fields from streaming\n  extra_data?: {\n    reasoning_steps?: Array;\n    references?: Array;\n      time?: number;\n    }>;\n  };\n  images?: Array;\n  videos?: Array;\n  audio?: Array;\n  response_audio?: {\n    id?: string;\n    content?: string;\n    transcript?: string;\n    channels?: number;\n    sample_rate?: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatStreamPort.html":{"url":"interfaces/ChatStreamPort.html","title":"interface - ChatStreamPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatStreamPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/chat-stream.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        cancel\n                                    \n                                \n                                \n                                    \n                                        streamFromAgent\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/chat-stream.port.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamFromAgent\n                        \n                    \n                \n            \n            \n                \nstreamFromAgent(agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/chat-stream.port.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { StreamResponseModel } from '@core/models';\n\nexport interface ChatStreamPort {\n  streamFromAgent(\n    agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n      file_ids?: string[];\n    },\n  ): Observable;\n  cancel(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatUtilsService.html":{"url":"injectables/ChatUtilsService.html","title":"injectable - ChatUtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatUtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/chat-utils.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanForMarkdown\n                            \n                            \n                                createBotMessage\n                            \n                            \n                                createSystemMessage\n                            \n                            \n                                createUserMessage\n                            \n                            \n                                formatTimestamp\n                            \n                            \n                                generateId\n                            \n                            \n                                getEventLabel\n                            \n                            \n                                isBotMessage\n                            \n                            \n                                isErrorMessage\n                            \n                            \n                                isSystemMessage\n                            \n                            \n                                isUserMessage\n                            \n                            \n                                trackByMessageId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanForMarkdown\n                        \n                    \n                \n            \n            \n                \ncleanForMarkdown(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Pre-sanitize LLM text before passing it to Markdown/innerHTML.\n\nRemoves dangerous tags (script, style, iframe, object, embed, svg, math, link, meta, base, audio, video, source, track)\nStrips inline event handlers (on*)\nNeutralizes javascript: and data: urls in href/src\nThis is a defensive cleanup to reduce Angular sanitizer warnings; Angular's built-in sanitizer still runs.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBotMessage\n                        \n                    \n                \n            \n            \n                \ncreateBotMessage(runId: string, timestamp?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Crea un mensaje de bot\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                runId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSystemMessage\n                        \n                    \n                \n            \n            \n                \ncreateSystemMessage(content: string, event: EventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Crea un mensaje del sistema\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserMessage\n                        \n                    \n                \n            \n            \n                \ncreateUserMessage(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Crea un mensaje de usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimestamp\n                        \n                    \n                \n            \n            \n                \nformatTimestamp(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Formatea timestamp a hora legible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:11\n                        \n                    \n\n\n            \n                \n                        Genera un ID único para mensajes\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventLabel\n                        \n                    \n                \n            \n            \n                \ngetEventLabel(event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Obtiene la etiqueta visual para un tipo de evento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBotMessage\n                        \n                    \n                \n            \n            \n                \nisBotMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Determina si un mensaje es del bot\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isErrorMessage\n                        \n                    \n                \n            \n            \n                \nisErrorMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Determina si un mensaje es de error\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSystemMessage\n                        \n                    \n                \n            \n            \n                \nisSystemMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Determina si un mensaje es del sistema\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserMessage\n                        \n                    \n                \n            \n            \n                \nisUserMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Determina si un mensaje es del usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByMessageId\n                        \n                    \n                \n            \n            \n                \ntrackByMessageId(index: number, message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/chat-utils.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Función para trackBy en ngFor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport type { ChatMessage, EventType } from '@core/models/chat-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatUtilsService {\n  /**\n   * Genera un ID único para mensajes\n   */\n  generateId(): string {\n    return (\n      Math.random().toString(36).substring(2, 15) +\n      Math.random().toString(36).substring(2, 15)\n    );\n  }\n\n  /**\n   * Formatea timestamp a hora legible\n   */\n  formatTimestamp(timestamp: number): string {\n    const date =\n      timestamp > 1000000000000\n        ? new Date(timestamp)\n        : new Date(timestamp * 1000);\n\n    return date.toLocaleTimeString('es-ES', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }\n\n  /**\n   * Obtiene la etiqueta visual para un tipo de evento\n   */\n  getEventLabel(event: string): string {\n    const labels: { [key: string]: string } = {\n      UserMessage: '👤 Tú',\n      RunResponse: '🤖 Asistente',\n      RunCompleted: '✅ Completado',\n      RunStarted: '🚀 Iniciado',\n      UpdatingMemory: '🧠 Memoria',\n      ToolCallStarted: '🔧 Herramienta',\n      Error: '❌ Error',\n      Cancelled: '🚫 Cancelado',\n    };\n    return labels[event] || `📋 ${event}`;\n  }\n\n  /**\n   * Determina si un mensaje es del usuario\n   */\n  isUserMessage(message: ChatMessage): boolean {\n    return message.event === 'UserMessage';\n  }\n\n  /**\n   * Determina si un mensaje es del sistema\n   */\n  isSystemMessage(message: ChatMessage): boolean {\n    return [\n      'UpdatingMemory',\n      'ToolCallStarted',\n      'RunStarted',\n      'Cancelled',\n    ].includes(message.event);\n  }\n\n  /**\n   * Determina si un mensaje es del bot\n   */\n  isBotMessage(message: ChatMessage): boolean {\n    return ['RunResponse', 'RunCompleted'].includes(message.event);\n  }\n\n  /**\n   * Determina si un mensaje es de error\n   */\n  isErrorMessage(message: ChatMessage): boolean {\n    return message.event === 'Error';\n  }\n\n  /**\n   * Crea un mensaje de usuario\n   */\n  createUserMessage(content: string): ChatMessage {\n    return {\n      id: this.generateId(),\n      content,\n      displayedContent: content,\n      isComplete: true,\n      isStreaming: false,\n      event: 'UserMessage' as EventType,\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Crea un mensaje del sistema\n   */\n  createSystemMessage(content: string, event: EventType): ChatMessage {\n    return {\n      id: this.generateId(),\n      content,\n      displayedContent: content,\n      isComplete: true,\n      isStreaming: false,\n      event,\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Crea un mensaje de bot\n   */\n  createBotMessage(runId: string, timestamp?: number): ChatMessage {\n    return {\n      id: runId || this.generateId(),\n      content: '',\n      displayedContent: '',\n      isComplete: false,\n      isStreaming: true,\n      event: 'RunResponse' as EventType,\n      timestamp: timestamp || Date.now(),\n    };\n  }\n\n  /**\n   * Función para trackBy en ngFor\n   */\n  trackByMessageId(index: number, message: ChatMessage): string {\n    return message.id;\n  }\n\n  /**\n   * Pre-sanitize LLM text before passing it to Markdown/innerHTML.\n   * - Removes dangerous tags (script, style, iframe, object, embed, svg, math, link, meta, base, audio, video, source, track)\n   * - Strips inline event handlers (on*)\n   * - Neutralizes javascript: and data: urls in href/src\n   * This is a defensive cleanup to reduce Angular sanitizer warnings; Angular's built-in sanitizer still runs.\n   */\n  cleanForMarkdown(input: string): string {\n    if (!input) return '';\n    let s = input;\n    // Remove whole blocks of dangerous elements\n    const blockTags = /(script|style|iframe|object|embed|svg|math|audio|video|source|track|link|meta|base)/gi;\n    s = s.replace(new RegExp(`]*>[\\s\\S]*?`, 'gi'), '');\n    // Remove self-closing dangerous elements\n    s = s.replace(new RegExp(`]*\\/?>`, 'gi'), '');\n    // Remove inline event handlers (on*) attributes\n    s = s.replace(/\\son[a-zA-Z]+\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^\\s>]+)/g, '');\n    // Neutralize javascript: or data: in href/src\n    s = s.replace(/(href|src)\\s*=\\s*([\"'])(javascript:|data:)[^\"']*\\2/gi, '$1=\"#\"');\n    // Also neutralize without quotes\n    s = s.replace(/(href|src)\\s*=\\s*(javascript:|data:)[^\\s>]+/gi, '$1=\"#\"');\n    return s;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompaniesPort.html":{"url":"interfaces/CompaniesPort.html","title":"interface - CompaniesPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompaniesPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/companies.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByRuc\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByRuc\n                        \n                    \n                \n            \n            \n                \ngetByRuc(ruc: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/companies.port.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ruc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/companies.port.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CompanyItem {\n  tax_id: string;\n  name?: string;\n  sector?: string;\n}\n\nexport interface CompaniesPort {\n  // sort_by 'name' will be mapped to backend 'business_name' by the service\n  list(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sector?: string;\n    sort_by?: 'tax_id' | 'name' | 'sector';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  getByRuc(ruc: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getByRuc\n                            \n                            \n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByRuc\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByRuc(ruc: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/companies.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ruc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/companies.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/companies.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/companies.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport type { Paginated } from '@core/models/paginated';\n\nexport interface CompanyItem {\n  tax_id: string;\n  name?: string;\n  sector?: string;\n  // ...other fields as available\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CompaniesService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sector?: string;\n    sort_by?: 'tax_id' | 'name' | 'sector';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/companies/`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.search != null && src.search !== '') qp.search = src.search;\n    if (src.sector != null && src.sector !== '') qp.sector = src.sector;\n    if (src.sort_by != null)\n      qp.sort_by = src.sort_by === 'name' ? 'business_name' : src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    // Support both paginated (info/results) and plain array responses\n    const mapItem = (raw: any): CompanyItem => ({\n      tax_id: raw?.tax_id ?? raw?.ruc ?? raw?.taxId ?? '',\n      name: raw?.name ?? raw?.business_name ?? raw?.businessName ?? undefined,\n      sector: raw?.sector ?? raw?.industry ?? undefined,\n    });\n    if (Array.isArray(data)) {\n      return {\n        items: data.map(mapItem),\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data?.results ?? []).map(mapItem),\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: data?.results?.length ?? params?.limit ?? 10,\n      total: data?.info?.count ?? data?.results?.length ?? 0,\n    } as Paginated;\n  }\n\n  async getByRuc(ruc: string): Promise {\n    const url = `${this.base}/companies/${ruc}`;\n    const raw = await firstValueFrom(this.http.get(url));\n    return {\n      tax_id: raw?.tax_id ?? raw?.ruc ?? raw?.taxId ?? ruc,\n      name: raw?.name ?? raw?.business_name ?? raw?.businessName ?? undefined,\n      sector: raw?.sector ?? raw?.industry ?? undefined,\n    } as CompanyItem;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyDashboardSummary.html":{"url":"interfaces/CompanyDashboardSummary.html","title":"interface - CompanyDashboardSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompanyDashboardSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/session-analysis.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            financials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenarios\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        financials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        financials:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarios\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenarios:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyDashboardSummary {\n  company?: any;\n  score?: {\n    score?: number;\n    risk_class?: string;\n    recommended_credit_limit?: number;\n  } | null;\n  contributions?: any;\n  scenarios?: any[];\n  financials?: any[];\n}\n\nexport interface CompanyInsights {\n  narrative?: string;\n  risk_summary?: string;\n  reputation?: string;\n  credit_recommendation?: string;\n  key_factors?: string[];\n  warnings?: string[];\n  suggested_actions?: string[];\n  opportunity_zones?: string[];\n  early_alerts?: string[];\n  data_quality_flags?: string[];\n}\n\nexport interface SessionCompanyItem {\n  tax_id: string;\n  dashboard?: CompanyDashboardSummary | Record;\n  insights?: CompanyInsights | null;\n  error?: string;\n}\n\nexport interface AggregateInsights {\n  overview?: string;\n  ranking?: Array;\n  common_opportunities?: string[];\n  common_risks?: string[];\n  diversification_comment?: string;\n  action_recommendations?: string[];\n}\n\nexport interface SessionCompaniesAnalysis {\n  session_id: string;\n  company_count: number;\n  companies: SessionCompanyItem[];\n  aggregate_insights?: AggregateInsights | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyInsights.html":{"url":"interfaces/CompanyInsights.html","title":"interface - CompanyInsights","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompanyInsights\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/session-analysis.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            credit_recommendation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data_quality_flags\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            early_alerts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            key_factors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            narrative\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opportunity_zones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reputation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            risk_summary\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            suggested_actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            warnings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credit_recommendation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credit_recommendation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data_quality_flags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data_quality_flags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        early_alerts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        early_alerts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key_factors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_factors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        narrative\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        narrative:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opportunity_zones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opportunity_zones:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reputation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reputation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        risk_summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        risk_summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suggested_actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suggested_actions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        warnings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        warnings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyDashboardSummary {\n  company?: any;\n  score?: {\n    score?: number;\n    risk_class?: string;\n    recommended_credit_limit?: number;\n  } | null;\n  contributions?: any;\n  scenarios?: any[];\n  financials?: any[];\n}\n\nexport interface CompanyInsights {\n  narrative?: string;\n  risk_summary?: string;\n  reputation?: string;\n  credit_recommendation?: string;\n  key_factors?: string[];\n  warnings?: string[];\n  suggested_actions?: string[];\n  opportunity_zones?: string[];\n  early_alerts?: string[];\n  data_quality_flags?: string[];\n}\n\nexport interface SessionCompanyItem {\n  tax_id: string;\n  dashboard?: CompanyDashboardSummary | Record;\n  insights?: CompanyInsights | null;\n  error?: string;\n}\n\nexport interface AggregateInsights {\n  overview?: string;\n  ranking?: Array;\n  common_opportunities?: string[];\n  common_risks?: string[];\n  diversification_comment?: string;\n  action_recommendations?: string[];\n}\n\nexport interface SessionCompaniesAnalysis {\n  session_id: string;\n  company_count: number;\n  companies: SessionCompanyItem[];\n  aggregate_insights?: AggregateInsights | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyItem.html":{"url":"interfaces/CompanyItem.html","title":"interface - CompanyItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompanyItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/companies.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sector\n                                        \n                                \n                                \n                                        \n                                            tax_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyItem {\n  tax_id: string;\n  name?: string;\n  sector?: string;\n}\n\nexport interface CompaniesPort {\n  // sort_by 'name' will be mapped to backend 'business_name' by the service\n  list(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sector?: string;\n    sort_by?: 'tax_id' | 'name' | 'sector';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  getByRuc(ruc: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyItem-1.html":{"url":"interfaces/CompanyItem-1.html","title":"interface - CompanyItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompanyItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/companies.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sector\n                                        \n                                \n                                \n                                        \n                                            tax_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport type { Paginated } from '@core/models/paginated';\n\nexport interface CompanyItem {\n  tax_id: string;\n  name?: string;\n  sector?: string;\n  // ...other fields as available\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CompaniesService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sector?: string;\n    sort_by?: 'tax_id' | 'name' | 'sector';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/companies/`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.search != null && src.search !== '') qp.search = src.search;\n    if (src.sector != null && src.sector !== '') qp.sector = src.sector;\n    if (src.sort_by != null)\n      qp.sort_by = src.sort_by === 'name' ? 'business_name' : src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    // Support both paginated (info/results) and plain array responses\n    const mapItem = (raw: any): CompanyItem => ({\n      tax_id: raw?.tax_id ?? raw?.ruc ?? raw?.taxId ?? '',\n      name: raw?.name ?? raw?.business_name ?? raw?.businessName ?? undefined,\n      sector: raw?.sector ?? raw?.industry ?? undefined,\n    });\n    if (Array.isArray(data)) {\n      return {\n        items: data.map(mapItem),\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data?.results ?? []).map(mapItem),\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: data?.results?.length ?? params?.limit ?? 10,\n      total: data?.info?.count ?? data?.results?.length ?? 0,\n    } as Paginated;\n  }\n\n  async getByRuc(ruc: string): Promise {\n    const url = `${this.base}/companies/${ruc}`;\n    const raw = await firstValueFrom(this.http.get(url));\n    return {\n      tax_id: raw?.tax_id ?? raw?.ruc ?? raw?.taxId ?? ruc,\n      name: raw?.name ?? raw?.business_name ?? raw?.businessName ?? undefined,\n      sector: raw?.sector ?? raw?.industry ?? undefined,\n    } as CompanyItem;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionStatusService.html":{"url":"injectables/ConnectionStatusService.html","title":"injectable - ConnectionStatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionStatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/connection-status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectionStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getStatusClass\n                            \n                            \n                                getStatusText\n                            \n                            \n                                setStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    status$\n                                \n                                \n                                    currentStatus\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/connection-status.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Limpia el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusClass\n                        \n                    \n                \n            \n            \n                \ngetStatusClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/connection-status.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Obtiene las clases CSS para el indicador visual\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusText\n                        \n                    \n                \n            \n            \n                \ngetStatusText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/connection-status.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Obtiene el texto descriptivo del estado\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatus\n                        \n                    \n                \n            \n            \n                \nsetStatus(status: ConnectionStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/connection-status.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de conexión\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            ConnectionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectionStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('idle')\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/connection-status.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        status$\n                    \n                \n\n                \n                    \n                        getstatus$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/infrastructure/services/connection-status.service.ts:15\n                                \n                            \n                    \n                        \n                                Observable del estado de conexión\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentStatus\n                    \n                \n\n                \n                    \n                        getcurrentStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/infrastructure/services/connection-status.service.ts:22\n                                \n                            \n                    \n                        \n                                Valor actual del estado\n\n\n                                \n                                    Returns :         ConnectionStatus\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport type ConnectionStatus = 'idle' | 'connecting' | 'streaming' | 'error';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionStatusService {\n  private connectionStatus$ = new BehaviorSubject('idle');\n\n  /**\n   * Observable del estado de conexión\n   */\n  get status$() {\n    return this.connectionStatus$.asObservable();\n  }\n\n  /**\n   * Valor actual del estado\n   */\n  get currentStatus(): ConnectionStatus {\n    return this.connectionStatus$.value;\n  }\n\n  /**\n   * Actualiza el estado de conexión\n   */\n  setStatus(status: ConnectionStatus): void {\n    this.connectionStatus$.next(status);\n  }\n\n  /**\n   * Obtiene el texto descriptivo del estado\n   */\n  getStatusText(): string {\n    const statusMap = {\n      idle: 'Listo',\n      connecting: 'Conectando...',\n      streaming: 'Recibiendo...',\n      error: 'Error',\n    };\n    return statusMap[this.currentStatus] || 'Desconocido';\n  }\n\n  /**\n   * Obtiene las clases CSS para el indicador visual\n   */\n  getStatusClass(): string {\n    const statusClasses = {\n      idle: 'bg-success animate-pulse',\n      connecting: 'bg-warning animate-ping',\n      streaming: 'bg-info animate-pulse',\n      error: 'bg-error animate-bounce',\n    };\n    return statusClasses[this.currentStatus] || 'bg-secondary';\n  }\n\n  /**\n   * Limpia el servicio\n   */\n  destroy(): void {\n    this.connectionStatus$.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserPayload.html":{"url":"interfaces/CreateUserPayload.html","title":"interface - CreateUserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-users.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"user\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"user\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\nexport interface AdminUsersPort {\n  list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise>;\n  get(userId: string): Promise;\n  create(payload: CreateUserPayload): Promise;\n  update(\n    userId: string,\n    payload: Partial,\n  ): Promise;\n  delete(userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserPayload-1.html":{"url":"interfaces/CreateUserPayload-1.html","title":"interface - CreateUserPayload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"user\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"user\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminUsersService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/users/`;\n    // build params without undefined/null/empty values to avoid sending 'undefined'\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.email != null && src.email !== '') qp.email = src.email;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(\n      this.http.get>(url, { params: qp }),\n    );\n    return {\n      items: data?.results ?? [],\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: params?.limit ?? 10,\n      total: data?.info?.count ?? 0,\n    };\n  }\n\n  async get(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async create(payload: CreateUserPayload): Promise {\n    // Backend's register endpoint creates users\n    const url = `${this.base}/auth/register`;\n    return firstValueFrom(this.http.post(url, payload));\n  }\n\n  async update(\n    userId: string,\n    payload: Partial,\n  ): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.put(url, payload));\n  }\n\n  async delete(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    await firstValueFrom(this.http.delete(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin/create-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(payload: CreateUserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin/create-user.usecase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_USERS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin/create-user.usecase.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type {\n  AdminUserItem,\n  AdminUsersPort,\n  CreateUserPayload,\n} from '@core/ports';\nimport { ADMIN_USERS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class CreateUserUseCase {\n  private readonly port = inject(ADMIN_USERS_PORT);\n  execute(payload: CreateUserPayload): Promise {\n    return this.port.create(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomPreloadStrategy.html":{"url":"injectables/CustomPreloadStrategy.html","title":"injectable - CustomPreloadStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomPreloadStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/strategies/custom-preload.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                perf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload(route: Route, load: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/strategies/custom-preload.strategy.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        Route\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                load\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        perf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PerformanceService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/strategies/custom-preload.strategy.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Route, PreloadingStrategy } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { PerformanceService } from '../services/performance.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CustomPreloadStrategy implements PreloadingStrategy {\n  private readonly perf = inject(PerformanceService);\n\n  // Simple heuristic: if body has perf-lite, avoid preloading admin/* and other heavy routes\n  preload(route: Route, load: () => Observable): Observable {\n    try {\n      const isLite =\n        typeof document !== 'undefined' &&\n        document.body.classList.contains('perf-lite');\n      const path = route.path ?? '';\n      // Allow opt-in override with data: { preload: true|false }\n      const flag = route.data?.['preload'];\n      if (flag === true) return load();\n      if (flag === false) return of(null);\n\n      if (isLite) {\n        // In lite mode: only preload critical simple routes; skip admin and others\n        if (path === 'home' || path === 'chat' || path?.startsWith('chat/')) {\n          return load();\n        }\n        return of(null);\n      }\n      // Desktop/full mode: preload everything\n      return load();\n    } catch {\n      return load();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSessionUseCase.html":{"url":"classes/DeleteSessionUseCase.html","title":"class - DeleteSessionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSessionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/delete-session.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessions: SessionsPort)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/use-cases/delete-session.usecase.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsPort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/delete-session.usecase.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { SessionsPort } from '@core/ports';\n\nexport class DeleteSessionUseCase {\n  constructor(private readonly sessions: SessionsPort) {}\n  execute(agentId: string, sessionId: string): Observable {\n    return this.sessions.deleteSession(agentId, sessionId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserUseCase.html":{"url":"injectables/DeleteUserUseCase.html","title":"injectable - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin/delete-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin/delete-user.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_USERS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin/delete-user.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { AdminUsersPort } from '@core/ports';\nimport { ADMIN_USERS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class DeleteUserUseCase {\n  private readonly port = inject(ADMIN_USERS_PORT);\n  execute(userId: string): Promise {\n    return this.port.delete(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesFacade.html":{"url":"injectables/FilesFacade.html","title":"injectable - FilesFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/files/files.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                limit\n                            \n                            \n                                    Private\n                                    Readonly\n                                listFilesUC\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                total\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Private\n                                    Readonly\n                                uploadFileUC\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                nextPage\n                            \n                            \n                                    Async\n                                prevPage\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/files/files.facade.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/files/files.facade.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/files/files.facade.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        prevPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prevPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/files/files.facade.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/files/files.facade.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listFilesUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ListFilesUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        uploadFileUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadFileUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/files/files.facade.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, signal } from '@angular/core';\nimport type { UploadedFileMeta } from '@core/ports';\nimport { ListFilesUseCase, UploadFileUseCase } from '@core/use-cases';\n\nexport type FileType = 'image' | 'pdf' | 'document' | '';\n\n@Injectable({ providedIn: 'root' })\nexport class FilesFacade {\n  private readonly listFilesUC = inject(ListFilesUseCase);\n  private readonly uploadFileUC = inject(UploadFileUseCase);\n\n  readonly items = signal([]);\n  readonly loading = signal(false);\n  readonly error = signal(null);\n  readonly type = signal('');\n  readonly page = signal(1);\n  readonly limit = signal(20);\n  readonly total = signal(0);\n\n  async load() {\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.listFilesUC.execute({\n        type_file: (this.type() || undefined) as any,\n        page: this.page(),\n        limit: this.limit(),\n      });\n      this.items.set(res.items || []);\n      this.total.set(res.total || 0);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error cargando archivos');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }) {\n    return this.listFilesUC.execute(params);\n  }\n\n  async upload(input: HTMLInputElement) {\n    if (!input.files?.length) return;\n    this.loading.set(true);\n    try {\n      for (const file of Array.from(input.files)) {\n        await this.uploadFileUC.execute(file);\n      }\n      await this.load();\n      input.value = '';\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error subiendo archivo');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async nextPage() {\n    if (this.page() * this.limit() >= this.total()) {\n      return;\n    }\n    this.page.update((p) => p + 1);\n    await this.load();\n  }\n  async prevPage() {\n    if (this.page()  p - 1);\n    await this.load();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilesPort.html":{"url":"interfaces/FilesPort.html","title":"interface - FilesPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilesPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/files.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getFile\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        listBySession\n                                    \n                                \n                                \n                                    \n                                        upload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/files.port.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/files.port.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listBySession\n                        \n                    \n                \n            \n            \n                \nlistBySession(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/files.port.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(file: File, subfolder?: string, sessionId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/files.port.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subfolder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null;\n  extracted_available?: boolean;\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n}\n\nexport interface FilesPort {\n  upload(\n    file: File,\n    subfolder?: string,\n    sessionId?: string,\n  ): Promise;\n  getFile(fileId: string): Promise;\n  list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise>;\n  listBySession(sessionId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                listBySession\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/files.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/files.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listBySession\n                        \n                    \n                \n            \n            \n                \n                        \n                    listBySession(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/files.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(file: File, subfolder: string, sessionId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/files.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                subfolder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/files.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/files.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport type { Paginated } from '@core/models/paginated';\nimport { mapToPaginated } from '@core/models/pagination-api';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null; // backend may return this field name\n  extracted_available?: boolean; // present when metadata extraction exists\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\n// Legacy shape kept for compatibility in mapping helper\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n  offset?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FilesService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async upload(\n    file: File,\n    subfolder = '',\n    sessionId?: string,\n  ): Promise {\n    const form = new FormData();\n    form.append('upload', file);\n    form.append('subfolder', subfolder);\n    const url = `${this.base}/files/`;\n    const params: any = {};\n    if (sessionId) {\n      params.session_id = sessionId;\n      // Also include in form for backends expecting it in body\n      form.append('session_id', sessionId);\n    }\n    return firstValueFrom(\n      this.http.post(url, form, { params }),\n    );\n  }\n\n  async getFile(fileId: string): Promise {\n    // Fetch metadata instead of binary stream\n    const url = `${this.base}/files/${fileId}/meta`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise> {\n    const url = `${this.base}/files/`;\n    // Build clean query params (avoid sending undefined) and map offset->page for backend\n    const qp: any = {};\n    if (params?.type_file) qp.type_file = params.type_file;\n    if (params?.subfolder) qp.subfolder = params.subfolder;\n    if (typeof params?.limit === 'number') qp.limit = params.limit;\n    const page =\n      params?.page ??\n      (params?.offset != null && params?.limit\n        ? Math.floor(params.offset / params.limit) + 1\n        : 1);\n    qp.page = page;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    // Normalize to Paginated using helper\n    const pageParams = { page, limit: params?.limit };\n    return mapToPaginated(data, pageParams);\n  }\n\n  async listBySession(sessionId: string): Promise {\n    const url = `${this.base}/files/session/${encodeURIComponent(sessionId)}`;\n    return firstValueFrom(this.http.get(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenPage.html":{"url":"components/ForbiddenPage.html","title":"component - ForbiddenPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/forbidden/forbidden.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n            \n                template\n                    Acceso denegado\n    No tienes permisos para ver esta página.\n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-forbidden',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    Acceso denegado\n    No tienes permisos para ver esta página.\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForbiddenPage {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Acceso denegado    No tienes permisos para ver esta página.  '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetActiveRiskWeightsUseCase.html":{"url":"injectables/GetActiveRiskWeightsUseCase.html","title":"injectable - GetActiveRiskWeightsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetActiveRiskWeightsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/risk-weights/get-active-risk-weights.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/risk-weights/get-active-risk-weights.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RISK_WEIGHTS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/risk-weights/get-active-risk-weights.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { RiskWeightsPort, RiskWeightsConfig } from '@core/ports';\nimport { RISK_WEIGHTS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class GetActiveRiskWeightsUseCase {\n  private readonly port = inject(RISK_WEIGHTS_PORT);\n  execute(): Promise {\n    return this.port.getActive();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAppInfoUseCase.html":{"url":"injectables/GetAppInfoUseCase.html","title":"injectable - GetAppInfoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAppInfoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/get-app-info.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/get-app-info.usecase.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APP_INFO_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/get-app-info.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { AppInfo } from '../models/app-info';\nimport type { AppInfoPort } from '../ports/app-info.port';\nimport { APP_INFO_PORT } from '../tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class GetAppInfoUseCase {\n  private appInfo = inject(APP_INFO_PORT);\n\n  execute(): Promise {\n    return this.appInfo.getAppInfo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetCompanyByRucUseCase.html":{"url":"injectables/GetCompanyByRucUseCase.html","title":"injectable - GetCompanyByRucUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetCompanyByRucUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/companies/get-company-by-ruc.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(ruc: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/companies/get-company-by-ruc.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ruc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(COMPANIES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/companies/get-company-by-ruc.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { CompaniesPort, CompanyItem } from '@core/ports';\nimport { COMPANIES_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class GetCompanyByRucUseCase {\n  private readonly port = inject(COMPANIES_PORT);\n  execute(ruc: string): Promise {\n    return this.port.getByRuc(ruc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetKpisUseCase.html":{"url":"injectables/GetKpisUseCase.html","title":"injectable - GetKpisUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetKpisUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/get-kpis.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kpis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/get-kpis.usecase.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kpis\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(KPIS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/get-kpis.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { Kpis } from '../models/kpi';\nimport type { KpisPort } from '../ports/kpis.port';\nimport { KPIS_PORT } from '../tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class GetKpisUseCase {\n  private kpis = inject(KPIS_PORT);\n\n  execute(): Promise {\n    return this.kpis.getKpis();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProfileUseCase.html":{"url":"injectables/GetProfileUseCase.html","title":"injectable - GetProfileUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetProfileUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/auth/get-profile.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/auth/get-profile.usecase.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AUTH_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/auth/get-profile.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { UserProfile } from '../../models/auth';\nimport type { AuthPort } from '../../ports/auth.port';\nimport { AUTH_PORT } from '../../tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class GetProfileUseCase {\n  private auth = inject(AUTH_PORT);\n\n  async execute(token: string): Promise {\n    return this.auth.getProfile(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSessionUseCase.html":{"url":"classes/GetSessionUseCase.html","title":"class - GetSessionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSessionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/get-session.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessions: SessionsPort)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/use-cases/get-session.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsPort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/get-session.usecase.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { ChatEntry } from '@core/models';\nimport type { SessionsPort } from '@core/ports';\n\nexport class GetSessionUseCase {\n  constructor(private readonly sessions: SessionsPort) {}\n  execute(\n    agentId: string,\n    sessionId: string,\n  ): Observable {\n    return this.sessions.getSession(agentId, sessionId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuestGuardService.html":{"url":"injectables/GuestGuardService.html","title":"injectable - GuestGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GuestGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/guards/guest.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/guards/guest.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/guest.guard.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/guest.guard.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class GuestGuardService {\n  private token = inject(TokenStorageService);\n  private router = inject(Router);\n  canActivate(): boolean {\n    if (this.token.isAuthenticated()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}\n\nexport const GuestGuard: CanActivateFn = () => {\n  return inject(GuestGuardService).canActivate();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            TranslateModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeRepos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocClick\n                            \n                            \n                                    \n                                onEsc\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleRepos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpenChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keydown.escape\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backend_repository\n                                \n                                \n                                    frontend_repository\n                                \n                                \n                                    youtube_video\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        info\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/header/header.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/header/header.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/header/header.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isOpenChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/header/header.component.ts:28\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \ndocument:click()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.escape\n                        \n                    \n                \n            \n            \n                \ndocument:keydown.escape()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        closeRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeRepos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onEsc\n                        \n                    \n                \n            \n            \n                \n                        \n                    onEsc()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.escape')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepos\n                        \n                    \n                \n            \n            \n                \ntoggleRepos(ev?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/header/header.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BackgroundService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backend_repository\n                    \n                \n\n                \n                    \n                        getbackend_repository()\n                    \n                \n                            \n                                \n                                    Defined in src/app/presentation/components/header/header.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        frontend_repository\n                    \n                \n\n                \n                    \n                        getfrontend_repository()\n                    \n                \n                            \n                                \n                                    Defined in src/app/presentation/components/header/header.component.ts:41\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        youtube_video\n                    \n                \n\n                \n                    \n                        getyoutube_video()\n                    \n                \n                            \n                                \n                                    Defined in src/app/presentation/components/header/header.component.ts:45\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  inject,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterLink } from '@angular/router';\nimport { BackgroundService } from '@infrastructure/services/background.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, TranslateModule, RouterLink],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent {\n  // Inputs/Outputs for compatibility with two-way binding\n\n  @Input() info: any;\n  @Input() isOpen: boolean = false;\n  @Input() isAdmin: boolean = false;\n  @Output() isOpenChange: EventEmitter = new EventEmitter();\n\n  private readonly bg = inject(BackgroundService);\n\n  ngOnInit() {\n    // Initialize background service\n    this.bg.init();\n  }\n\n  get backend_repository() {\n    return 'https://github.com/SteveSant26/hackiaton-agent-ai-backend';\n  }\n\n  get frontend_repository() {\n    return 'https://github.com/SteveSant26/hackiaton-agent-ai-frontend';\n  }\n\n  get youtube_video() {\n    return 'https://www.youtube.com/watch?v=dQw4w9WgXcQ';\n  }\n\n  // si ya tienes lógica para el menú lateral o similar\n  toggleMenu() {\n    // tu lógica existente\n  }\n\n  // toggle correcto del dropdown usando input/output\n  toggleRepos(ev?: MouseEvent) {\n    ev?.stopPropagation();\n    this.isOpenChange.emit(!this.isOpen);\n  }\n\n  // util para cerrar\n  private closeRepos() {\n    if (this.isOpen) this.isOpenChange.emit(false);\n  }\n\n  // cierre por click-fuera\n  @HostListener('document:click')\n  onDocClick() {\n    this.closeRepos();\n  }\n\n  // cierre por Esc\n  @HostListener('document:keydown.escape')\n  onEsc() {\n    this.closeRepos();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        {{ info?.site_name || (\"SHELL.APP_TITLE\" | translate) }}\n      \n    \n\n    \n    \n      \n      \n        \n          \n          Info\n          \n            \n          \n        \n\n        \n        @if (isOpen) {\n          \n            \n              \n                \n                Backend\n              \n              \n                \n                Frontend\n              \n              \n                \n                YouTube Video\n              \n            \n          \n        }\n      \n\n      \n      @if (isAdmin) {\n        \n          \n          {{ \"COMMON.ADMIN\" | translate }}\n        \n      }\n      \n        \n        {{ \"COMMON.OPEN\" | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                /* Header styles with theme support */\nheader {\n  background: hsl(var(--card) / 0.8);\n  backdrop-filter: blur(12px);\n  -webkit-backdrop-filter: blur(12px);\n  border-bottom: 1px solid hsl(var(--border) / 0.6);\n}\n\n/* Neon edges support for header when enabled */\nbody.neon-edges header {\n  box-shadow:\n    0 0 0 1px hsl(var(--brand-primary) / 0.18),\n    0 0 12px hsl(var(--brand-primary-glow) / 0.16);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ info?.site_name || (\"SHELL.APP_TITLE\" | translate) }}                                                          Info                                                        @if (isOpen) {                                                                    Backend                                                            Frontend                                                            YouTube Video                                            }                  @if (isAdmin) {                            {{ \"COMMON.ADMIN\" | translate }}              }                      {{ \"COMMON.OPEN\" | translate }}            '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageData.html":{"url":"interfaces/ImageData.html","title":"interface - ImageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            revised_prompt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        revised_prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revised_prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kpis.html":{"url":"interfaces/Kpis.html","title":"interface - Kpis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kpis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/kpi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            approvalDelta\n                                        \n                                \n                                \n                                        \n                                            generatedAt\n                                        \n                                \n                                \n                                        \n                                            objectivityDelta\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            speedMultiplier\n                                        \n                                \n                                \n                                        \n                                            totalTimeMinutes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approvalDelta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approvalDelta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectivityDelta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectivityDelta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"api\" | \"mock\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"api\" | \"mock\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speedMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speedMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTimeMinutes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTimeMinutes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Kpis {\n  speedMultiplier: number; // e.g. 2.4 -> \"~2.4x\"\n  approvalDelta: number; // e.g. 0.18 -> +18%\n  objectivityDelta: number; // e.g. -0.35 -> -35%\n  totalTimeMinutes: number; // e.g. 75\n  generatedAt: string; // ISO timestamp\n  source: 'api' | 'mock';\n}\n\nexport interface KpisSummaryDisplay {\n  speedDisplay: string;\n  approvalDisplay: string;\n  objectivityDisplay: string;\n  timeDisplay: string;\n  source: 'api' | 'mock';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KpisApiService.html":{"url":"injectables/KpisApiService.html","title":"injectable - KpisApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KpisApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/kpis-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getKpis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/kpis-api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getKpis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getKpis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/kpis-api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/kpis-api.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport type { KpisPort } from '@core/ports';\nimport type { Kpis } from '@core/models';\n\n@Injectable({ providedIn: 'root' })\nexport class KpisApiService implements KpisPort {\n  private readonly base = environment.baseUrl;\n\n  constructor(private readonly http: HttpClient) {}\n\n  async getKpis(): Promise {\n    // Endpoint hipotético: /metrics/kpis\n    const url = `${this.base}/metrics/kpis`;\n    const data = await firstValueFrom(this.http.get>(url));\n    return { ...data, source: 'api' } as Kpis;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KpisMockService.html":{"url":"injectables/KpisMockService.html","title":"injectable - KpisMockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KpisMockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/kpis-mock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getKpis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getKpis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getKpis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/kpis-mock.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport type { KpisPort } from '@core/ports';\nimport type { Kpis } from '@core/models';\n\n@Injectable({ providedIn: 'root' })\nexport class KpisMockService implements KpisPort {\n  async getKpis(): Promise {\n    // Simula datos de demo\n    return {\n      speedMultiplier: 2.4,\n      approvalDelta: 0.18,\n      objectivityDelta: -0.35,\n      totalTimeMinutes: 6,\n      generatedAt: new Date().toISOString(),\n      source: 'mock',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KpisPort.html":{"url":"interfaces/KpisPort.html","title":"interface - KpisPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KpisPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/kpis.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getKpis\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getKpis\n                        \n                    \n                \n            \n            \n                \ngetKpis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/kpis.port.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Kpis } from '../models';\n\nexport interface KpisPort {\n  getKpis(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KpisResponseDTO.html":{"url":"interfaces/KpisResponseDTO.html","title":"interface - KpisResponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KpisResponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/kpis.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            approval_delta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            avg_time_minutes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            objectivity_delta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            speed_multiplier\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/kpis.service.ts:10\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approval_delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approval_delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avg_time_minutes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avg_time_minutes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectivity_delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectivity_delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed_multiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speed_multiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface KpisResponseDTO {\n  speed_multiplier?: number;\n  approval_delta?: number;\n  objectivity_delta?: number;\n  avg_time_minutes?: number;\n  [key: string]: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class KpisService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  private cache: KpisResponseDTO | null = null;\n  private loadingPromise: Promise | null = null;\n\n  async getKpis(): Promise {\n    if (this.cache) return this.cache;\n    if (this.loadingPromise) return this.loadingPromise;\n\n    const attempt = async (): Promise => {\n      const dedicatedUrl = `${this.base}/admin/stats/kpis`;\n      try {\n        const dedicated = await firstValueFrom(\n          this.http.get(dedicatedUrl),\n        );\n        this.cache = dedicated;\n        return dedicated;\n      } catch {\n        // ignore and fallback\n      }\n\n      const overviewUrl = `${this.base}/admin/stats/overview`;\n      try {\n        const overview: any = await firstValueFrom(\n          this.http.get(overviewUrl, { params: { days: 30 } }),\n        );\n        const kpis: KpisResponseDTO = {};\n        if (overview?.kpis && typeof overview.kpis === 'object') {\n          Object.assign(kpis, overview.kpis);\n        }\n  kpis.speed_multiplier ??= 2.4;\n  kpis.approval_delta ??= 0.18;\n  kpis.objectivity_delta ??= -0.35;\n  kpis.avg_time_minutes ??= 6;\n        this.cache = kpis;\n        return kpis;\n      } catch (e) {\n        // Fallback silencioso: devolvemos valores por defecto y registramos el error una sola vez\n        if (!this.cache) {\n          // eslint-disable-next-line no-console\n          console.error('[KpisService] Error obteniendo overview, usando defaults', e);\n        }\n        const defaults: KpisResponseDTO = {\n          speed_multiplier: 2.4,\n          approval_delta: 0.18,\n          objectivity_delta: -0.35,\n          avg_time_minutes: 6,\n        };\n        this.cache = defaults;\n        return defaults;\n      }\n    };\n\n    this.loadingPromise = attempt().finally(() => (this.loadingPromise = null));\n    return this.loadingPromise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KpisService.html":{"url":"injectables/KpisService.html","title":"injectable - KpisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KpisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/kpis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                            \n                                    Private\n                                loadingPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getKpis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getKpis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getKpis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/kpis.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/kpis.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KpisResponseDTO | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/kpis.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/kpis.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/kpis.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface KpisResponseDTO {\n  speed_multiplier?: number;\n  approval_delta?: number;\n  objectivity_delta?: number;\n  avg_time_minutes?: number;\n  [key: string]: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class KpisService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  private cache: KpisResponseDTO | null = null;\n  private loadingPromise: Promise | null = null;\n\n  async getKpis(): Promise {\n    if (this.cache) return this.cache;\n    if (this.loadingPromise) return this.loadingPromise;\n\n    const attempt = async (): Promise => {\n      const dedicatedUrl = `${this.base}/admin/stats/kpis`;\n      try {\n        const dedicated = await firstValueFrom(\n          this.http.get(dedicatedUrl),\n        );\n        this.cache = dedicated;\n        return dedicated;\n      } catch {\n        // ignore and fallback\n      }\n\n      const overviewUrl = `${this.base}/admin/stats/overview`;\n      try {\n        const overview: any = await firstValueFrom(\n          this.http.get(overviewUrl, { params: { days: 30 } }),\n        );\n        const kpis: KpisResponseDTO = {};\n        if (overview?.kpis && typeof overview.kpis === 'object') {\n          Object.assign(kpis, overview.kpis);\n        }\n  kpis.speed_multiplier ??= 2.4;\n  kpis.approval_delta ??= 0.18;\n  kpis.objectivity_delta ??= -0.35;\n  kpis.avg_time_minutes ??= 6;\n        this.cache = kpis;\n        return kpis;\n      } catch (e) {\n        // Fallback silencioso: devolvemos valores por defecto y registramos el error una sola vez\n        if (!this.cache) {\n          // eslint-disable-next-line no-console\n          console.error('[KpisService] Error obteniendo overview, usando defaults', e);\n        }\n        const defaults: KpisResponseDTO = {\n          speed_multiplier: 2.4,\n          approval_delta: 0.18,\n          objectivity_delta: -0.35,\n          avg_time_minutes: 6,\n        };\n        this.cache = defaults;\n        return defaults;\n      }\n    };\n\n    this.loadingPromise = attempt().finally(() => (this.loadingPromise = null));\n    return this.loadingPromise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KpisSummaryDisplay.html":{"url":"interfaces/KpisSummaryDisplay.html","title":"interface - KpisSummaryDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KpisSummaryDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/kpi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            approvalDisplay\n                                        \n                                \n                                \n                                        \n                                            objectivityDisplay\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            speedDisplay\n                                        \n                                \n                                \n                                        \n                                            timeDisplay\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approvalDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approvalDisplay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectivityDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectivityDisplay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"api\" | \"mock\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"api\" | \"mock\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speedDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speedDisplay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeDisplay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Kpis {\n  speedMultiplier: number; // e.g. 2.4 -> \"~2.4x\"\n  approvalDelta: number; // e.g. 0.18 -> +18%\n  objectivityDelta: number; // e.g. -0.35 -> -35%\n  totalTimeMinutes: number; // e.g. 75\n  generatedAt: string; // ISO timestamp\n  source: 'api' | 'mock';\n}\n\nexport interface KpisSummaryDisplay {\n  speedDisplay: string;\n  approvalDisplay: string;\n  objectivityDisplay: string;\n  timeDisplay: string;\n  source: 'api' | 'mock';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastLang\n                            \n                            \n                                    Private\n                                    Readonly\n                                supported\n                            \n                            \n                                    Private\n                                    Readonly\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                            \n                                init\n                            \n                            \n                                    Async\n                                initApp\n                            \n                            \n                                    Private\n                                isSupported\n                            \n                            \n                                    Private\n                                safeLocalStorageGet\n                            \n                            \n                                    Private\n                                safeLocalStorageSet\n                            \n                            \n                                    Private\n                                safeNavigatorLang\n                            \n                            \n                                switch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        current\n                        \n                    \n                \n            \n            \n                \ncurrent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    initApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSupported\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSupported(l: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                l\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"es\" | \"en\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeLocalStorageGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeLocalStorageGet(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeLocalStorageSet\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeLocalStorageSet(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeNavigatorLang\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeNavigatorLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switch\n                        \n                    \n                \n            \n            \n                \nswitch(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/language.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"es\" | \"en\"\n\n                    \n                \n                \n                    \n                        Default value : 'es'\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/language.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        supported\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['es', 'en'] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/language.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TranslateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/language.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { firstValueFrom } from 'rxjs';\n\nconst STORAGE_KEY = 'app_lang';\n\n@Injectable({ providedIn: 'root' })\nexport class LanguageService {\n  private readonly translate = inject(TranslateService);\n  private readonly supported = ['es', 'en'] as const;\n  private lastLang: 'es' | 'en' = 'es';\n\n  init() {\n    this.translate.addLangs(this.supported as unknown as string[]);\n    // Default handled by use(); setDefaultLang avoided (deprecated)\n    const saved = this.safeLocalStorageGet(STORAGE_KEY)?.toLowerCase() || '';\n    const browser = this.safeNavigatorLang();\n    let lang: 'es' | 'en' = 'es';\n    if (this.isSupported(saved)) lang = saved;\n    else if (this.isSupported(browser)) lang = browser;\n    this.lastLang = lang;\n    this.translate.use(lang);\n  }\n\n  // Promise-based init for APP_INITIALIZER; waits for translation file load\n  async initApp(): Promise {\n    this.translate.addLangs(this.supported as unknown as string[]);\n    // Default handled by use(); setDefaultLang avoided (deprecated)\n    const saved = this.safeLocalStorageGet(STORAGE_KEY)?.toLowerCase() || '';\n    const browser = this.safeNavigatorLang();\n    let lang: 'es' | 'en' = 'es';\n    if (this.isSupported(saved)) lang = saved;\n    else if (this.isSupported(browser)) lang = browser;\n    this.lastLang = lang;\n    await firstValueFrom(this.translate.use(lang));\n  }\n\n  current(): string {\n    return this.lastLang;\n  }\n\n  switch(lang: string) {\n    if (!this.isSupported(lang)) return;\n    this.lastLang = lang as any;\n    this.translate.use(this.lastLang);\n    this.safeLocalStorageSet(STORAGE_KEY, lang);\n  }\n\n  private isSupported(l: string): l is 'es' | 'en' {\n    return (this.supported as readonly string[]).includes(l);\n  }\n\n  private safeNavigatorLang(): string {\n    try {\n      if (typeof navigator !== 'undefined' && navigator?.language) {\n        return navigator.language.split('-')[0];\n      }\n    } catch {}\n    return 'es';\n  }\n\n  private safeLocalStorageGet(key: string): string | null {\n    try {\n      if (typeof localStorage !== 'undefined') return localStorage.getItem(key);\n    } catch {}\n    return null;\n  }\n\n  private safeLocalStorageSet(key: string, value: string) {\n    try {\n      if (typeof localStorage !== 'undefined') localStorage.setItem(key, value);\n    } catch {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LazyChartComponent.html":{"url":"components/LazyChartComponent.html","title":"component - LazyChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LazyChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/components/lazy-chart/lazy-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        LazyChartComponent\n\nLazily loads Chart.js only in the browser when the canvas becomes visible.\nProvides a lightweight fallback drawing so layout is stable while loading.\nHandles resize and intersection observers; SSR safe (no direct window refs in ctor).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lazy-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                :host{display:block;}\n     .chart-container{position:relative;width:100%;}\n     canvas{display:block;width:100%!important;height:100%!important;}\n            \n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Optional\n                                canvasRef\n                            \n                            \n                                    Private\n                                    Optional\n                                ChartCtor\n                            \n                            \n                                    Private\n                                chartInstance\n                            \n                            \n                                    Private\n                                    Optional\n                                io\n                            \n                            \n                                    Readonly\n                                isBrowser\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                            \n                                    Private\n                                    Optional\n                                ro\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawFallback\n                            \n                            \n                                    Private\n                                    Async\n                                ensureLib\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                observe\n                            \n                            \n                                    Private\n                                prepareCanvas\n                            \n                            \n                                    Private\n                                setupResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabelledby\n                            \n                            \n                                chartType\n                            \n                            \n                                data\n                            \n                            \n                                height\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabelledby\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        chartType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 220\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawFallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    drawFallback(canvas: HTMLCanvasElement, kind: \"line\" | \"doughnut\" | \"bar\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                kind\n                                            \n                                                        \"line\" | \"doughnut\" | \"bar\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        ensureLib\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureLib()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        observe\n                        \n                    \n                \n            \n            \n                \n                        \n                    observe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareCanvas(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupResize(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Optional\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ChartCtor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        io\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : isPlatformBrowser(this.platformId)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ro\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeObserver\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/lazy-chart/lazy-chart.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n  inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\n\n/**\n * LazyChartComponent\n * - Lazily loads Chart.js only in the browser when the canvas becomes visible.\n * - Provides a lightweight fallback drawing so layout is stable while loading.\n * - Handles resize and intersection observers; SSR safe (no direct window refs in ctor).\n */\n@Component({\n  selector: 'app-lazy-chart',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      \n    \n  `,\n  styles: [\n    `:host{display:block;}\n     .chart-container{position:relative;width:100%;}\n     canvas{display:block;width:100%!important;height:100%!important;}`,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LazyChartComponent implements AfterViewInit, OnDestroy {\n  private readonly platformId = inject(PLATFORM_ID);\n  readonly isBrowser = isPlatformBrowser(this.platformId);\n\n  @Input({ required: true }) chartType!: string; // 'line' | 'bar' | 'doughnut' etc.\n  @Input({ required: true }) data!: any;\n  @Input() options: any;\n  @Input() ariaLabelledby?: string;\n  @Input() height = 220;\n\n  @ViewChild('canvas') private canvasRef?: ElementRef;\n\n  private chartInstance: any;\n  private ChartCtor?: any;\n  private loading = false;\n  private ro?: ResizeObserver;\n  private io?: IntersectionObserver;\n\n  ngAfterViewInit(): void {\n    if (!this.isBrowser) return;\n    // Initial lightweight fallback\n    const canvas = this.canvasRef?.nativeElement;\n    if (canvas) this.drawFallback(canvas, this.chartType as any);\n    this.observe();\n  }\n\n  private observe() {\n    const canvas = this.canvasRef?.nativeElement;\n    if (!canvas) return;\n    if ('IntersectionObserver' in window) {\n      this.io = new IntersectionObserver((entries) => {\n        for (const e of entries) {\n          if (e.isIntersecting) {\n            this.io?.disconnect();\n            this.init();\n            break;\n          }\n        }\n      }, { threshold: 0.05 });\n      this.io.observe(canvas);\n    } else {\n      // Fallback: init soon\n      setTimeout(() => this.init(), 120);\n    }\n  }\n\n  private async init() {\n    if (!this.isBrowser || this.chartInstance) return;\n    await this.ensureLib();\n    const canvas = this.canvasRef?.nativeElement;\n    if (!canvas) return;\n    if (!this.ChartCtor) return; // Fallback already drawn\n    this.prepareCanvas(canvas);\n    try {\n      this.chartInstance = new this.ChartCtor(canvas, {\n        type: this.chartType,\n        data: this.data,\n        options: this.options || { responsive: true, maintainAspectRatio: false },\n      });\n    } catch {\n      this.drawFallback(canvas, this.chartType as any);\n    }\n    this.setupResize(canvas);\n  }\n\n  private async ensureLib() {\n    if (this.ChartCtor || this.loading) return;\n    this.loading = true;\n    try {\n      const mod: any = await import('chart.js');\n      const Chart = mod.Chart ?? mod.default;\n      const registerables = mod.registerables ?? [];\n      if (Chart && registerables.length) {\n        try { Chart.register(...registerables); } catch {}\n      }\n      this.ChartCtor = Chart;\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private setupResize(canvas: HTMLCanvasElement) {\n    try {\n      this.ro = new ResizeObserver(() => {\n        if (!this.chartInstance) return;\n        this.prepareCanvas(canvas);\n        this.chartInstance.resize();\n      });\n      this.ro.observe(canvas.parentElement || canvas);\n    } catch {}\n  }\n\n  private prepareCanvas(canvas: HTMLCanvasElement) {\n    const parent = canvas.parentElement as HTMLElement | null;\n    const rect = parent?.getBoundingClientRect();\n    const w = Math.max(1, Math.floor(rect?.width || canvas.clientWidth || 800));\n    const h = Math.max(1, Math.floor(rect?.height || canvas.clientHeight || this.height));\n    if (canvas.width !== w) canvas.width = w;\n    if (canvas.height !== h) canvas.height = h;\n  }\n\n  private drawFallback(canvas: HTMLCanvasElement, kind: 'line' | 'doughnut' | 'bar') {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const w = (canvas.width = canvas.width || 800);\n    const h = (canvas.height = canvas.height || this.height);\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = 'rgba(255,255,255,0.02)';\n    ctx.fillRect(0, 0, w, h);\n    ctx.strokeStyle = '#22d3ee';\n    ctx.lineWidth = 3;\n    if (kind === 'line') {\n      ctx.beginPath();\n      const pts = [0.1, 0.3, 0.6, 0.4, 0.8].map((x, i) => ({\n        x: 40 + (i * (w - 80)) / 4,\n        y: h - 40 - [30, 70, 100, 80, 120][i],\n      }));\n      ctx.moveTo(pts[0].x, pts[0].y);\n      for (let i = 1; i  {\n        const x = 40 + i * 2 * bw;\n        const bh = (h - 80) * v;\n        ctx.fillStyle = i === 0 ? '#94a3b8' : '#34d399';\n        ctx.fillRect(x, h - 40 - bh, bw, bh);\n      });\n    } else if (kind === 'doughnut') {\n      const cx = w / 2, cy = h / 2, r = Math.min(w, h) / 3;\n      const parts = [0.65, 0.2, 0.15];\n      const colors = ['#60a5fa', '#fbbf24', '#f87171'];\n      let start = -Math.PI / 2;\n      parts.forEach((p, i) => {\n        const end = start + p * 2 * Math.PI;\n        ctx.beginPath();\n        ctx.arc(cx, cy, r, start, end);\n        ctx.lineWidth = r * 0.5;\n        ctx.strokeStyle = colors[i];\n        ctx.stroke();\n        start = end;\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.chartInstance) {\n      try { this.chartInstance.destroy(); } catch {}\n      this.chartInstance = undefined;\n    }\n    if (this.ro) { try { this.ro.disconnect(); } catch {}; this.ro = undefined; }\n    if (this.io) { try { this.io.disconnect(); } catch {}; this.io = undefined; }\n  }\n}\n\n    \n\n\n    \n            :host{display:block;}\n     .chart-container{position:relative;width:100%;}\n     canvas{display:block;width:100%!important;height:100%!important;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LazyChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListCompaniesUseCase.html":{"url":"injectables/ListCompaniesUseCase.html","title":"injectable - ListCompaniesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListCompaniesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/companies/list-companies.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/companies/list-companies.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(COMPANIES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/companies/list-companies.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { CompaniesPort, CompanyItem } from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\nimport { COMPANIES_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class ListCompaniesUseCase {\n  private readonly port = inject(COMPANIES_PORT);\n  execute(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sector?: string;\n    sort_by?: 'tax_id' | 'name' | 'sector';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    return this.port.list(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListFilesResponse.html":{"url":"interfaces/ListFilesResponse.html","title":"interface - ListFilesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListFilesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/files.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     UploadedFileMeta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadedFileMeta[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null;\n  extracted_available?: boolean;\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n}\n\nexport interface FilesPort {\n  upload(\n    file: File,\n    subfolder?: string,\n    sessionId?: string,\n  ): Promise;\n  getFile(fileId: string): Promise;\n  list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise>;\n  listBySession(sessionId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListFilesResponse-1.html":{"url":"interfaces/ListFilesResponse-1.html","title":"interface - ListFilesResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListFilesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/files.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offset\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     UploadedFileMeta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadedFileMeta[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport type { Paginated } from '@core/models/paginated';\nimport { mapToPaginated } from '@core/models/pagination-api';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null; // backend may return this field name\n  extracted_available?: boolean; // present when metadata extraction exists\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\n// Legacy shape kept for compatibility in mapping helper\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n  offset?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FilesService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async upload(\n    file: File,\n    subfolder = '',\n    sessionId?: string,\n  ): Promise {\n    const form = new FormData();\n    form.append('upload', file);\n    form.append('subfolder', subfolder);\n    const url = `${this.base}/files/`;\n    const params: any = {};\n    if (sessionId) {\n      params.session_id = sessionId;\n      // Also include in form for backends expecting it in body\n      form.append('session_id', sessionId);\n    }\n    return firstValueFrom(\n      this.http.post(url, form, { params }),\n    );\n  }\n\n  async getFile(fileId: string): Promise {\n    // Fetch metadata instead of binary stream\n    const url = `${this.base}/files/${fileId}/meta`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise> {\n    const url = `${this.base}/files/`;\n    // Build clean query params (avoid sending undefined) and map offset->page for backend\n    const qp: any = {};\n    if (params?.type_file) qp.type_file = params.type_file;\n    if (params?.subfolder) qp.subfolder = params.subfolder;\n    if (typeof params?.limit === 'number') qp.limit = params.limit;\n    const page =\n      params?.page ??\n      (params?.offset != null && params?.limit\n        ? Math.floor(params.offset / params.limit) + 1\n        : 1);\n    qp.page = page;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    // Normalize to Paginated using helper\n    const pageParams = { page, limit: params?.limit };\n    return mapToPaginated(data, pageParams);\n  }\n\n  async listBySession(sessionId: string): Promise {\n    const url = `${this.base}/files/session/${encodeURIComponent(sessionId)}`;\n    return firstValueFrom(this.http.get(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListFilesUseCase.html":{"url":"injectables/ListFilesUseCase.html","title":"injectable - ListFilesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListFilesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/files/list-files.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/files/list-files.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FILES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/files/list-files.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FILES_PORT } from '@core/tokens';\nimport type { FilesPort, UploadedFileMeta } from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\n\n@Injectable({ providedIn: 'root' })\nexport class ListFilesUseCase {\n  private readonly files = inject(FILES_PORT);\n  execute(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise> {\n    return this.files.list(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListSessionFilesUseCase.html":{"url":"injectables/ListSessionFilesUseCase.html","title":"injectable - ListSessionFilesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListSessionFilesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/files/list-session-files.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/files/list-session-files.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FILES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/files/list-session-files.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FILES_PORT } from '@core/tokens';\nimport type { FilesPort, UploadedFileMeta } from '@core/ports';\n\n@Injectable({ providedIn: 'root' })\nexport class ListSessionFilesUseCase {\n  private readonly files = inject(FILES_PORT);\n  execute(sessionId: string): Promise {\n    return this.files.listBySession(sessionId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListSessionsUseCase.html":{"url":"classes/ListSessionsUseCase.html","title":"class - ListSessionsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListSessionsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/list-sessions.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessions: SessionsPort)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/use-cases/list-sessions.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsPort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(agentId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/list-sessions.usecase.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { SessionEntry } from '@core/models';\nimport type { SessionsPort } from '@core/ports';\n\nexport class ListSessionsUseCase {\n  constructor(private readonly sessions: SessionsPort) {}\n  execute(\n    agentId: string,\n    params?: { page?: number; limit?: number },\n  ): Observable {\n    return this.sessions.getSessions(agentId, params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListUsersUseCase.html":{"url":"injectables/ListUsersUseCase.html","title":"injectable - ListUsersUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListUsersUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin/list-users.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin/list-users.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_USERS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin/list-users.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { Paginated } from '@core/models/paginated';\nimport type { AdminUserItem, AdminUsersPort } from '@core/ports';\nimport { ADMIN_USERS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class ListUsersUseCase {\n  private readonly port = inject(ADMIN_USERS_PORT);\n  execute(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    return this.port.list(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFacade.html":{"url":"injectables/LoginFacade.html","title":"injectable - LoginFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/auth/login.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Private\n                                    Readonly\n                                loginUC\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: LoginRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/auth/login.facade.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/login.facade.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/login.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loginUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoginUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/login.facade.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/login.facade.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, signal } from '@angular/core';\nimport { LoginUseCase } from '@core/use-cases/auth/login.usecase';\nimport type { LoginRequest, LoginSuccessResponse } from '@core/models/auth';\nimport { TokenStorageService } from '@infrastructure/services/token-storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginFacade {\n  private readonly loginUC = inject(LoginUseCase);\n  private readonly token = inject(TokenStorageService);\n\n  readonly loading = signal(false);\n  readonly error = signal(null);\n\n  async login(\n    payload: LoginRequest,\n  ): Promise {\n    if (this.loading()) return;\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const res = await this.loginUC.execute(payload);\n      // Persist tokens/role in application layer (not in presentation)\n      this.token.setToken(res.token.access_token);\n      if (res.user?.role) this.token.setRole(res.user.role);\n      return res;\n    } catch (e: any) {\n      this.error.set(e?.error?.message || e?.message || 'Login failed');\n      throw e;\n    } finally {\n      this.loading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/auth/login.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterLink\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                facade\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Readonly\n                                showPassword\n                            \n                            \n                                    Readonly\n                                submitting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                submit\n                            \n                            \n                                toggleShowPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.error\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        facade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoginFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        submitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.loading\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  inject,\n  ChangeDetectionStrategy,\n  signal,\n} from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink } from '@angular/router';\nimport { LoginFacade } from '@app/application/auth/login.facade';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    RouterLink,\n    MatIconModule,\n    TranslateModule,\n  ],\n  templateUrl: './login.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginPage {\n  private readonly fb = inject(FormBuilder);\n  private readonly facade = inject(LoginFacade);\n  private readonly router = inject(Router);\n\n  readonly form = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n  });\n\n  readonly submitting = this.facade.loading;\n  readonly error = this.facade.error;\n  readonly showPassword = signal(false);\n\n  toggleShowPassword() {\n    this.showPassword.set(!this.showPassword());\n  }\n\n  async submit() {\n    if (this.form.invalid || this.submitting()) return;\n    try {\n      await this.facade.login({\n        email: this.form.value.email!,\n        password: this.form.value.password!,\n      });\n      this.router.navigateByUrl('/home');\n    } catch {\n      // error state already handled in facade\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ \"NOT_FOUND.BACK_HOME\" | translate }}\n    \n  \n  \n    \n    \n\n    \n      \n      \n      \n        \n          \n            {{ \"LOGIN.TITLE\" | translate }}\n          \n          \n            {{ \"LOGIN.SUBTITLE\" | translate }}\n          \n        \n\n        \n          \n          \n            {{ \"LOGIN.EMAIL\" | translate }}\n            \n            @if (form.get(\"email\")?.invalid && form.get(\"email\")?.touched) {\n              \n                {{ \"LOGIN.EMAIL_INVALID\" | translate }}\n              \n            }\n          \n\n          \n          \n            \n              {{ \"LOGIN.PASSWORD\" | translate }}\n              \n                {{ \"LOGIN.FORGOT\" | translate }}\n              \n            \n            \n              \n              \n                \n              \n            \n            @if (\n              form.get(\"password\")?.invalid && form.get(\"password\")?.touched\n            ) {\n              \n                {{ \"LOGIN.MIN_6_CHARS\" | translate }}\n              \n            }\n          \n\n          \n          @if (error()) {\n            \n              {{ error() }}\n            \n          }\n\n          \n          \n            @if (!submitting()) {\n              {{ \"LOGIN.SUBMIT\" | translate }}\n            }\n            @if (submitting()) {\n              {{ \"LOGIN.PROCESSING\" | translate }}\n            }\n          \n        \n\n        \n          {{ \"LOGIN.NO_ACCOUNT\" | translate }}\n          {{ \"LOGIN.CREATE_ACCOUNT\" | translate }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \"NOT_FOUND.BACK_HOME\" | translate }}                                                                    {{ \"LOGIN.TITLE\" | translate }}                                {{ \"LOGIN.SUBTITLE\" | translate }}                                                          {{ \"LOGIN.EMAIL\" | translate }}                        @if (form.get(\"email\")?.invalid && form.get(\"email\")?.touched) {                              {{ \"LOGIN.EMAIL_INVALID\" | translate }}                          }                                                        {{ \"LOGIN.PASSWORD\" | translate }}                              {{ \"LOGIN.FORGOT\" | translate }}                                                                                                                        @if (              form.get(\"password\")?.invalid && form.get(\"password\")?.touched            ) {                              {{ \"LOGIN.MIN_6_CHARS\" | translate }}                          }                              @if (error()) {                          {{ error() }}                      }                                @if (!submitting()) {              {{ \"LOGIN.SUBMIT\" | translate }}            }            @if (submitting()) {              {{ \"LOGIN.PROCESSING\" | translate }}            }                                    {{ \"LOGIN.NO_ACCOUNT\" | translate }}          {{ \"LOGIN.CREATE_ACCOUNT\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n  username?: string; // allow either username or email\n  email?: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  // username is required by backend\n  username: string;\n}\n\n// Backend login returns nested token + user\nexport interface LoginSuccessResponse {\n  token: { access_token: string; token_type: string };\n  user: {\n    user_id: string;\n    username: string;\n    email: string;\n    role: string;\n    created_at?: string;\n  };\n}\n\n// Backend register returns basic user (UserBaseResponseDTO)\nexport interface RegisterSuccessResponse {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginSuccessResponse.html":{"url":"interfaces/LoginSuccessResponse.html","title":"interface - LoginSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n  username?: string; // allow either username or email\n  email?: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  // username is required by backend\n  username: string;\n}\n\n// Backend login returns nested token + user\nexport interface LoginSuccessResponse {\n  token: { access_token: string; token_type: string };\n  user: {\n    user_id: string;\n    username: string;\n    email: string;\n    role: string;\n    created_at?: string;\n  };\n}\n\n// Backend register returns basic user (UserBaseResponseDTO)\nexport interface RegisterSuccessResponse {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginUseCase.html":{"url":"injectables/LoginUseCase.html","title":"injectable - LoginUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/auth/login.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(payload: LoginRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/auth/login.usecase.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AUTH_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/auth/login.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { LoginRequest, LoginSuccessResponse } from '../../models/auth';\nimport type { AuthPort } from '../../ports/auth.port';\nimport { AUTH_PORT } from '../../tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginUseCase {\n  private readonly auth = inject(AUTH_PORT);\n\n  async execute(payload: LoginRequest): Promise {\n    return this.auth.login(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageManagerService.html":{"url":"injectables/MessageManagerService.html","title":"injectable - MessageManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/message-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chatUtils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addErrorMessage\n                            \n                            \n                                addMessage\n                            \n                            \n                                addSystemMessage\n                            \n                            \n                                addUserMessage\n                            \n                            \n                                clearMessages\n                            \n                            \n                                completeMessage\n                            \n                            \n                                createBotMessage\n                            \n                            \n                                findMessageById\n                            \n                            \n                                getMessageStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addErrorMessage\n                        \n                    \n                \n            \n            \n                \naddErrorMessage(messages: ChatMessage[], content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Agrega un mensaje de error\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMessage\n                        \n                    \n                \n            \n            \n                \naddMessage(messages: ChatMessage[], message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Agrega un mensaje a la lista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSystemMessage\n                        \n                    \n                \n            \n            \n                \naddSystemMessage(messages: ChatMessage[], content: string, event: EventType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Agrega un mensaje del sistema\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserMessage\n                        \n                    \n                \n            \n            \n                \naddUserMessage(messages: ChatMessage[], content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Agrega un mensaje de usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearMessages\n                        \n                    \n                \n            \n            \n                \nclearMessages(messages: ChatMessage[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Limpia todos los mensajes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeMessage\n                        \n                    \n                \n            \n            \n                \ncompleteMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Finaliza un mensaje (completa el streaming)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBotMessage\n                        \n                    \n                \n            \n            \n                \ncreateBotMessage(messages: ChatMessage[], runId: string, timestamp?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo mensaje de bot\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                runId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMessageById\n                        \n                    \n                \n            \n            \n                \nfindMessageById(messages: ChatMessage[], id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Busca un mensaje por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageStats\n                        \n                    \n                \n            \n            \n                \ngetMessageStats(messages: ChatMessage[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/message-manager.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Obtiene estadísticas de mensajes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n                                            \n                                                            ChatMessage[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { total: any; user: any; bot: any; system: any; error: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chatUtils\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatUtilsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/message-manager.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport type { ChatMessage, EventType } from '@core/models/chat-model';\nimport { ChatUtilsService } from './chat-utils.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageManagerService {\n  private readonly chatUtils = inject(ChatUtilsService);\n\n  /**\n   * Agrega un mensaje a la lista\n   */\n  addMessage(messages: ChatMessage[], message: ChatMessage): void {\n    messages.push(message);\n    console.log(`📝 Mensaje agregado: ${message.event}`, message);\n  }\n\n  /**\n   * Agrega un mensaje de usuario\n   */\n  addUserMessage(messages: ChatMessage[], content: string): ChatMessage {\n    const userMessage = this.chatUtils.createUserMessage(content);\n    this.addMessage(messages, userMessage);\n    return userMessage;\n  }\n\n  /**\n   * Agrega un mensaje del sistema\n   */\n  addSystemMessage(\n    messages: ChatMessage[],\n    content: string,\n    event: EventType,\n  ): ChatMessage {\n    const systemMessage = this.chatUtils.createSystemMessage(content, event);\n    this.addMessage(messages, systemMessage);\n    return systemMessage;\n  }\n\n  /**\n   * Agrega un mensaje de error\n   */\n  addErrorMessage(messages: ChatMessage[], content: string): ChatMessage {\n    const errorMessage = this.chatUtils.createSystemMessage(\n      content,\n      'Error' as EventType,\n    );\n    this.addMessage(messages, errorMessage);\n    return errorMessage;\n  }\n\n  /**\n   * Crea un nuevo mensaje de bot\n   */\n  createBotMessage(\n    messages: ChatMessage[],\n    runId: string,\n    timestamp?: number,\n  ): ChatMessage {\n    const botMessage = this.chatUtils.createBotMessage(runId, timestamp);\n    this.addMessage(messages, botMessage);\n    return botMessage;\n  }\n\n  /**\n   * Finaliza un mensaje (completa el streaming)\n   */\n  completeMessage(message: ChatMessage): void {\n    if (message?.isStreaming) {\n      message.displayedContent = message.content;\n      message.isComplete = true;\n      message.isStreaming = false;\n      console.log('✅ Mensaje completado:', message.id);\n    }\n  }\n\n  /**\n   * Limpia todos los mensajes\n   */\n  clearMessages(messages: ChatMessage[]): void {\n    messages.length = 0;\n    console.log('🗑️ Mensajes limpiados');\n  }\n\n  /**\n   * Busca un mensaje por ID\n   */\n  findMessageById(\n    messages: ChatMessage[],\n    id: string,\n  ): ChatMessage | undefined {\n    return messages.find((msg) => msg.id === id);\n  }\n\n  /**\n   * Obtiene estadísticas de mensajes\n   */\n  getMessageStats(messages: ChatMessage[]) {\n    return {\n      total: messages.length,\n      user: messages.filter((m) => this.chatUtils.isUserMessage(m)).length,\n      bot: messages.filter((m) => this.chatUtils.isBotMessage(m)).length,\n      system: messages.filter((m) => this.chatUtils.isSystemMessage(m)).length,\n      error: messages.filter((m) => this.chatUtils.isErrorMessage(m)).length,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/agent-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tool {\n  name: string;\n  parameters: {\n    type: string;\n    properties: Record;\n    required: string[];\n  };\n  requires_confirmation: boolean;\n  external_execution: boolean;\n}\n\nexport interface Model {\n  name: string;\n  model: string;\n  provider: string;\n}\n\nexport interface Storage {\n  name: string;\n}\n\nexport interface AgentModel {\n  agent_id: string;\n  name: string;\n  model: Model;\n  add_context: boolean;\n  tools: Tool[];\n  memory: any | null;\n  storage: Storage;\n  knowledge: any | null;\n  description: string | null;\n  instructions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPage.html":{"url":"components/NotFoundPage.html","title":"component - NotFoundPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/not-found/not-found.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, RouterLink, TranslateModule],\n  templateUrl: './not-found.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotFoundPage {}\n\n    \n\n    \n        \n  \n    {{ \"NOT_FOUND.TITLE\" | translate }}\n  \n  {{ \"NOT_FOUND.DESC\" | translate }}\n  {{ \"NOT_FOUND.BACK_HOME\" | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"NOT_FOUND.TITLE\" | translate }}    {{ \"NOT_FOUND.DESC\" | translate }}  {{ \"NOT_FOUND.BACK_HOME\" | translate }}'\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/paginated.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  items: T[];\n  page: number;\n  limit: number;\n  total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedApi.html":{"url":"interfaces/PaginatedApi.html","title":"interface - PaginatedApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/pagination-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            info\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from './paginated';\n\nexport interface PaginatedApi {\n  info?: {\n    count: number;\n    pages?: number;\n    page_number?: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results?: T[];\n}\n\nexport function mapToPaginated(\n  data: any,\n  params?: { page?: number; limit?: number },\n): Paginated {\n  if (Array.isArray(data)) {\n    const items = data as T[];\n    const limit = params?.limit ?? items?.length ?? 0;\n    const page = params?.page ?? 1;\n    return { items, page, limit, total: items?.length ?? 0 };\n  }\n  const api = data as PaginatedApi;\n  if (api && Array.isArray(api.results) && api.info) {\n    return {\n      items: api.results ?? [],\n      page: api.info?.page_number ?? params?.page ?? 1,\n      limit: params?.limit ?? api.results?.length ?? 0,\n      total: api.info?.count ?? api.results?.length ?? 0,\n    };\n  }\n  // Fallback for { total, items, offset }\n  if (typeof data?.total === 'number' && Array.isArray(data?.items)) {\n    const limit = params?.limit ?? data.items?.length ?? 0;\n    const total: number = data.total;\n    const page =\n      params?.page ?? (limit ? Math.floor((data.offset ?? 0) / limit) + 1 : 1);\n    return { items: data.items as T[], page, limit, total };\n  }\n  // Ultimate fallback: empty page\n  return {\n    items: [],\n    page: params?.page ?? 1,\n    limit: params?.limit ?? 0,\n    total: 0,\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedApi-1.html":{"url":"interfaces/PaginatedApi-1.html","title":"interface - PaginatedApi-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-messages.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport type {\n  AdminMessagesPort,\n  AdminMessageItem,\n  AdminSessionItem,\n} from '@core/ports';\nimport type { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminMessagesService implements AdminMessagesPort {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async listSessions(params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    sort_by?: 'updated_at' | 'title';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/agent/sessions`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.search != null && src.search !== '') qp.search = src.search;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    if (Array.isArray(data)) {\n      return {\n        items: data,\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data as PaginatedApi)?.results ?? [],\n      page:\n        (data as PaginatedApi)?.info?.page_number ??\n        params?.page ??\n        1,\n      limit:\n        (data as PaginatedApi)?.results?.length ??\n        params?.limit ??\n        10,\n      total:\n        (data as PaginatedApi)?.info?.count ??\n        (data as PaginatedApi)?.results?.length ??\n        0,\n    };\n  }\n\n  async listMessages(\n    sessionId: string,\n    params?: { page?: number; limit?: number },\n  ): Promise> {\n    const url = `${this.base}/agent/sessions/${sessionId}/messages`;\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    if (Array.isArray(data)) {\n      return {\n        items: data,\n        page: params?.page ?? 1,\n        limit: params?.limit ?? data?.length ?? 0,\n        total: data?.length ?? 0,\n      };\n    }\n    return {\n      items: (data as PaginatedApi)?.results ?? [],\n      page:\n        (data as PaginatedApi)?.info?.page_number ??\n        params?.page ??\n        1,\n      limit:\n        (data as PaginatedApi)?.results?.length ??\n        params?.limit ??\n        10,\n      total:\n        (data as PaginatedApi)?.info?.count ??\n        (data as PaginatedApi)?.results?.length ??\n        0,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedApi-2.html":{"url":"interfaces/PaginatedApi-2.html","title":"interface - PaginatedApi-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/admin-users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { Paginated } from '@core/models/paginated';\n\ninterface PaginatedApi {\n  info: {\n    count: number;\n    pages: number;\n    page_number: number;\n    next?: string | null;\n    prev?: string | null;\n  };\n  results: T[];\n}\n\nexport interface AdminUserItem {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface CreateUserPayload {\n  username: string;\n  email: string;\n  password: string;\n  role?: 'admin' | 'user';\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminUsersService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async list(params?: {\n    page?: number;\n    limit?: number;\n    email?: string;\n    sort_by?: 'email' | 'username' | 'created_at';\n    sort_order?: 'asc' | 'desc';\n  }): Promise> {\n    const url = `${this.base}/users/`;\n    // build params without undefined/null/empty values to avoid sending 'undefined'\n    const qp: any = {};\n    const src = params || {};\n    if (src.page != null) qp.page = String(src.page);\n    if (src.limit != null) qp.limit = String(src.limit);\n    if (src.email != null && src.email !== '') qp.email = src.email;\n    if (src.sort_by != null) qp.sort_by = src.sort_by;\n    if (src.sort_order != null) qp.sort_order = src.sort_order;\n    const data = await firstValueFrom(\n      this.http.get>(url, { params: qp }),\n    );\n    return {\n      items: data?.results ?? [],\n      page: data?.info?.page_number ?? params?.page ?? 1,\n      limit: params?.limit ?? 10,\n      total: data?.info?.count ?? 0,\n    };\n  }\n\n  async get(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async create(payload: CreateUserPayload): Promise {\n    // Backend's register endpoint creates users\n    const url = `${this.base}/auth/register`;\n    return firstValueFrom(this.http.post(url, payload));\n  }\n\n  async update(\n    userId: string,\n    payload: Partial,\n  ): Promise {\n    const url = `${this.base}/users/${userId}`;\n    return firstValueFrom(this.http.put(url, payload));\n  }\n\n  async delete(userId: string): Promise {\n    const url = `${this.base}/users/${userId}`;\n    await firstValueFrom(this.http.delete(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PerformanceService.html":{"url":"injectables/PerformanceService.html","title":"injectable - PerformanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PerformanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/performance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/performance.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class PerformanceService {\n  init() {\n    try {\n      const isSmallScreen =\n        typeof window !== 'undefined' &&\n        window.matchMedia &&\n        window.matchMedia('(max-width: 480px)').matches;\n      // Heuristic: low cores or very high DPR on small screens → enable lite mode\n      const cores = (navigator as any).hardwareConcurrency ?? 4;\n      const deviceMemory = (navigator as any).deviceMemory ?? 4;\n      const dpr =\n        typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1;\n      const isLowEnd = cores  1) || isiOS) {\n        document.body.classList.add('perf-lite');\n      } else {\n        document.body.classList.remove('perf-lite');\n      }\n    } catch {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaygroundAgentExtraData.html":{"url":"interfaces/PlaygroundAgentExtraData.html","title":"interface - PlaygroundAgentExtraData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlaygroundAgentExtraData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            reasoning_steps\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reasoning_steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reasoning_steps:         ReasoningSteps[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReasoningSteps[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:     ReferenceData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReferenceData[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReasoningSteps.html":{"url":"interfaces/ReasoningSteps.html","title":"interface - ReasoningSteps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReasoningSteps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confidence\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            next_action\n                                        \n                                \n                                \n                                        \n                                            reasoning\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confidence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confidence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reasoning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reasoning:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reference.html":{"url":"interfaces/Reference.html","title":"interface - Reference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            meta_data\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta_data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceData.html":{"url":"interfaces/ReferenceData.html","title":"interface - ReferenceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFacade.html":{"url":"injectables/RegisterFacade.html","title":"injectable - RegisterFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/auth/register.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Private\n                                    Readonly\n                                registerUC\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/auth/register.facade.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/register.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/register.facade.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        registerUC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RegisterUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/auth/register.facade.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, signal } from '@angular/core';\nimport { RegisterUseCase } from '@core/use-cases/auth/register.usecase';\n\n@Injectable({ providedIn: 'root' })\nexport class RegisterFacade {\n  private readonly registerUC = inject(RegisterUseCase);\n\n  readonly loading = signal(false);\n  readonly error = signal(null);\n\n  async register(payload: {\n    email: string;\n    password: string;\n    username: string;\n  }) {\n    if (this.loading()) return;\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      await this.registerUC.execute(payload);\n    } catch (e: any) {\n      const detail = e?.error?.detail;\n      let errorMessage: string;\n      if (Array.isArray(detail)) {\n        errorMessage = detail.map((d: any) => d?.msg || d).join(' | ');\n      } else {\n        errorMessage =\n          detail || e?.error?.message || e?.message || 'Error de registro';\n      }\n      if (/uppercase/i.test(errorMessage)) {\n        errorMessage = 'La contraseña debe tener al menos una MAYÚSCULA';\n      } else if (/lowercase/i.test(errorMessage)) {\n        errorMessage = 'La contraseña debe tener al menos una minúscula';\n      } else if (/digit/i.test(errorMessage)) {\n        errorMessage = 'La contraseña debe incluir al menos un número';\n      } else if (/at least 8/i.test(errorMessage)) {\n        errorMessage = 'La contraseña debe tener mínimo 8 caracteres';\n      } else if (/(already|exists)/i.test(errorMessage)) {\n        errorMessage = 'El email ya está registrado';\n      }\n      this.error.set(errorMessage);\n      throw e;\n    } finally {\n      this.loading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/auth/register.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterLink\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                facade\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Readonly\n                                showPassword\n                            \n                            \n                                    Readonly\n                                submitting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                submit\n                            \n                            \n                                toggleShowPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.error\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        facade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RegisterFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, passwordComplexityValidator]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        submitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.facade.loading\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  inject,\n  ChangeDetectionStrategy,\n  signal,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  ReactiveFormsModule,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink } from '@angular/router';\nimport { RegisterFacade } from '@app/application/auth/register.facade';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\n\n// Validator para complejidad de contraseña\nexport function passwordComplexityValidator(\n  control: AbstractControl,\n): ValidationErrors | null {\n  const value: string = control.value || '';\n  if (!value) return null;\n\n  const failures: string[] = [];\n  if (value.length  !v);\n  }\n\n  async submit() {\n    if (this.form.invalid || this.submitting()) return;\n\n    try {\n      // Normalizar entrada y validar password local\n      const email = (this.form.value.email || '').trim().toLowerCase();\n      const username = (this.form.value.username || '').trim();\n      const password = this.form.value.password || '';\n      if (this.form.get('password')?.errors) {\n        this.error.set('La contraseña no cumple los requisitos.');\n        return;\n      }\n      await this.facade.register({ email, password, username });\n      this.router.navigateByUrl('/login');\n    } catch {\n      // error already set by facade\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ \"NOT_FOUND.BACK_HOME\" | translate }}\n    \n  \n  \n    \n    \n      \n      \n      \n        \n          \n            {{ \"REGISTER.TITLE\" | translate }}\n          \n          \n            {{ \"REGISTER.SUBTITLE\" | translate }}\n          \n        \n        \n          \n          \n            {{ \"REGISTER.USERNAME\" | translate }}\n            \n            @if (\n              form.get(\"username\")?.invalid && form.get(\"username\")?.touched\n            ) {\n              \n                {{ \"REGISTER.USERNAME_ERROR\" | translate }}\n              \n            }\n          \n          \n          \n            {{ \"REGISTER.EMAIL\" | translate }}\n            \n            @if (form.get(\"email\")?.invalid && form.get(\"email\")?.touched) {\n              \n                {{ \"REGISTER.EMAIL_INVALID\" | translate }}\n              \n            }\n          \n          \n          \n            \n              {{ \"REGISTER.PASSWORD\" | translate }}\n            \n            \n              \n              \n                \n              \n            \n            @if (\n              form.get(\"password\")?.invalid && form.get(\"password\")?.touched\n            ) {\n              \n                {{ \"REGISTER.PASSWORD_COMPLEXITY_ERROR\" | translate }}\n              \n            }\n          \n          \n          @if (error()) {\n            \n              {{ error() }}\n            \n          }\n          \n          \n            @if (!submitting()) {\n              {{ \"REGISTER.SUBMIT\" | translate }}\n            }\n            @if (submitting()) {\n              {{ \"REGISTER.PROCESSING\" | translate }}\n            }\n          \n        \n        \n          {{ \"REGISTER.HAVE_ACCOUNT\" | translate }}\n          {{ \"REGISTER.SIGN_IN\" | translate }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \"NOT_FOUND.BACK_HOME\" | translate }}                                                                {{ \"REGISTER.TITLE\" | translate }}                                {{ \"REGISTER.SUBTITLE\" | translate }}                                                          {{ \"REGISTER.USERNAME\" | translate }}                        @if (              form.get(\"username\")?.invalid && form.get(\"username\")?.touched            ) {                              {{ \"REGISTER.USERNAME_ERROR\" | translate }}                          }                                          {{ \"REGISTER.EMAIL\" | translate }}                        @if (form.get(\"email\")?.invalid && form.get(\"email\")?.touched) {                              {{ \"REGISTER.EMAIL_INVALID\" | translate }}                          }                                                        {{ \"REGISTER.PASSWORD\" | translate }}                                                                                                          @if (              form.get(\"password\")?.invalid && form.get(\"password\")?.touched            ) {                              {{ \"REGISTER.PASSWORD_COMPLEXITY_ERROR\" | translate }}                          }                              @if (error()) {                          {{ error() }}                      }                                @if (!submitting()) {              {{ \"REGISTER.SUBMIT\" | translate }}            }            @if (submitting()) {              {{ \"REGISTER.PROCESSING\" | translate }}            }                                    {{ \"REGISTER.HAVE_ACCOUNT\" | translate }}          {{ \"REGISTER.SIGN_IN\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequest.html":{"url":"interfaces/RegisterRequest.html","title":"interface - RegisterRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n  username?: string; // allow either username or email\n  email?: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  // username is required by backend\n  username: string;\n}\n\n// Backend login returns nested token + user\nexport interface LoginSuccessResponse {\n  token: { access_token: string; token_type: string };\n  user: {\n    user_id: string;\n    username: string;\n    email: string;\n    role: string;\n    created_at?: string;\n  };\n}\n\n// Backend register returns basic user (UserBaseResponseDTO)\nexport interface RegisterSuccessResponse {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterSuccessResponse.html":{"url":"interfaces/RegisterSuccessResponse.html","title":"interface - RegisterSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n  username?: string; // allow either username or email\n  email?: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  // username is required by backend\n  username: string;\n}\n\n// Backend login returns nested token + user\nexport interface LoginSuccessResponse {\n  token: { access_token: string; token_type: string };\n  user: {\n    user_id: string;\n    username: string;\n    email: string;\n    role: string;\n    created_at?: string;\n  };\n}\n\n// Backend register returns basic user (UserBaseResponseDTO)\nexport interface RegisterSuccessResponse {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterUseCase.html":{"url":"injectables/RegisterUseCase.html","title":"injectable - RegisterUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/auth/register.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(payload: RegisterRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/auth/register.usecase.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RegisterRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AUTH_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/auth/register.usecase.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type {\n  RegisterRequest,\n  RegisterSuccessResponse,\n} from '../../models/auth';\nimport type { AuthPort } from '../../ports/auth.port';\nimport { AUTH_PORT } from '../../tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class RegisterUseCase {\n  private readonly auth = inject(AUTH_PORT);\n\n  async execute(payload: RegisterRequest): Promise {\n    return this.auth.register(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseAudio.html":{"url":"interfaces/ResponseAudio.html","title":"interface - ResponseAudio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseAudio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sample_rate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transcript\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sample_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sample_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transcript\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transcript:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RiskFacade.html":{"url":"injectables/RiskFacade.html","title":"injectable - RiskFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RiskFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/application/risk/risk.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                            \n                                    Readonly\n                                inputText\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Readonly\n                                resultPdf\n                            \n                            \n                                    Readonly\n                                resultText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                analyzePdf\n                            \n                            \n                                    Async\n                                analyzeText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        analyzePdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzePdf(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/risk/risk.facade.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        analyzeText\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/application/risk/risk.facade.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        inputText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        resultPdf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        resultText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/application/risk/risk.facade.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RiskFacade {\n  private readonly http = inject(HttpClient);\n  private readonly baseUrl = environment.baseUrl;\n\n  readonly inputText = signal('');\n  readonly resultText = signal(null);\n  readonly resultPdf = signal(null);\n  readonly loading = signal(false);\n  readonly error = signal(null);\n\n  async analyzeText() {\n    if (!this.inputText().trim()) return;\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const result = await firstValueFrom(\n        this.http.post(`${this.baseUrl}/risk/analysis/text`, {\n          text: this.inputText(),\n        }),\n      );\n      this.resultText.set(result);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error en análisis');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  async analyzePdf(input: HTMLInputElement) {\n    if (!input.files?.length) return;\n    const file = input.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.loading.set(true);\n    this.error.set(null);\n    try {\n      const result = await firstValueFrom(\n        this.http.post(`${this.baseUrl}/risk/analysis/pdf`, formData),\n      );\n      this.resultPdf.set(result);\n    } catch (e: any) {\n      this.error.set(e?.message || 'Error analizando PDF');\n    } finally {\n      this.loading.set(false);\n      input.value = '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RiskWeightsConfig.html":{"url":"interfaces/RiskWeightsConfig.html","title":"interface - RiskWeightsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RiskWeightsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/risk-weights.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            weights\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weights:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RiskWeightsConfig {\n  id: string;\n  version: number;\n  weights: Record;\n}\n\nexport interface RiskWeightsPort {\n  getActive(): Promise;\n  upsert(\n    version: number,\n    weights: Record,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RiskWeightsConfig-1.html":{"url":"interfaces/RiskWeightsConfig-1.html","title":"interface - RiskWeightsConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RiskWeightsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/risk-weights.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            weights\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weights:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface RiskWeightsConfig {\n  id: string;\n  version: number;\n  weights: Record;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RiskWeightsService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async getActive(): Promise {\n    const url = `${this.base}/risk/weights/active`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async upsert(\n    version: number,\n    weights: Record,\n  ): Promise {\n    const url = `${this.base}/risk/weights/upsert`;\n    return firstValueFrom(\n      this.http.post(url, {\n        version,\n        weights,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RiskWeightsPort.html":{"url":"interfaces/RiskWeightsPort.html","title":"interface - RiskWeightsPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RiskWeightsPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/risk-weights.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getActive\n                                    \n                                \n                                \n                                    \n                                        upsert\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActive\n                        \n                    \n                \n            \n            \n                \ngetActive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/risk-weights.port.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upsert\n                        \n                    \n                \n            \n            \n                \nupsert(version: number, weights: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/risk-weights.port.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                weights\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface RiskWeightsConfig {\n  id: string;\n  version: number;\n  weights: Record;\n}\n\nexport interface RiskWeightsPort {\n  getActive(): Promise;\n  upsert(\n    version: number,\n    weights: Record,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RiskWeightsService.html":{"url":"injectables/RiskWeightsService.html","title":"injectable - RiskWeightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RiskWeightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/risk-weights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getActive\n                            \n                            \n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/risk-weights.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(version: number, weights: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/risk-weights.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                weights\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/risk-weights.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/risk-weights.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface RiskWeightsConfig {\n  id: string;\n  version: number;\n  weights: Record;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RiskWeightsService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async getActive(): Promise {\n    const url = `${this.base}/risk/weights/active`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async upsert(\n    version: number,\n    weights: Record,\n  ): Promise {\n    const url = `${this.base}/risk/weights/upsert`;\n    return firstValueFrom(\n      this.http.post(url, {\n        version,\n        weights,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleGuardService.html":{"url":"injectables/RoleGuardService.html","title":"injectable - RoleGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/guards/role.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/guards/role.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/role.guard.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/guards/role.guard.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { CanActivateFn, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class RoleGuardService {\n  private readonly token = inject(TokenStorageService);\n  private readonly router = inject(Router);\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const allowed: string[] = route.data?.['roles'] || [];\n    // If no roles configured, allow\n    if (!allowed.length) return true;\n\n    const role = this.token.getRole();\n    if (role && allowed.includes(role)) return true;\n\n    this.router.navigateByUrl('/forbidden');\n    return false;\n  }\n}\n\nexport const RoleGuard: CanActivateFn = (route: ActivatedRouteSnapshot) => {\n  return inject(RoleGuardService).canActivate(route);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunResponse.html":{"url":"interfaces/RunResponse.html","title":"interface - RunResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RunResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            agent_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            audio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            event_data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extra_data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response_audio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            run_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tool\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tools\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            videos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioData[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     string | object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         RunEvent | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RunEvent | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event_data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extra_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra_data:         PlaygroundAgentExtraData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlaygroundAgentExtraData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         ImageData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageData[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_audio:         ResponseAudio\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseAudio\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        run_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tools:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videos:         VideoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoData[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SSEMessage.html":{"url":"interfaces/SSEMessage.html","title":"interface - SSEMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SSEMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/sse-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            agent_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extra_data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            failed_generation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            messages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metrics\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response_audio\n                                        \n                                \n                                \n                                        \n                                            run_id\n                                        \n                                \n                                \n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            videos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extra_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra_data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failed_generation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed_generation:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metrics:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_audio:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        run_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videos:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport { TokenStorageService } from './token-storage.service';\n\n// Legacy-ish shape used by UI. We'll map backend SSE events into this.\nexport interface SSEMessage {\n  content: string;\n  content_type: string;\n  event: string;\n  run_id: string;\n  agent_id: string;\n  session_id: string;\n  created_at: number;\n  model?: string;\n  messages?: any[];\n  metrics?: any;\n  failed_generation?: any;\n  extra_data?: any;\n  images?: any[];\n  videos?: any[];\n  audio?: any[];\n  response_audio?: any;\n}\n\nexport interface StreamResponse {\n  fullContent: string;\n  currentChunk: string;\n  event: string;\n  isComplete: boolean;\n  isError: boolean;\n  rawMessage: SSEMessage;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SseService {\n  private readonly baseUrl = environment.baseUrl;\n  private abortController: AbortController | null = null;\n  private readonly cancel$ = new Subject();\n  private readonly tokenStorage = inject(TokenStorageService);\n  private lastSessionId: string | null = null;\n\n  cancel() {\n    if (this.abortController) {\n      this.abortController.abort();\n      this.abortController = null;\n    }\n    this.cancel$.next();\n  }\n\n  streamFromAgent(\n    _agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n      file_ids?: string[];\n    },\n  ): Observable {\n    // New backend endpoint: JSON body -> POST /agent/message/stream\n    const url = `${this.baseUrl}/agent/message/stream`;\n\n    return new Observable((observer) => {\n      const controller = new AbortController();\n      this.abortController = controller;\n      let fullContent = '';\n\n      const headers: Record = {\n        Accept: 'text/event-stream',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'application/json',\n      };\n      const token = this.tokenStorage.getToken();\n      if (token) headers['Authorization'] = `Bearer ${token}`;\n\n      const body = JSON.stringify({\n        content: payload?.message ?? '',\n        session_id: payload?.session_id ?? undefined,\n        file_ids: payload?.file_ids ?? [],\n      });\n\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n        signal: controller.signal,\n      })\n        .then(async (response) => {\n          if (!response.ok || !response.body) {\n            const errorText = await response.text();\n            throw new Error(\n              `Error SSE: ${response.status} ${response.statusText} - ${errorText}`,\n            );\n          }\n\n          const reader = response.body.getReader();\n          const decoder = new TextDecoder('utf-8');\n          let buffer = '';\n          let currentEvent: string | null = null;\n          let dataBuffer = '';\n\n          const emit = (event: string, data: any) => {\n            // Map backend events to UI model events\n            if (event === 'start') {\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: '',\n                content_type: 'text',\n                event: 'RunStarted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunStarted',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'user_message') {\n              // Inform session id early if provided\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: data?.message?.content || '',\n                content_type: 'text',\n                event: 'UserMessage',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'UserMessage',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'responding') {\n              const delta: string = data?.delta ?? '';\n              if (delta) fullContent += delta;\n              const msg: SSEMessage = {\n                content: delta,\n                content_type: 'text',\n                event: 'RunResponse',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: delta,\n                event: 'RunResponse',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'end') {\n              const content: string =\n                data?.agent_message?.content ?? fullContent;\n              if (!fullContent) fullContent = content;\n              const msg: SSEMessage = {\n                content,\n                content_type: 'text',\n                event: 'RunCompleted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunCompleted',\n                isComplete: true,\n                isError: false,\n                rawMessage: msg,\n              });\n              // Let the outer reader loop finish naturally; don't double-complete\n              return;\n            }\n\n            if (event === 'error') {\n              const msg: SSEMessage = {\n                content: data?.error || 'Error',\n                content_type: 'text',\n                event: 'RunError',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: msg.content,\n                event: 'RunError',\n                isComplete: true,\n                isError: true,\n                rawMessage: msg,\n              });\n              observer.complete();\n              return;\n            }\n          };\n\n          while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n            buffer += decoder.decode(value, { stream: true });\n\n            let lineEndIdx: number;\n            while ((lineEndIdx = buffer.indexOf('\\n')) !== -1) {\n              const line = buffer.slice(0, lineEndIdx).trimEnd();\n              buffer = buffer.slice(lineEndIdx + 1);\n\n              if (!line) {\n                // dispatch event with accumulated data\n                if (currentEvent && dataBuffer) {\n                  try {\n                    const parsed = JSON.parse(dataBuffer);\n                    emit(currentEvent, parsed);\n                  } catch (e) {\n                    // fallback raw text\n                    emit(currentEvent, { delta: dataBuffer });\n                  }\n                }\n                currentEvent = null;\n                dataBuffer = '';\n                continue;\n              }\n\n              if (line.startsWith('event:')) {\n                currentEvent = line.slice(6).trim();\n              } else if (line.startsWith('data:')) {\n                const chunk = line.slice(5).trimStart();\n                dataBuffer += chunk;\n              }\n            }\n          }\n\n          observer.complete();\n        })\n        .catch((err) => {\n          // Swallow aborts as user-initiated cancels\n          if (\n            err &&\n            (err.name === 'AbortError' || String(err).includes('aborted'))\n          ) {\n            return;\n          }\n          console.error('SSE Error:', err);\n          observer.error(err);\n        });\n\n      return () => {\n        try {\n          controller.abort();\n        } catch {}\n        this.lastSessionId = null;\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SSEMessageModel.html":{"url":"interfaces/SSEMessageModel.html","title":"interface - SSEMessageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SSEMessageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/stream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            agent_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extra_data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            failed_generation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            messages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metrics\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response_audio\n                                        \n                                \n                                \n                                        \n                                            run_id\n                                        \n                                \n                                \n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            videos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extra_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra_data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failed_generation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed_generation:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metrics:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_audio:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        run_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videos:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SSEMessageModel {\n  content: string;\n  content_type: string;\n  event: string;\n  run_id: string;\n  agent_id: string;\n  session_id: string;\n  created_at: number;\n  model?: string;\n  messages?: any[];\n  metrics?: any;\n  failed_generation?: any;\n  extra_data?: any;\n  images?: any[];\n  videos?: any[];\n  audio?: any[];\n  response_audio?: any;\n}\n\nexport interface StreamResponseModel {\n  fullContent: string;\n  currentChunk: string;\n  event: string;\n  isComplete: boolean;\n  isError: boolean;\n  rawMessage: SSEMessageModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollManagerService.html":{"url":"injectables/ScrollManagerService.html","title":"injectable - ScrollManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/scroll-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                shouldScrollToBottom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelScheduledScroll\n                            \n                            \n                                executeScheduledScroll\n                            \n                            \n                                hasScheduledScroll\n                            \n                            \n                                isNearBottom\n                            \n                            \n                                scheduleScrollToBottom\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                scrollToBottomRaf\n                            \n                            \n                                scrollToBottomSmooth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelScheduledScroll\n                        \n                    \n                \n            \n            \n                \ncancelScheduledScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Cancela el scroll programado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeScheduledScroll\n                        \n                    \n                \n            \n            \n                \nexecuteScheduledScroll(container: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Ejecuta el scroll si está programado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasScheduledScroll\n                        \n                    \n                \n            \n            \n                \nhasScheduledScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Verifica si hay scroll programado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNearBottom\n                        \n                    \n                \n            \n            \n                \nisNearBottom(container: ElementRef, threshold: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Comprueba si el usuario está cerca del final\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                threshold\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    160\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scheduleScrollToBottom\n                        \n                    \n                \n            \n            \n                \nscheduleScrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:12\n                        \n                    \n\n\n            \n                \n                        Programa un scroll hacia abajo en el próximo ciclo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom(container: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Hace scroll hacia abajo inmediatamente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottomRaf\n                        \n                    \n                \n            \n            \n                \nscrollToBottomRaf(container: ElementRef, frames: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Hace scroll al fondo usando requestAnimationFrame por varias frames para cubrir renders asíncronos (p.ej., Markdown)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                frames\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottomSmooth\n                        \n                    \n                \n            \n            \n                \nscrollToBottomSmooth(container: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/scroll-manager.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Scroll suave hacia el fondo (para acciones del usuario, no para streaming)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        shouldScrollToBottom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/scroll-manager.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, type ElementRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollManagerService {\n  private shouldScrollToBottom = false;\n\n  /**\n   * Programa un scroll hacia abajo en el próximo ciclo\n   */\n  scheduleScrollToBottom(): void {\n    this.shouldScrollToBottom = true;\n  }\n\n  /**\n   * Ejecuta el scroll si está programado\n   */\n  executeScheduledScroll(container: ElementRef): void {\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom(container);\n      this.shouldScrollToBottom = false;\n    }\n  }\n\n  /**\n   * Hace scroll hacia abajo inmediatamente\n   */\n  scrollToBottom(container: ElementRef): void {\n    try {\n      if (container?.nativeElement) {\n        const element = container.nativeElement;\n        element.scrollTop = element.scrollHeight;\n      }\n    } catch (err) {\n      console.warn('Error al hacer scroll:', err);\n    }\n  }\n\n  /**\n   * Hace scroll al fondo usando requestAnimationFrame por varias frames para cubrir renders asíncronos (p.ej., Markdown)\n   */\n  scrollToBottomRaf(container: ElementRef, frames = 3): void {\n    try {\n      if (!container?.nativeElement) return;\n      const el = container.nativeElement as HTMLElement;\n      let i = 0;\n      const tick = () => {\n        try {\n          el.scrollTop = el.scrollHeight;\n        } catch {}\n        if (++i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessageRestUseCase.html":{"url":"classes/SendMessageRestUseCase.html","title":"class - SendMessageRestUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessageRestUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/send-message-rest.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessions: SessionsPort)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/use-cases/send-message-rest.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsPort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/send-message-rest.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { map, Observable } from 'rxjs';\nimport type { StreamResponseModel } from '@core/models';\nimport type { SessionsPort } from '@core/ports';\n\nexport class SendMessageRestUseCase {\n  constructor(private readonly sessions: SessionsPort) {}\n\n  execute(\n    agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n    },\n  ): Observable {\n    return this.sessions.sendMessage(agentId, payload).pipe(\n      map((resp: any) => ({\n        fullContent: resp?.content || '',\n        currentChunk: resp?.content || '',\n        event: resp?.event || 'RunResponse',\n        isComplete: true,\n        isError: !!resp?.error,\n        rawMessage: resp,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessageUseCase.html":{"url":"classes/SendMessageUseCase.html","title":"class - SendMessageUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessageUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/send-message.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatStream: ChatStreamPort)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/use-cases/send-message.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatStream\n                                                  \n                                                        \n                                                                        ChatStreamPort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/send-message.usecase.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/send-message.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { StreamResponseModel } from '@core/models';\nimport type { ChatStreamPort } from '@core/ports';\n\nexport class SendMessageUseCase {\n  constructor(private readonly chatStream: ChatStreamPort) {}\n\n  execute(\n    agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n      file_ids?: string[];\n    },\n  ): Observable {\n    console.log('📨 Enviando mensaje:', payload);\n    return this.chatStream.streamFromAgent(agentId, payload);\n  }\n\n  cancel(): void {\n    this.chatStream.cancel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionCompaniesAnalysis.html":{"url":"interfaces/SessionCompaniesAnalysis.html","title":"interface - SessionCompaniesAnalysis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionCompaniesAnalysis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/session-analysis.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            aggregate_insights\n                                        \n                                \n                                \n                                        \n                                            companies\n                                        \n                                \n                                \n                                        \n                                            company_count\n                                        \n                                \n                                \n                                        \n                                            session_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregate_insights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregate_insights:         AggregateInsights | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AggregateInsights | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        companies:     SessionCompanyItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SessionCompanyItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyDashboardSummary {\n  company?: any;\n  score?: {\n    score?: number;\n    risk_class?: string;\n    recommended_credit_limit?: number;\n  } | null;\n  contributions?: any;\n  scenarios?: any[];\n  financials?: any[];\n}\n\nexport interface CompanyInsights {\n  narrative?: string;\n  risk_summary?: string;\n  reputation?: string;\n  credit_recommendation?: string;\n  key_factors?: string[];\n  warnings?: string[];\n  suggested_actions?: string[];\n  opportunity_zones?: string[];\n  early_alerts?: string[];\n  data_quality_flags?: string[];\n}\n\nexport interface SessionCompanyItem {\n  tax_id: string;\n  dashboard?: CompanyDashboardSummary | Record;\n  insights?: CompanyInsights | null;\n  error?: string;\n}\n\nexport interface AggregateInsights {\n  overview?: string;\n  ranking?: Array;\n  common_opportunities?: string[];\n  common_risks?: string[];\n  diversification_comment?: string;\n  action_recommendations?: string[];\n}\n\nexport interface SessionCompaniesAnalysis {\n  session_id: string;\n  company_count: number;\n  companies: SessionCompanyItem[];\n  aggregate_insights?: AggregateInsights | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionCompaniesModalComponent.html":{"url":"components/SessionCompaniesModalComponent.html","title":"component - SessionCompaniesModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionCompaniesModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/components/companies/session-companies-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-session-companies-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./session-companies-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./session-companies-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                analyze\n                            \n                            \n                                    \n                                    Optional\n                                closeBtn\n                            \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    \n                                    Optional\n                                modalRoot\n                            \n                            \n                                trackByTaxId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmpty\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBackdropClick\n                            \n                            \n                                    \n                                onEsc\n                            \n                            \n                                onKeydown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sessionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.escape\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sessionId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.escape\n                        \n                    \n                \n            \n            \n                \ndocument:keydown.escape()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:95\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEmpty\n                        \n                    \n                \n            \n            \n                \nisEmpty(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBackdropClick\n                        \n                    \n                \n            \n            \n                \nonBackdropClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onEsc\n                        \n                    \n                \n            \n            \n                \n                        \n                    onEsc()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.escape')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \nonKeydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        analyze\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AnalyzeSessionCompaniesUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        closeBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('closeBtn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modalRoot\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalRoot', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByTaxId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/companies/session-companies-modal.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  inject,\n  signal,\n  OnInit,\n  AfterViewInit,\n  HostListener,\n} from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport type { SessionCompaniesAnalysis } from '@core/models/session-analysis';\nimport { AnalyzeSessionCompaniesUseCase } from '@core/use-cases/sessions/analyze-session-companies.usecase';\n\n@Component({\n  selector: 'app-session-companies-modal',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, TranslateModule],\n  templateUrl: './session-companies-modal.component.html',\n  styleUrls: ['./session-companies-modal.component.css'],\n})\nexport class SessionCompaniesModalComponent implements OnInit, AfterViewInit {\n  @ViewChild('modalRoot', { static: false })\n  modalRoot?: ElementRef;\n  @Input({ required: true }) sessionId!: string;\n  @Output() closed = new EventEmitter();\n\n  readonly loading = signal(false);\n  readonly data = signal(null);\n  readonly error = signal(null);\n\n  private readonly analyze = inject(AnalyzeSessionCompaniesUseCase);\n\n  ngOnInit(): void {\n    if (!this.sessionId) return;\n    this.loading.set(true);\n    this.analyze.execute(this.sessionId).subscribe({\n      next: (d) => {\n        this.data.set(d);\n      },\n      error: (e) => {\n        this.error.set(e?.message || 'Error');\n      },\n      complete: () => {\n        this.loading.set(false);\n      },\n    });\n  }\n\n  trackByTaxId = (_: number, item: any) => item?.tax_id || _;\n  isEmpty(obj: any) {\n    return (\n      !obj ||\n      (Array.isArray(obj) ? obj.length === 0 : Object.keys(obj).length === 0)\n    );\n  }\n\n  onBackdropClick() {\n    this.closed.emit();\n  }\n  @ViewChild('closeBtn') closeBtn?: ElementRef;\n  ngAfterViewInit() {\n    queueMicrotask(() => this.closeBtn?.nativeElement?.focus());\n  }\n\n  // Basic focus trap similar to files modal\n  onKeydown(event: KeyboardEvent) {\n    if (event.key !== 'Tab') return;\n    const root = this.modalRoot?.nativeElement;\n    if (!root) return;\n    const focusables = root.querySelectorAll(\n      'a[href], button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])',\n    );\n    if (!focusables.length) return;\n    const first = focusables[0];\n    const last = focusables[focusables.length - 1];\n    const active = document.activeElement as HTMLElement | null;\n    if (event.shiftKey) {\n      if (active === first) {\n        last.focus();\n        event.preventDefault();\n      }\n    } else if (active === last) {\n      first.focus();\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('document:keydown.escape')\n  onEsc() {\n    this.closed.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ \"CHAT.COMPANIES_ANALYSIS_TITLE\" | translate }}\n      \n        \n      \n    \n\n    \n      \n        {{ error() }}\n      \n      \n        \n          {{ \"CHAT.COMPANIES_ANALYSIS_EMPTY\" | translate }}\n        \n         0\" class=\"content\">\n          {{ \"CHAT.COMPANIES_ANALYSIS_COMPANIES\" | translate }}\n          \n            \n              \n                \n                  business\n                  RUC\n                \n                {{ c.tax_id }}\n              \n              \n                \n                  analytics\n                  {{ \"CHAT.COMPANY_SCORE\" | translate }}\n                \n                \n                  {{ s?.score ?? \"—\" }} ({{ s?.risk_class || \"N/D\" }})\n                  —\n                \n              \n              \n                \n                  lightbulb\n                  {{ \"CHAT.INSIGHTS\" | translate }}\n                \n                \n                  \n                    recommend\n                    {{ ins.credit_recommendation }}\n                  \n                  \n                    assessment\n                    {{ ins.risk_summary }}\n                  \n                  \n                    {{ k }}\n                    {{ w }}\n                  \n                \n              \n              \n                error\n                {{ c.error }}\n              \n            \n          \n\n          \n            {{ \"CHAT.AGGREGATE_SUMMARY\" | translate }}\n            {{ agg.overview }}\n            \n              \n                \n                  tag\n                  #\n                \n                \n                  business\n                  RUC\n                \n                \n                  analytics\n                  {{ \"CHAT.COMPANY_SCORE\" | translate }}\n                \n                \n                  warning\n                  {{ \"COMMON.RISK\" | translate }}\n                \n              \n              \n                {{ r.position ?? \"—\" }}\n                {{ r.tax_id }}\n                {{ r.score ?? \"—\" }}\n                {{ r.risk_class || \"—\" }}\n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n          autorenew\n        \n        \n          {{ \"COMMON.LOADING\" | translate }}...\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./session-companies-modal.component.css\n                \n                /* ============================================\n   MODERN COMPANIES MODAL - GLASSMORPHISM DESIGN\n   ============================================ */\n\n.modal-backdrop {\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(12px);\n  -webkit-backdrop-filter: blur(12px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.modal {\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.9) 0%, \n    hsl(var(--card) / 0.8) 100%);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  color: hsl(var(--card-foreground));\n  width: min(980px, 96vw);\n  max-height: 90vh;\n  border-radius: 1.5rem;\n  box-shadow: \n    0 25px 50px rgba(0, 0, 0, 0.25),\n    0 8px 32px rgba(0, 0, 0, 0.15),\n    inset 0 1px 0 hsl(var(--foreground) / 0.1);\n  display: flex;\n  flex-direction: column;\n  border: 1px solid hsl(var(--border) / 0.3);\n  position: relative;\n  overflow: hidden;\n  animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.modal::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.5) 50%, \n    transparent 100%);\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem 2rem;\n  border-bottom: 1px solid hsl(var(--border) / 0.3);\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.8) 0%, \n    hsl(var(--card) / 0.6) 100%);\n  position: relative;\n}\n\n.modal-header::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n}\n\n.modal-header h3 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.modal-header h3::before {\n  content: '🏢';\n  font-size: 1.5rem;\n}\n\n.modal-header .btn {\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.3) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border: 1px solid hsl(var(--border) / 0.2);\n  border-radius: 0.75rem;\n  padding: 0.5rem;\n  transition: all 0.3s ease;\n  color: hsl(var(--foreground));\n}\n\n.modal-header .btn:hover {\n  background: linear-gradient(135deg, \n    hsl(var(--destructive) / 0.15) 0%, \n    hsl(var(--destructive) / 0.05) 100%);\n  border-color: hsl(var(--destructive) / 0.3);\n  transform: scale(1.05);\n}\n\n.modal-body {\n  padding: 2rem;\n  overflow: auto;\n  flex: 1;\n}\n\n.empty,\n.loading,\n.error {\n  padding: 3rem 2rem;\n  text-align: center;\n  color: hsl(var(--muted-foreground));\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.1) 0%, \n    hsl(var(--muted) / 0.05) 100%);\n  border-radius: 1rem;\n  border: 1px solid hsl(var(--border) / 0.2);\n  position: relative;\n}\n\n.empty::before {\n  content: '🏢';\n  font-size: 3rem;\n  display: block;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.loading::before {\n  content: '⏳';\n  font-size: 3rem;\n  display: block;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n  animation: pulse 2s infinite;\n}\n\n.error {\n  background: linear-gradient(135deg, \n    hsl(var(--destructive) / 0.1) 0%, \n    hsl(var(--destructive) / 0.05) 100%);\n  border-color: hsl(var(--destructive) / 0.3);\n  color: hsl(var(--destructive));\n}\n\n.error::before {\n  content: '⚠️';\n  font-size: 3rem;\n  display: block;\n  margin-bottom: 1rem;\n}\n\n@keyframes pulse {\n  0%, 100% { opacity: 0.3; }\n  50% { opacity: 0.7; }\n}\n\n.content h4 {\n  font-size: 1.125rem;\n  font-weight: 700;\n  margin-bottom: 1.5rem;\n  color: hsl(var(--foreground));\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.content h4::before {\n  content: '📊';\n  font-size: 1.25rem;\n}\n\n.companies {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n  gap: 1.5rem;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  margin-bottom: 2rem;\n}\n\n.card {\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.6) 0%, \n    hsl(var(--card) / 0.4) 100%);\n  backdrop-filter: blur(15px);\n  -webkit-backdrop-filter: blur(15px);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.card:hover::before {\n  opacity: 1;\n}\n\n.card:hover {\n  transform: translateY(-4px);\n  border-color: hsl(var(--primary) / 0.4);\n  box-shadow: \n    0 16px 32px rgba(0, 0, 0, 0.15),\n    0 8px 16px hsl(var(--primary) / 0.1);\n}\n\n.row {\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  gap: 1rem;\n  padding: 0.75rem 0;\n  border-bottom: 1px solid hsl(var(--border) / 0.1);\n}\n\n.row:last-child {\n  border-bottom: none;\n}\n\n.row.head {\n  grid-template-columns: 40px 1fr 1fr 1fr;\n  font-weight: 700;\n  border-bottom: 1px solid hsl(var(--border) / 0.3);\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.2) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border-radius: 0.75rem;\n  padding: 1rem 1rem 1rem 1rem;\n  margin: -0.5rem -0.5rem 1rem -0.5rem;\n}\n\n.col.key {\n  color: hsl(var(--muted-foreground));\n  font-weight: 600;\n  font-size: 0.875rem;\n}\n\n.col.val {\n  color: hsl(var(--foreground));\n  font-weight: 500;\n}\n\n.ins-item {\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.1) 0%, \n    hsl(var(--primary) / 0.05) 100%);\n  border: 1px solid hsl(var(--primary) / 0.2);\n  border-radius: 0.5rem;\n  padding: 0.75rem;\n  margin-bottom: 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.4;\n}\n\n.ins-pills {\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n}\n\n.pill {\n  background: linear-gradient(135deg, \n    hsl(var(--secondary)) 0%, \n    hsl(var(--secondary) / 0.8) 100%);\n  color: hsl(var(--secondary-foreground));\n  padding: 0.375rem 0.75rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  font-weight: 600;\n  border: 1px solid hsl(var(--border) / 0.2);\n  transition: all 0.3s ease;\n}\n\n.pill:hover {\n  transform: scale(1.05);\n}\n\n.pill.warn {\n  background: linear-gradient(135deg, \n    hsl(var(--destructive) / 0.15) 0%, \n    hsl(var(--destructive) / 0.08) 100%);\n  border-color: hsl(var(--destructive) / 0.3);\n  color: hsl(var(--destructive));\n}\n\n.aggregate {\n  margin-top: 2rem;\n  border-top: 1px solid hsl(var(--border) / 0.3);\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.3) 0%, \n    hsl(var(--card) / 0.1) 100%);\n  border-radius: 1rem;\n  padding: 2rem 2rem 2rem 2rem;\n  position: relative;\n}\n\n.aggregate::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n}\n\n.aggregate h4 {\n  margin-bottom: 1.5rem;\n}\n\n.aggregate h4::before {\n  content: '📈';\n}\n\n.aggregate p {\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.2) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border-radius: 0.75rem;\n  padding: 1rem;\n  border: 1px solid hsl(var(--border) / 0.2);\n  line-height: 1.6;\n}\n\n.ranking {\n  background: linear-gradient(135deg, \n    hsl(var(--background) / 0.8) 0%, \n    hsl(var(--background) / 0.6) 100%);\n  border-radius: 0.75rem;\n  overflow: hidden;\n  border: 1px solid hsl(var(--border) / 0.2);\n}\n\n.ranking .row {\n  border-bottom: 1px solid hsl(var(--border) / 0.1);\n  padding: 1rem;\n  transition: background 0.3s ease;\n}\n\n.ranking .row:hover {\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.05) 0%, \n    hsl(var(--primary) / 0.02) 100%);\n}\n\n.ranking .row.head {\n  background: linear-gradient(135deg, \n    hsl(var(--primary) / 0.1) 0%, \n    hsl(var(--primary) / 0.05) 100%);\n  font-weight: 700;\n  color: hsl(var(--primary));\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 768px) {\n  .modal {\n    width: 95vw;\n    margin: 1rem;\n    border-radius: 1rem;\n  }\n  \n  .modal-header,\n  .modal-body {\n    padding: 1rem 1.5rem;\n  }\n  \n  .companies {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n  \n  .row {\n    grid-template-columns: 1fr;\n    gap: 0.5rem;\n  }\n  \n  .row.head {\n    grid-template-columns: 1fr;\n  }\n  \n  .col.key {\n    font-weight: 700;\n    margin-bottom: 0.25rem;\n  }\n  \n  .ins-pills {\n    gap: 0.25rem;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .modal,\n  .modal-backdrop,\n  .card {\n    animation: none !important;\n  }\n  \n  .card,\n  .pill,\n  .modal-header .btn {\n    transition: none !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \"CHAT.COMPANIES_ANALYSIS_TITLE\" | translate }}                                          {{ error() }}                              {{ \"CHAT.COMPANIES_ANALYSIS_EMPTY\" | translate }}                 0\" class=\"content\">          {{ \"CHAT.COMPANIES_ANALYSIS_COMPANIES\" | translate }}                                                                      business                  RUC                                {{ c.tax_id }}                                                              analytics                  {{ \"CHAT.COMPANY_SCORE\" | translate }}                                                  {{ s?.score ?? \"—\" }} ({{ s?.risk_class || \"N/D\" }})                  —                                                                              lightbulb                  {{ \"CHAT.INSIGHTS\" | translate }}                                                                      recommend                    {{ ins.credit_recommendation }}                                                        assessment                    {{ ins.risk_summary }}                                                        {{ k }}                    {{ w }}                                                                              error                {{ c.error }}                                                          {{ \"CHAT.AGGREGATE_SUMMARY\" | translate }}            {{ agg.overview }}                                                            tag                  #                                                  business                  RUC                                                  analytics                  {{ \"CHAT.COMPANY_SCORE\" | translate }}                                                  warning                  {{ \"COMMON.RISK\" | translate }}                                                            {{ r.position ?? \"—\" }}                {{ r.tax_id }}                {{ r.score ?? \"—\" }}                {{ r.risk_class || \"—\" }}                                                                                  autorenew                          {{ \"COMMON.LOADING\" | translate }}...                    '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionCompaniesModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionCompanyItem.html":{"url":"interfaces/SessionCompanyItem.html","title":"interface - SessionCompanyItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionCompanyItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/session-analysis.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dashboard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            insights\n                                        \n                                \n                                \n                                        \n                                            tax_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dashboard:         CompanyDashboardSummary | Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CompanyDashboardSummary | Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insights:         CompanyInsights | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CompanyInsights | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyDashboardSummary {\n  company?: any;\n  score?: {\n    score?: number;\n    risk_class?: string;\n    recommended_credit_limit?: number;\n  } | null;\n  contributions?: any;\n  scenarios?: any[];\n  financials?: any[];\n}\n\nexport interface CompanyInsights {\n  narrative?: string;\n  risk_summary?: string;\n  reputation?: string;\n  credit_recommendation?: string;\n  key_factors?: string[];\n  warnings?: string[];\n  suggested_actions?: string[];\n  opportunity_zones?: string[];\n  early_alerts?: string[];\n  data_quality_flags?: string[];\n}\n\nexport interface SessionCompanyItem {\n  tax_id: string;\n  dashboard?: CompanyDashboardSummary | Record;\n  insights?: CompanyInsights | null;\n  error?: string;\n}\n\nexport interface AggregateInsights {\n  overview?: string;\n  ranking?: Array;\n  common_opportunities?: string[];\n  common_risks?: string[];\n  diversification_comment?: string;\n  action_recommendations?: string[];\n}\n\nexport interface SessionCompaniesAnalysis {\n  session_id: string;\n  company_count: number;\n  companies: SessionCompanyItem[];\n  aggregate_insights?: AggregateInsights | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionEntry.html":{"url":"interfaces/SessionEntry.html","title":"interface - SessionEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionFilesModalComponent.html":{"url":"components/SessionFilesModalComponent.html","title":"component - SessionFilesModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionFilesModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/components/files/session-files-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-session-files-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./session-files-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./session-files-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                files\n                            \n                            \n                                    Private\n                                    Readonly\n                                listSessionFiles\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    \n                                    Optional\n                                modalRoot\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isImage\n                            \n                            \n                                isPdf\n                            \n                            \n                                    Private\n                                    Async\n                                loadFiles\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBackdropClick\n                            \n                            \n                                    \n                                onEsc\n                            \n                            \n                                onKeydown\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sessionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.escape\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sessionId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/files/session-files-modal.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/components/files/session-files-modal.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.escape\n                        \n                    \n                \n            \n            \n                \ndocument:keydown.escape()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:97\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isImage\n                        \n                    \n                \n            \n            \n                \nisImage(f: UploadedFileMeta)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                f\n                                            \n                                                            UploadedFileMeta\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPdf\n                        \n                    \n                \n            \n            \n                \nisPdf(f: UploadedFileMeta)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                f\n                                            \n                                                            UploadedFileMeta\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBackdropClick\n                        \n                    \n                \n            \n            \n                \nonBackdropClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onEsc\n                        \n                    \n                \n            \n            \n                \n                        \n                    onEsc()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.escape')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \nonKeydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/components/files/session-files-modal.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/files/session-files-modal.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        listSessionFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListSessionFilesUseCase\n\n                    \n                \n                \n                    \n                        Default value : inject(\n    ListSessionFilesUseCase,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/files/session-files-modal.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/files/session-files-modal.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modalRoot\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalRoot', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/components/files/session-files-modal.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  inject,\n  signal,\n  AfterViewInit,\n} from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport type { UploadedFileMeta } from '@core/ports';\nimport { ListSessionFilesUseCase } from '@core/use-cases/files/list-session-files.usecase';\n\n@Component({\n  selector: 'app-session-files-modal',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, TranslateModule],\n  templateUrl: './session-files-modal.component.html',\n  styleUrls: ['./session-files-modal.component.css'],\n})\nexport class SessionFilesModalComponent implements OnInit, AfterViewInit {\n  @ViewChild('modalRoot', { static: false })\n  modalRoot?: ElementRef;\n  @Input({ required: true }) sessionId!: string;\n  @Output() closed = new EventEmitter();\n  readonly loading = signal(false);\n  readonly files = signal([]);\n\n  private readonly listSessionFiles: ListSessionFilesUseCase = inject(\n    ListSessionFilesUseCase,\n  );\n\n  ngOnInit(): void {\n    if (!this.sessionId) return;\n    this.loading.set(true);\n    this.loadFiles();\n  }\n\n  private async loadFiles() {\n    try {\n      const items = await this.listSessionFiles.execute(this.sessionId);\n      this.files.set(items ?? []);\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  isImage(f: UploadedFileMeta) {\n    return f.type_file === 'image';\n  }\n  isPdf(f: UploadedFileMeta) {\n    return f.type_file === 'pdf';\n  }\n  open(url: string) {\n    window.open(url, '_blank', 'noopener');\n  }\n  onBackdropClick() {\n    this.closed.emit();\n  }\n\n  // Basic focus trap to keep TAB inside modal\n  onKeydown(event: KeyboardEvent) {\n    if (event.key !== 'Tab') return;\n    const root = this.modalRoot?.nativeElement;\n    if (!root) return;\n    const focusables = root.querySelectorAll(\n      'a[href], button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])',\n    );\n    if (!focusables.length) return;\n    const first = focusables[0];\n    const last = focusables[focusables.length - 1];\n    const active = document.activeElement as HTMLElement | null;\n    if (event.shiftKey) {\n      if (active === first) {\n        last.focus();\n        event.preventDefault();\n      }\n    } else if (active === last) {\n      first.focus();\n      event.preventDefault();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Move initial focus to close button for accessibility\n    const closeBtn = this.modalRoot?.nativeElement.querySelector('button');\n    (closeBtn as HTMLElement | null)?.focus?.();\n  }\n\n  @HostListener('document:keydown.escape')\n  onEsc() {\n    this.closed.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ \"CHAT.ATTACHMENTS_TITLE\" | translate }}\n      \n        \n      \n    \n\n    \n      \n        {{ \"CHAT.ATTACHMENTS_EMPTY\" | translate }}\n      \n      \n        \n          \n            \n            {{\n              isPdf(f) ? \"picture_as_pdf\" : \"description\"\n            }}\n          \n          \n            {{ f.filename }}\n            {{ f.content_type }}\n          \n          \n            \n              open_in_new\n              {{ \"COMMON.OPEN\" | translate }}\n            \n            \n              download\n              {{ \"FILES_PAGE.DOWNLOAD\" | translate }}\n            \n          \n        \n      \n    \n\n    \n      \n        {{ \"COMMON.LOADING\" | translate }}…\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./session-files-modal.component.css\n                \n                /* ============================================\n   MODERN FILES MODAL - GLASSMORPHISM DESIGN\n   ============================================ */\n\n.modal-backdrop {\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(12px);\n  -webkit-backdrop-filter: blur(12px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.modal {\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.9) 0%, \n    hsl(var(--card) / 0.8) 100%);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  color: hsl(var(--card-foreground));\n  width: min(920px, 96vw);\n  max-height: 90vh;\n  border-radius: 1.5rem;\n  box-shadow: \n    0 25px 50px rgba(0, 0, 0, 0.25),\n    0 8px 32px rgba(0, 0, 0, 0.15),\n    inset 0 1px 0 hsl(var(--foreground) / 0.1);\n  display: flex;\n  flex-direction: column;\n  border: 1px solid hsl(var(--border) / 0.3);\n  position: relative;\n  overflow: hidden;\n  animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.modal::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.5) 50%, \n    transparent 100%);\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem 2rem;\n  border-bottom: 1px solid hsl(var(--border) / 0.3);\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.8) 0%, \n    hsl(var(--card) / 0.6) 100%);\n  position: relative;\n}\n\n.modal-header::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n}\n\n.modal-header h3 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.modal-header h3::before {\n  content: '📁';\n  font-size: 1.5rem;\n}\n\n.modal-header .btn {\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.3) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  border: 1px solid hsl(var(--border) / 0.2);\n  border-radius: 0.75rem;\n  padding: 0.5rem;\n  transition: all 0.3s ease;\n  color: hsl(var(--foreground));\n}\n\n.modal-header .btn:hover {\n  background: linear-gradient(135deg, \n    hsl(var(--destructive) / 0.15) 0%, \n    hsl(var(--destructive) / 0.05) 100%);\n  border-color: hsl(var(--destructive) / 0.3);\n  transform: scale(1.05);\n}\n\n.modal-body {\n  padding: 2rem;\n  overflow: auto;\n  flex: 1;\n}\n\n.files-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  gap: 1.5rem;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n.file-item {\n  background: linear-gradient(135deg, \n    hsl(var(--card) / 0.6) 0%, \n    hsl(var(--card) / 0.4) 100%);\n  backdrop-filter: blur(15px);\n  -webkit-backdrop-filter: blur(15px);\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n}\n\n.file-item::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(var(--primary) / 0.3) 50%, \n    transparent 100%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.file-item:hover::before {\n  opacity: 1;\n}\n\n.file-item:hover {\n  transform: translateY(-4px) scale(1.02);\n  border-color: hsl(var(--primary) / 0.4);\n  box-shadow: \n    0 16px 32px rgba(0, 0, 0, 0.15),\n    0 8px 16px hsl(var(--primary) / 0.1);\n}\n\n.thumb {\n  height: 160px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-bottom: 1px solid hsl(var(--border) / 0.2);\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.2) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  position: relative;\n}\n\n.thumb::after {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background: linear-gradient(45deg, \n    transparent 0%, \n    rgba(255, 255, 255, 0.05) 50%, \n    transparent 100%);\n  pointer-events: none;\n}\n\n.thumb img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.file-item:hover .thumb img {\n  transform: scale(1.05);\n}\n\n.thumb .mat-icon {\n  font-size: 3rem;\n  width: 3rem;\n  height: 3rem;\n  opacity: 0.7;\n  color: hsl(var(--primary));\n  transition: all 0.3s ease;\n}\n\n.file-item:hover .thumb .mat-icon {\n  transform: scale(1.1);\n  opacity: 0.9;\n}\n\n.meta {\n  padding: 1rem 1.25rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  flex: 1;\n}\n\n.name {\n  font-weight: 600;\n  font-size: 0.9rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: hsl(var(--foreground));\n}\n\n.type {\n  font-size: 0.75rem;\n  color: hsl(var(--muted-foreground));\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.2) 0%, \n    hsl(var(--muted) / 0.1) 100%);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n  border: 1px solid hsl(var(--border) / 0.2);\n  width: fit-content;\n}\n\n.actions {\n  display: flex;\n  gap: 0.75rem;\n  padding: 0 1.25rem 1.25rem;\n}\n\n.btn {\n  background: linear-gradient(135deg, \n    hsl(var(--primary)) 0%, \n    hsl(var(--primary) / 0.8) 100%);\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.75rem;\n  text-decoration: none;\n  border: none;\n  font-size: 0.875rem;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  flex: 1;\n  text-align: center;\n  box-shadow: 0 2px 8px hsl(var(--primary) / 0.3);\n}\n\n.btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    rgba(255, 255, 255, 0.2) 50%, \n    transparent 100%);\n  transition: left 0.5s ease;\n}\n\n.btn:hover::before {\n  left: 100%;\n}\n\n.btn:hover {\n  transform: translateY(-2px);\n  box-shadow: \n    0 6px 16px hsl(var(--primary) / 0.4),\n    0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.btn:nth-child(2) {\n  background: linear-gradient(135deg, \n    hsl(var(--secondary)) 0%, \n    hsl(var(--secondary) / 0.8) 100%);\n  color: hsl(var(--secondary-foreground));\n  box-shadow: 0 2px 8px hsl(var(--secondary) / 0.3);\n}\n\n.btn:nth-child(2):hover {\n  box-shadow: \n    0 6px 16px hsl(var(--secondary) / 0.4),\n    0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.empty,\n.loading {\n  padding: 3rem 2rem;\n  text-align: center;\n  color: hsl(var(--muted-foreground));\n  background: linear-gradient(135deg, \n    hsl(var(--muted) / 0.1) 0%, \n    hsl(var(--muted) / 0.05) 100%);\n  border-radius: 1rem;\n  border: 1px solid hsl(var(--border) / 0.2);\n  position: relative;\n}\n\n.empty::before,\n.loading::before {\n  content: '📂';\n  font-size: 3rem;\n  display: block;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.loading::before {\n  content: '⏳';\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { opacity: 0.3; }\n  50% { opacity: 0.7; }\n}\n\n/* ============================================\n   RESPONSIVE DESIGN\n   ============================================ */\n\n@media (max-width: 768px) {\n  .modal {\n    width: 95vw;\n    margin: 1rem;\n    border-radius: 1rem;\n  }\n  \n  .modal-header,\n  .modal-body {\n    padding: 1rem 1.5rem;\n  }\n  \n  .files-grid {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n  \n  .actions {\n    flex-direction: column;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .modal,\n  .modal-backdrop,\n  .file-item {\n    animation: none !important;\n  }\n  \n  .file-item,\n  .btn,\n  .thumb img {\n    transition: none !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \"CHAT.ATTACHMENTS_TITLE\" | translate }}                                          {{ \"CHAT.ATTACHMENTS_EMPTY\" | translate }}                                                      {{              isPdf(f) ? \"picture_as_pdf\" : \"description\"            }}                                {{ f.filename }}            {{ f.content_type }}                                              open_in_new              {{ \"COMMON.OPEN\" | translate }}                                      download              {{ \"FILES_PAGE.DOWNLOAD\" | translate }}                                                          {{ \"COMMON.LOADING\" | translate }}…            '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionFilesModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsEventsService.html":{"url":"injectables/SessionsEventsService.html","title":"injectable - SessionsEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/sessions-events.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Lightweight event bus to notify when sessions should refresh.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                companiesModal$\n                            \n                            \n                                    Private\n                                    Readonly\n                                filesModal$\n                            \n                            \n                                    Private\n                                    Readonly\n                                refresh$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sidebarControl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCompaniesModal\n                            \n                            \n                                closeFilesModal\n                            \n                            \n                                hideSidebar\n                            \n                            \n                                onCompaniesModal\n                            \n                            \n                                onFilesModal\n                            \n                            \n                                onRefresh\n                            \n                            \n                                onSidebarControl\n                            \n                            \n                                openCompaniesModal\n                            \n                            \n                                openFilesModal\n                            \n                            \n                                restoreSidebar\n                            \n                            \n                                triggerRefresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCompaniesModal\n                        \n                    \n                \n            \n            \n                \ncloseCompaniesModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeFilesModal\n                        \n                    \n                \n            \n            \n                \ncloseFilesModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSidebar\n                        \n                    \n                \n            \n            \n                \nhideSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCompaniesModal\n                        \n                    \n                \n            \n            \n                \nonCompaniesModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilesModal\n                        \n                    \n                \n            \n            \n                \nonFilesModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRefresh\n                        \n                    \n                \n            \n            \n                \nonRefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSidebarControl\n                        \n                    \n                \n            \n            \n                \nonSidebarControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCompaniesModal\n                        \n                    \n                \n            \n            \n                \nopenCompaniesModal(sessionId?: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFilesModal\n                        \n                    \n                \n            \n            \n                \nopenFilesModal(sessionId?: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreSidebar\n                        \n                    \n                \n            \n            \n                \nrestoreSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerRefresh\n                        \n                    \n                \n            \n            \n                \ntriggerRefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions-events.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        companiesModal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sessions-events.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        filesModal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sessions-events.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        refresh$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sessions-events.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sidebarControl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sessions-events.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Lightweight event bus to notify when sessions should refresh.\n */\n@Injectable({ providedIn: 'root' })\nexport class SessionsEventsService {\n  private readonly refresh$ = new Subject();\n  private readonly filesModal$ = new Subject();\n  private readonly companiesModal$ = new Subject();\n  private readonly sidebarControl$ = new Subject();\n\n  onRefresh() {\n    return this.refresh$.asObservable();\n  }\n\n  triggerRefresh() {\n    this.refresh$.next();\n  }\n\n  onFilesModal() {\n    return this.filesModal$.asObservable();\n  }\n\n  openFilesModal(sessionId?: string | null) {\n    this.sidebarControl$.next({ action: 'hide' });\n    this.filesModal$.next({ open: true, sessionId });\n  }\n\n  closeFilesModal() {\n    this.filesModal$.next({ open: false });\n    this.sidebarControl$.next({ action: 'restore' });\n  }\n\n  onCompaniesModal() {\n    return this.companiesModal$.asObservable();\n  }\n\n  openCompaniesModal(sessionId?: string | null) {\n    this.sidebarControl$.next({ action: 'hide' });\n    this.companiesModal$.next({ open: true, sessionId });\n  }\n\n  closeCompaniesModal() {\n    this.companiesModal$.next({ open: false });\n    this.sidebarControl$.next({ action: 'restore' });\n  }\n\n  onSidebarControl() {\n    return this.sidebarControl$.asObservable();\n  }\n\n  hideSidebar() {\n    this.sidebarControl$.next({ action: 'hide' });\n  }\n\n  restoreSidebar() {\n    this.sidebarControl$.next({ action: 'restore' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionsPort.html":{"url":"interfaces/SessionsPort.html","title":"interface - SessionsPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionsPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/sessions.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        analyzeCompanies\n                                    \n                                \n                                \n                                    \n                                        deleteSession\n                                    \n                                \n                                \n                                    \n                                        getSession\n                                    \n                                \n                                \n                                    \n                                        getSessions\n                                    \n                                \n                                \n                                    \n                                        sendMessage\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        analyzeCompanies\n                        \n                    \n                \n            \n            \n                \nanalyzeCompanies(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/sessions.port.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/sessions.port.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/sessions.port.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessions\n                        \n                    \n                \n            \n            \n                \ngetSessions(agentId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/sessions.port.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/ports/sessions.port.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport type { SessionEntry, ChatEntry } from '@core/models';\nimport type { SessionCompaniesAnalysis } from '@core/models/session-analysis';\n\nexport interface SessionsPort {\n  getSessions(\n    agentId: string,\n    params?: { page?: number; limit?: number },\n  ): Observable;\n  getSession(\n    agentId: string,\n    sessionId: string,\n  ): Observable;\n  deleteSession(agentId: string, sessionId: string): Observable;\n  sendMessage(\n    agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n    },\n  ): Observable;\n  analyzeCompanies(\n    agentId: string,\n    sessionId: string,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                base\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                analyzeCompanies\n                            \n                            \n                                deleteSession\n                            \n                            \n                                getSession\n                            \n                            \n                                getSessions\n                            \n                            \n                                    Private\n                                mapMessagesToChats\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/sessions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        analyzeCompanies\n                        \n                    \n                \n            \n            \n                \nanalyzeCompanies(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(agentId: string, sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessions\n                        \n                    \n                \n            \n            \n                \ngetSessions(agentId: string, params?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapMessagesToChats\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapMessagesToChats(items: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatEntry[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sessions.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sessions.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, of, switchMap } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport type { SessionEntry, ChatEntry } from '@core/models';\nimport type { SessionsPort } from '@core/ports';\nimport type { SessionCompaniesAnalysis } from '@core/models/session-analysis';\n\n@Injectable({ providedIn: 'root' })\nexport class SessionsService implements SessionsPort {\n  private readonly base = environment.baseUrl;\n\n  constructor(private readonly http: HttpClient) {}\n\n  // agentId is ignored in backend; kept for API compatibility with UI\n  getSessions(\n    agentId: string,\n    params?: { page?: number; limit?: number },\n  ): Observable {\n    const url = `${this.base}/agent/sessions`;\n    return this.http.get(url, { params: (params as any) || {} }).pipe(\n      map((data: any) => {\n        let array: any[] = [];\n        if (Array.isArray(data)) array = data;\n        else if (Array.isArray(data?.results)) array = data.results;\n        else if (Array.isArray(data?.sessions)) array = data.sessions;\n\n        const sessions: SessionEntry[] = (array || []).map((s: any) => ({\n          session_id: s.session_id,\n          title: s.title || '',\n          summary: s.summary ?? s.resume ?? undefined,\n          created_at: toEpochSeconds(s.created_at),\n          updated_at: s.updated_at ? toEpochSeconds(s.updated_at) : undefined,\n        }));\n\n        return sessions;\n      }),\n    );\n  }\n\n  getSession(\n    agentId: string,\n    sessionId: string,\n  ): Observable {\n    const url = `${this.base}/agent/sessions/${sessionId}/messages`;\n    return this.http.get(url).pipe(\n      map((data: any) => {\n        let items: any[] = [];\n        if (Array.isArray(data)) items = data;\n        else if (Array.isArray(data?.results)) items = data.results;\n        else if (Array.isArray(data?.messages)) items = data.messages;\n        else if (Array.isArray(data?.chats)) items = data.chats;\n\n        const chats = this.mapMessagesToChats(items);\n        return { chats };\n      }),\n    );\n  }\n\n  sendMessage(\n    agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n    },\n  ): Observable {\n    const hasBinary = !!(\n      payload.audioFile ||\n      (payload.files && payload.files.length)\n    );\n    const creating = !payload.session_id;\n\n    // Candidatos (orden) dependiendo si existe sesión\n    const endpoints: string[] = creating\n      ? [\n          `${this.base}/agent/message`, // probable endpoint correcto (equivalente al stream pero sin /stream)\n          `${this.base}/agent/messages`,\n          `${this.base}/agent/sessions/messages`,\n        ]\n      : [\n          `${this.base}/agent/sessions/${payload.session_id}/messages`,\n          `${this.base}/agent/message`,\n          `${this.base}/agent/messages`,\n          `${this.base}/agent/sessions/${payload.session_id}/message`,\n        ];\n\n    const buildFormData = () => {\n      const fd = new FormData();\n      if (payload.message) {\n        fd.append('message', payload.message); // compat clave antigua\n        fd.append('content', payload.message); // clave usada en SSE\n      }\n      if (payload.user_id) fd.append('user_id', payload.user_id);\n      if (payload.session_id) fd.append('session_id', payload.session_id);\n      if (payload.audioFile) fd.append('audio', payload.audioFile);\n      payload.files?.forEach((f, i) =>\n        fd.append('files', f, f.name || `file-${i}`),\n      );\n      return fd;\n    };\n    const buildJson = () => ({\n      message: payload.message, // legado\n      content: payload.message, // alineado con endpoint de stream\n      user_id: payload.user_id,\n      session_id: payload.session_id,\n    });\n    const baseBody: any = hasBinary ? buildFormData() : buildJson();\n\n    let lastStructuredError: any = null;\n\n    const tryNext = (idx: number): Observable => {\n      if (idx >= endpoints.length) {\n        return of({\n          error: true,\n          message:\n            'No se pudo enviar el mensaje (fallaron todos los endpoints) ',\n          lastError: lastStructuredError,\n        });\n      }\n      const url = endpoints[idx];\n      return this.http.post(url, baseBody).pipe(\n        catchError((err) => {\n          if ([404, 405].includes(err?.status)) {\n            lastStructuredError = {\n              status: err.status,\n              url,\n              bodyKeys: hasBinary ? 'FormData' : Object.keys(baseBody),\n            };\n            return tryNext(idx + 1);\n          }\n          return of({\n            error: true,\n            message: 'Error enviando mensaje',\n            status: err?.status,\n            url,\n          });\n        }),\n      );\n    };\n\n    return tryNext(0).pipe(\n      switchMap((resp: any) => {\n        if (creating && resp && !payload.session_id && resp.session_id) {\n          return of({ ...resp, created_new_session: true });\n        }\n        return of(resp);\n      }),\n    );\n  }\n\n  deleteSession(agentId: string, sessionId: string): Observable {\n    const url = `${this.base}/agent/sessions/${sessionId}`;\n    return this.http.delete(url);\n  }\n\n  analyzeCompanies(agentId: string, sessionId: string) {\n    const url = `${this.base}/agent/sessions/${sessionId}/companies/analysis`;\n    return this.http.get(url);\n  }\n\n  // ---- Internal helpers ----\n  private mapMessagesToChats(items: any[]): ChatEntry[] {\n    const sorted = [...(items || [])].sort(\n      (a, b) => toMs(a?.created_at) - toMs(b?.created_at),\n    );\n\n    const chats: ChatEntry[] = [];\n    let idx = 0;\n\n    while (idx  1e12 ? value : value * 1000;\n  }\n  const t = Date.parse(value);\n  return Number.isFinite(t) ? t : 0;\n}\n\nfunction toEpochSeconds(value: any): number {\n  const ms = toMs(value);\n  return Math.floor(ms / 1000);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellLayout.html":{"url":"components/ShellLayout.html","title":"component - ShellLayout","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/layouts/shell/shell.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shell\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterOutlet\n                                SidebarComponent\n                            MatIconModule\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./shell.css\n            \n\n\n\n            \n                templateUrl\n                ./shell.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bg\n                            \n                            \n                                    \n                                    Optional\n                                cancelBtn\n                            \n                            \n                                    Private\n                                    Readonly\n                                cdr\n                            \n                            \n                                    Private\n                                    Readonly\n                                chatFacade\n                            \n                            \n                                    \n                                    Optional\n                                confirmBtn\n                            \n                            \n                                    \n                                    Optional\n                                deleteDialog\n                            \n                            \n                                isSidebarOpen\n                            \n                            \n                                    Private\n                                lastFocused\n                            \n                            \n                                    Optional\n                                pendingDelete\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                selectedSessionId\n                            \n                            \n                                    Private\n                                    Readonly\n                                sessionsEvents\n                            \n                            \n                                    Private\n                                sidebarStateBeforeModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDeleteModal\n                            \n                            \n                                closeSidebar\n                            \n                            \n                                confirmDeleteFromShell\n                            \n                            \n                                    Private\n                                getSavedSidebarState\n                            \n                            \n                                    Private\n                                isDesktop\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDialogKeydown\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                openDeleteModal\n                            \n                            \n                                openSessionCompaniesFromShell\n                            \n                            \n                                openSessionFilesFromShell\n                            \n                            \n                                    Private\n                                persistSidebarState\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:187\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDeleteModal\n                        \n                    \n                \n            \n            \n                \ncloseDeleteModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeSidebar\n                        \n                    \n                \n            \n            \n                \ncloseSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmDeleteFromShell\n                        \n                    \n                \n            \n            \n                \nconfirmDeleteFromShell()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSavedSidebarState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSavedSidebarState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:196\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     boolean | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDesktop\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogKeydown\n                        \n                    \n                \n            \n            \n                \nonDialogKeydown(e: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize')\n                \n            \n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteModal\n                        \n                    \n                \n            \n            \n                \nopenDeleteModal(session: SessionEntry)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                session\n                                            \n                                                            SessionEntry\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSessionCompaniesFromShell\n                        \n                    \n                \n            \n            \n                \nopenSessionCompaniesFromShell()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSessionFilesFromShell\n                        \n                    \n                \n            \n            \n                \nopenSessionFilesFromShell()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        persistSidebarState\n                        \n                    \n                \n            \n            \n                \n                        \n                    persistSidebarState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:209\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/layouts/shell/shell.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BackgroundService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        cancelBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('cancelBtn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chatFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        confirmBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('confirmBtn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deleteDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('deleteDialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastFocused\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pendingDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionEntry\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sessionsEvents\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SessionsEventsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sidebarStateBeforeModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/layouts/shell/shell.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  inject,\n  ElementRef,\n  ViewChild,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink, RouterOutlet, Router, NavigationEnd } from '@angular/router';\nimport { SidebarComponent } from '../../components/sidebar/sidebar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SessionsEventsService } from '@infrastructure/services/sessions-events.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport type { SessionEntry } from '@core/models';\nimport { ChatFacade } from '@app/application/chat/chat.facade';\nimport { BackgroundService } from '@infrastructure/services/background.service';\n\n@Component({\n  selector: 'app-shell',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterLink,\n    RouterOutlet,\n    SidebarComponent,\n    MatIconModule,\n    TranslateModule,\n  ],\n  templateUrl: './shell.html',\n  styleUrls: ['./shell.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShellLayout implements OnInit {\n  // Mobile sidebar state\n  isSidebarOpen = false;\n  private sidebarStateBeforeModal = false; // Recordar estado anterior\n  private readonly router = inject(Router);\n  private readonly sessionsEvents = inject(SessionsEventsService);\n  private readonly chatFacade = inject(ChatFacade);\n  private readonly bg = inject(BackgroundService);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private lastFocused: HTMLElement | null = null;\n  // Current session id propagated by chat page via route; optional\n  selectedSessionId: string | null = null;\n\n  // Global delete modal state\n  pendingDelete?: SessionEntry;\n  @ViewChild('deleteDialog') deleteDialog?: ElementRef;\n  @ViewChild('cancelBtn') cancelBtn?: ElementRef;\n  @ViewChild('confirmBtn') confirmBtn?: ElementRef;\n\n  toggleSidebar() {\n    this.isSidebarOpen = !this.isSidebarOpen;\n    // Persist preference (desktop)\n    this.persistSidebarState();\n  }\n\n  closeSidebar() {\n    this.isSidebarOpen = false;\n    // Do not persist on mobile close via overlay; but safe to persist anyway\n    this.persistSidebarState();\n  }\n\n  ngOnInit() {\n    // Open by default on desktop, closed on mobile\n    try {\n      const isDesktop =\n        typeof window !== 'undefined' &&\n        window.matchMedia('(min-width: 768px)').matches;\n      if (isDesktop) {\n        const saved = this.getSavedSidebarState();\n        this.isSidebarOpen = saved ?? true;\n      } else {\n        this.isSidebarOpen = false;\n      }\n    } catch {}\n    \n    // Initialize background defaults early\n    queueMicrotask(() => this.bg.init());\n    // Ensure sessions list tries to load at app start (helps after F5 on deep links)\n    queueMicrotask(() => this.sessionsEvents.triggerRefresh());\n\n    // Close overlay on navigation when on mobile\n    this.router.events.subscribe((ev) => {\n      if (ev instanceof NavigationEnd) {\n        if (!this.isDesktop()) this.isSidebarOpen = false;\n      }\n    });\n\n    // Manejar eventos de control del sidebar desde modales\n    this.sessionsEvents.onSidebarControl().subscribe((event) => {\n      if (event.action === 'hide') {\n        // Guardar estado actual antes de ocultar\n        this.sidebarStateBeforeModal = this.isSidebarOpen;\n        this.isSidebarOpen = false;\n        this.cdr.markForCheck(); // Forzar detección de cambios\n      } else if (event.action === 'restore') {\n        // Restaurar estado anterior\n        this.isSidebarOpen = this.sidebarStateBeforeModal;\n        this.cdr.markForCheck(); // Forzar detección de cambios\n      }\n    });\n  }\n\n  // Handle confirm at layout level to ensure modal is centered globally\n  confirmDeleteFromShell() {\n    const s = this.pendingDelete;\n    if (!s) return;\n    this.chatFacade.deleteSession(s.session_id).subscribe({\n      next: () => {\n        // refresh sessions list globally\n        this.sessionsEvents.triggerRefresh();\n      },\n      complete: () => {\n        this.closeDeleteModal();\n      },\n      error: () => {\n        this.closeDeleteModal();\n      },\n    });\n  }\n\n  openDeleteModal(session: SessionEntry) {\n    this.pendingDelete = session;\n    // remember the element that opened the modal to restore focus on close\n    try {\n      this.lastFocused = (document.activeElement as HTMLElement) ?? null;\n    } catch {\n      this.lastFocused = null;\n    }\n    // queue focus to cancel button for accessibility\n    queueMicrotask(() => this.cancelBtn?.nativeElement?.focus());\n  }\n\n  closeDeleteModal() {\n    this.pendingDelete = undefined;\n    // restore focus to the trigger element\n    queueMicrotask(() => {\n      try {\n        this.lastFocused?.focus?.();\n      } catch {}\n      this.lastFocused = null;\n    });\n  }\n\n  onDialogKeydown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') return;\n    const cancel = this.cancelBtn?.nativeElement;\n    const confirm = this.confirmBtn?.nativeElement;\n    if (!cancel || !confirm) return;\n    const active = document.activeElement as HTMLElement | null;\n    const shift = e.shiftKey;\n    if (!shift && active === confirm) {\n      e.preventDefault();\n      cancel.focus();\n    } else if (shift && active === cancel) {\n      e.preventDefault();\n      confirm.focus();\n    }\n  }\n\n  // Header button: open files modal via event bus\n  openSessionFilesFromShell() {\n    this.sessionsEvents.openFilesModal(this.selectedSessionId);\n  }\n\n  // Header button: open companies analysis modal via event bus\n  openSessionCompaniesFromShell() {\n    this.sessionsEvents.openCompaniesModal(this.selectedSessionId);\n  }\n\n  private isDesktop(): boolean {\n    try {\n      return (\n        typeof window !== 'undefined' &&\n        window.matchMedia('(min-width: 768px)').matches\n      );\n    } catch {\n      return true;\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if (this.isDesktop()) {\n      const saved = this.getSavedSidebarState();\n      this.isSidebarOpen = saved ?? true;\n    } else {\n      this.isSidebarOpen = false;\n    }\n  }\n\n  private getSavedSidebarState(): boolean | null {\n    try {\n      const v =\n        typeof window !== 'undefined'\n          ? window.localStorage.getItem('chatSidebarOpen')\n          : null;\n      if (v == null) return null;\n      return v === '1';\n    } catch {\n      return null;\n    }\n  }\n\n  private persistSidebarState() {\n    try {\n      typeof window !== 'undefined' &&\n        window.localStorage.setItem(\n          'chatSidebarOpen',\n          this.isSidebarOpen ? '1' : '0',\n        );\n    } catch {\n      /* ignore */\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n  \n  \n    \n    \n      \n    \n  \n\n  \n    \n    \n      \n        \n          \n        \n        \n          \n            \n            {{ \"COMMON.HOME\" | translate }}\n          \n          \n            \n            {{\n              \"CHAT.ATTACHMENTS_VIEW\" | translate\n              }}\n          \n          \n            \n            {{\n              \"COMMON.COMPANIES\" | translate\n              }}\n          \n        \n        \n          \n            \n            \n          \n        \n      \n    \n\n    \n    \n      \n    \n  \n\n  \n  \n    \n      \n        {{ \"SIDEBAR.DELETE_TITLE\" | translate }}\n        \n          \n        \n      \n      \n        \n          warning\n          {{ \"SIDEBAR.DELETE_TEXT\" | translate }}\n        \n      \n      \n        \n          close\n          {{ \"SIDEBAR.CANCEL\" | translate }}\n        \n        \n          delete\n          {{ \"SIDEBAR.CONFIRM\" | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./shell.css\n                \n                .flex {\n  display: flex;\n}\n\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.flex-1 {\n  flex: 1;\n}\n\n.overflow-y-auto {\n  overflow-y: auto;\n}\n\n/* Responsive helpers for sidebar transitions (tailwind-like classes subset) */\n.fixed {\n  position: fixed;\n}\n\n.inset-0 {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.z-40 {\n  z-index: 40;\n}\n\n.z-50 {\n  z-index: 50;\n}\n\n.transform {\n  transform: translateX(0);\n}\n\n.transition-transform {\n  transition: transform 0.2s cubic-bezier(0, 0, 0.2, 1);\n}\n\n.duration-200 {\n  transition-duration: 0.2s;\n}\n\n.-translate-x-full {\n  transform: translateX(-100%);\n}\n\n.translate-x-0 {\n  transform: translateX(0);\n}\n\n.md\\:hidden {\n  display: none;\n}\n\n.md\\:w-72 {\n  width: 18rem;\n}\n\n.md\\:relative {\n  position: relative;\n}\n\n.w-0 {\n  width: 0;\n}\n\n.left-0 {\n  left: 0;\n}\n\n.inset-y-0 {\n  top: 0;\n  bottom: 0;\n}\n\n.sticky {\n  position: sticky;\n}\n\n.top-0 {\n  top: 0;\n}\n\n.px-3 {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.bg-black\\/50 {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n/* Sidebar responsive visibility to avoid class purge issues */\n.desktop-sidebar {\n  display: none;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  align-self: flex-start;\n  width: 18rem; /* w-72 equivalent */\n  min-width: 0; /* Allow shrinking to 0 */\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  z-index: 10;\n}\n\n.desktop-sidebar.hidden {\n  width: 0 !important;\n  min-width: 0 !important;\n  opacity: 0;\n  pointer-events: none;\n}\n\n.mobile-overlay {\n  display: block;\n}\n\n@media (min-width: 768px) {\n  .desktop-sidebar {\n    display: block;\n  }\n\n  .mobile-overlay {\n    display: none;\n  }\n}\n\n/* Main content smooth transition when sidebar toggles */\nmain.flex-1 {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  min-width: 0; /* Allow shrinking */\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* Page content area styling */\n.flex-1.min-h-0.overflow-hidden {\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\n/* Utility */\n.hidden {\n  display: none !important;\n}\n\n/* Frosted surfaces */\n.sidebar-surface {\n  height: 100vh;\n  width: 18rem; /* Fixed width to maintain structure */\n  min-width: 18rem;\n  /* Blur-only: transparent to let global background show through */\n  background-color: transparent;\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-right: 1px solid hsl(var(--border) / 0.5);\n  position: sticky;\n  top: 0;\n  overflow-y: auto;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.desktop-sidebar.hidden .sidebar-surface {\n  width: 0;\n  min-width: 0;\n  border-right: none;\n  opacity: 0;\n}\n\n.overlay-backdrop {\n  background-color: hsl(var(--background) / 0.35);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n}\n\n.topbar-surface {\n  position: sticky;\n  top: 0;\n  z-index: 30;\n  background: linear-gradient(\n    135deg,\n    hsl(var(--background) / 0.9) 0%,\n    hsl(var(--background) / 0.7) 50%,\n    hsl(var(--background) / 0.8) 100%\n  );\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border-bottom: 1px solid hsl(var(--border) / 0.3);\n  box-shadow: \n    0 4px 32px hsl(var(--primary) / 0.1),\n    inset 0 1px 0 hsl(var(--foreground) / 0.1);\n}\n\n.topbar-surface::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    hsl(var(--primary) / 0.3) 20%,\n    hsl(var(--primary) / 0.5) 50%,\n    hsl(var(--primary) / 0.3) 80%,\n    transparent 100%\n  );\n}\n\n/* Topbar buttons styling */\n.topbar-surface .btn {\n  position: relative;\n  background: linear-gradient(\n    135deg,\n    hsl(var(--background) / 0.6) 0%,\n    hsl(var(--background) / 0.3) 100%\n  );\n  border: 1px solid hsl(var(--border) / 0.4);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n}\n\n.topbar-surface .btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    hsl(var(--primary) / 0.1) 50%,\n    transparent 100%\n  );\n  transition: left 0.5s ease;\n}\n\n.topbar-surface .btn:hover {\n  background: linear-gradient(\n    135deg,\n    hsl(var(--primary) / 0.15) 0%,\n    hsl(var(--primary) / 0.05) 100%\n  );\n  border-color: hsl(var(--primary) / 0.4);\n  transform: translateY(-1px);\n  box-shadow: \n    0 8px 25px hsl(var(--primary) / 0.15),\n    inset 0 1px 0 hsl(var(--foreground) / 0.1);\n}\n\n.topbar-surface .btn:hover::before {\n  left: 100%;\n}\n\n.topbar-surface .btn:active {\n  transform: translateY(0);\n  box-shadow: \n    0 2px 8px hsl(var(--primary) / 0.2),\n    inset 0 1px 2px hsl(var(--foreground) / 0.1);\n}\n\n.topbar-surface .btn mat-icon {\n  transition: all 0.3s ease;\n}\n\n.topbar-surface .btn:hover mat-icon {\n  color: hsl(var(--primary));\n  filter: drop-shadow(0 0 4px hsl(var(--primary) / 0.3));\n}\n\n/* Modal styling with glassmorphism */\n.modal-backdrop {\n  position: fixed;\n  inset: 0;\n  z-index: 2100;\n  background: linear-gradient(\n    45deg,\n    hsl(var(--background) / 0.4) 0%,\n    hsl(var(--background) / 0.7) 50%,\n    hsl(var(--background) / 0.4) 100%\n  );\n  backdrop-filter: blur(12px);\n  -webkit-backdrop-filter: blur(12px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  animation: modalBackdropIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n@keyframes modalBackdropIn {\n  from {\n    opacity: 0;\n    backdrop-filter: blur(0px);\n  }\n  to {\n    opacity: 1;\n    backdrop-filter: blur(12px);\n  }\n}\n\n.modal {\n  position: relative;\n  width: 100%;\n  max-width: 28rem;\n  margin: 0;\n  padding: 0;\n  border: 1px solid hsl(var(--border) / 0.3);\n  border-radius: 1rem;\n  background: linear-gradient(\n    135deg,\n    hsl(var(--background) / 0.95) 0%,\n    hsl(var(--background) / 0.85) 50%,\n    hsl(var(--background) / 0.9) 100%\n  );\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  box-shadow: \n    0 25px 50px hsl(var(--foreground) / 0.15),\n    inset 0 1px 0 hsl(var(--foreground) / 0.1),\n    0 0 0 1px hsl(var(--primary) / 0.1);\n  animation: modalSlideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n}\n\n@keyframes modalSlideUp {\n  from {\n    opacity: 0;\n    transform: translateY(2rem) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.modal::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    hsl(var(--primary) / 0.5) 50%,\n    transparent 100%\n  );\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem 1.5rem 0 1.5rem;\n  position: relative;\n}\n\n.modal-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.modal-header h3::before {\n  content: '🗑️';\n  font-size: 1.1rem;\n}\n\n.modal-body {\n  padding: 1.5rem;\n  color: hsl(var(--foreground) / 0.8);\n  line-height: 1.6;\n}\n\n.modal-body p {\n  margin: 0;\n  font-size: 0.95rem;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 0.75rem;\n  padding: 0 1.5rem 1.5rem 1.5rem;\n  justify-content: flex-end;\n}\n\n.modal-actions .btn {\n  position: relative;\n  min-width: 5rem;\n  padding: 0.6rem 1.2rem;\n  border-radius: 0.5rem;\n  font-weight: 500;\n  font-size: 0.875rem;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n}\n\n.modal-actions .btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    rgba(255, 255, 255, 0.1) 50%,\n    transparent 100%\n  );\n  transition: left 0.5s ease;\n}\n\n.modal-actions .btn:hover::before {\n  left: 100%;\n}\n\n.modal-actions .btn-gradient-blue {\n  background: linear-gradient(\n    135deg,\n    hsl(var(--primary) / 0.9) 0%,\n    hsl(var(--primary) / 0.7) 100%\n  );\n  color: hsl(var(--primary-foreground));\n  border: 1px solid hsl(var(--primary) / 0.5);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.modal-actions .btn-gradient-blue:hover {\n  background: linear-gradient(\n    135deg,\n    hsl(var(--primary)) 0%,\n    hsl(var(--primary) / 0.8) 100%\n  );\n  transform: translateY(-1px);\n  box-shadow: \n    0 8px 25px hsl(var(--primary) / 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\n}\n\n.modal-actions .btn-error {\n  background: linear-gradient(\n    135deg,\n    hsl(var(--destructive) / 0.9) 0%,\n    hsl(var(--destructive) / 0.7) 100%\n  );\n  color: hsl(var(--destructive-foreground));\n  border: 1px solid hsl(var(--destructive) / 0.5);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.modal-actions .btn-error:hover {\n  background: linear-gradient(\n    135deg,\n    hsl(var(--destructive)) 0%,\n    hsl(var(--destructive) / 0.8) 100%\n  );\n  transform: translateY(-1px);\n  box-shadow: \n    0 8px 25px hsl(var(--destructive) / 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\n}\n\n.modal-actions .btn:active {\n  transform: translateY(0);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                {{ \"COMMON.HOME\" | translate }}                                            {{              \"CHAT.ATTACHMENTS_VIEW\" | translate              }}                                            {{              \"COMMON.COMPANIES\" | translate              }}                                                                                                                                  {{ \"SIDEBAR.DELETE_TITLE\" | translate }}                                                        warning          {{ \"SIDEBAR.DELETE_TEXT\" | translate }}                                      close          {{ \"SIDEBAR.CANCEL\" | translate }}                          delete          {{ \"SIDEBAR.CONFIRM\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AdminAppInfoPage', 'selector': 'app-admin-app-info'},{'name': 'AdminCompaniesPage', 'selector': 'app-admin-companies'},{'name': 'AdminCompanyPage', 'selector': 'app-admin-company'},{'name': 'AdminDashboardPage', 'selector': 'app-admin-dashboard'},{'name': 'AdminFilesPage', 'selector': 'app-admin-files'},{'name': 'AdminMessagesPage', 'selector': 'app-admin-messages'},{'name': 'AdminShellLayout', 'selector': 'app-admin-shell'},{'name': 'AdminUsersPage', 'selector': 'app-admin-users'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chat', 'selector': 'app-chat'},{'name': 'ChatComposerComponent', 'selector': 'app-chat-composer'},{'name': 'ChatMessagesListComponent', 'selector': 'app-chat-messages-list'},{'name': 'ForbiddenPage', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home-page'},{'name': 'LazyChartComponent', 'selector': 'app-lazy-chart'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'NotFoundPage', 'selector': 'app-not-found'},{'name': 'ProfileMenuComponent', 'selector': 'app-profile-menu'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SessionCompaniesModalComponent', 'selector': 'app-session-companies-modal'},{'name': 'SessionFilesModalComponent', 'selector': 'app-session-files-modal'},{'name': 'ShellLayout', 'selector': 'app-shell'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShellLayout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SseService.html":{"url":"injectables/SseService.html","title":"injectable - SseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/sse-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                abortController\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                cancel$\n                            \n                            \n                                    Private\n                                lastSessionId\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokenStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                streamFromAgent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sse-service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamFromAgent\n                        \n                    \n                \n            \n            \n                \nstreamFromAgent(_agentId: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/sse-service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _agentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        abortController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbortController | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sse-service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sse-service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cancel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sse-service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastSessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sse-service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tokenStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TokenStorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/sse-service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport { TokenStorageService } from './token-storage.service';\n\n// Legacy-ish shape used by UI. We'll map backend SSE events into this.\nexport interface SSEMessage {\n  content: string;\n  content_type: string;\n  event: string;\n  run_id: string;\n  agent_id: string;\n  session_id: string;\n  created_at: number;\n  model?: string;\n  messages?: any[];\n  metrics?: any;\n  failed_generation?: any;\n  extra_data?: any;\n  images?: any[];\n  videos?: any[];\n  audio?: any[];\n  response_audio?: any;\n}\n\nexport interface StreamResponse {\n  fullContent: string;\n  currentChunk: string;\n  event: string;\n  isComplete: boolean;\n  isError: boolean;\n  rawMessage: SSEMessage;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SseService {\n  private readonly baseUrl = environment.baseUrl;\n  private abortController: AbortController | null = null;\n  private readonly cancel$ = new Subject();\n  private readonly tokenStorage = inject(TokenStorageService);\n  private lastSessionId: string | null = null;\n\n  cancel() {\n    if (this.abortController) {\n      this.abortController.abort();\n      this.abortController = null;\n    }\n    this.cancel$.next();\n  }\n\n  streamFromAgent(\n    _agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n      file_ids?: string[];\n    },\n  ): Observable {\n    // New backend endpoint: JSON body -> POST /agent/message/stream\n    const url = `${this.baseUrl}/agent/message/stream`;\n\n    return new Observable((observer) => {\n      const controller = new AbortController();\n      this.abortController = controller;\n      let fullContent = '';\n\n      const headers: Record = {\n        Accept: 'text/event-stream',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'application/json',\n      };\n      const token = this.tokenStorage.getToken();\n      if (token) headers['Authorization'] = `Bearer ${token}`;\n\n      const body = JSON.stringify({\n        content: payload?.message ?? '',\n        session_id: payload?.session_id ?? undefined,\n        file_ids: payload?.file_ids ?? [],\n      });\n\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n        signal: controller.signal,\n      })\n        .then(async (response) => {\n          if (!response.ok || !response.body) {\n            const errorText = await response.text();\n            throw new Error(\n              `Error SSE: ${response.status} ${response.statusText} - ${errorText}`,\n            );\n          }\n\n          const reader = response.body.getReader();\n          const decoder = new TextDecoder('utf-8');\n          let buffer = '';\n          let currentEvent: string | null = null;\n          let dataBuffer = '';\n\n          const emit = (event: string, data: any) => {\n            // Map backend events to UI model events\n            if (event === 'start') {\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: '',\n                content_type: 'text',\n                event: 'RunStarted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunStarted',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'user_message') {\n              // Inform session id early if provided\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: data?.message?.content || '',\n                content_type: 'text',\n                event: 'UserMessage',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'UserMessage',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'responding') {\n              const delta: string = data?.delta ?? '';\n              if (delta) fullContent += delta;\n              const msg: SSEMessage = {\n                content: delta,\n                content_type: 'text',\n                event: 'RunResponse',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: delta,\n                event: 'RunResponse',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'end') {\n              const content: string =\n                data?.agent_message?.content ?? fullContent;\n              if (!fullContent) fullContent = content;\n              const msg: SSEMessage = {\n                content,\n                content_type: 'text',\n                event: 'RunCompleted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunCompleted',\n                isComplete: true,\n                isError: false,\n                rawMessage: msg,\n              });\n              // Let the outer reader loop finish naturally; don't double-complete\n              return;\n            }\n\n            if (event === 'error') {\n              const msg: SSEMessage = {\n                content: data?.error || 'Error',\n                content_type: 'text',\n                event: 'RunError',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: msg.content,\n                event: 'RunError',\n                isComplete: true,\n                isError: true,\n                rawMessage: msg,\n              });\n              observer.complete();\n              return;\n            }\n          };\n\n          while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n            buffer += decoder.decode(value, { stream: true });\n\n            let lineEndIdx: number;\n            while ((lineEndIdx = buffer.indexOf('\\n')) !== -1) {\n              const line = buffer.slice(0, lineEndIdx).trimEnd();\n              buffer = buffer.slice(lineEndIdx + 1);\n\n              if (!line) {\n                // dispatch event with accumulated data\n                if (currentEvent && dataBuffer) {\n                  try {\n                    const parsed = JSON.parse(dataBuffer);\n                    emit(currentEvent, parsed);\n                  } catch (e) {\n                    // fallback raw text\n                    emit(currentEvent, { delta: dataBuffer });\n                  }\n                }\n                currentEvent = null;\n                dataBuffer = '';\n                continue;\n              }\n\n              if (line.startsWith('event:')) {\n                currentEvent = line.slice(6).trim();\n              } else if (line.startsWith('data:')) {\n                const chunk = line.slice(5).trimStart();\n                dataBuffer += chunk;\n              }\n            }\n          }\n\n          observer.complete();\n        })\n        .catch((err) => {\n          // Swallow aborts as user-initiated cancels\n          if (\n            err &&\n            (err.name === 'AbortError' || String(err).includes('aborted'))\n          ) {\n            return;\n          }\n          console.error('SSE Error:', err);\n          observer.error(err);\n        });\n\n      return () => {\n        try {\n          controller.abort();\n        } catch {}\n        this.lastSessionId = null;\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Storage.html":{"url":"interfaces/Storage.html","title":"interface - Storage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Storage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/agent-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tool {\n  name: string;\n  parameters: {\n    type: string;\n    properties: Record;\n    required: string[];\n  };\n  requires_confirmation: boolean;\n  external_execution: boolean;\n}\n\nexport interface Model {\n  name: string;\n  model: string;\n  provider: string;\n}\n\nexport interface Storage {\n  name: string;\n}\n\nexport interface AgentModel {\n  agent_id: string;\n  name: string;\n  model: Model;\n  add_context: boolean;\n  tools: Tool[];\n  memory: any | null;\n  storage: Storage;\n  knowledge: any | null;\n  description: string | null;\n  instructions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StreamResponse.html":{"url":"interfaces/StreamResponse.html","title":"interface - StreamResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StreamResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/sse-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentChunk\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            fullContent\n                                        \n                                \n                                \n                                        \n                                            isComplete\n                                        \n                                \n                                \n                                        \n                                            isError\n                                        \n                                \n                                \n                                        \n                                            rawMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentChunk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentChunk:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rawMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rawMessage:         SSEMessage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SSEMessage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport { TokenStorageService } from './token-storage.service';\n\n// Legacy-ish shape used by UI. We'll map backend SSE events into this.\nexport interface SSEMessage {\n  content: string;\n  content_type: string;\n  event: string;\n  run_id: string;\n  agent_id: string;\n  session_id: string;\n  created_at: number;\n  model?: string;\n  messages?: any[];\n  metrics?: any;\n  failed_generation?: any;\n  extra_data?: any;\n  images?: any[];\n  videos?: any[];\n  audio?: any[];\n  response_audio?: any;\n}\n\nexport interface StreamResponse {\n  fullContent: string;\n  currentChunk: string;\n  event: string;\n  isComplete: boolean;\n  isError: boolean;\n  rawMessage: SSEMessage;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SseService {\n  private readonly baseUrl = environment.baseUrl;\n  private abortController: AbortController | null = null;\n  private readonly cancel$ = new Subject();\n  private readonly tokenStorage = inject(TokenStorageService);\n  private lastSessionId: string | null = null;\n\n  cancel() {\n    if (this.abortController) {\n      this.abortController.abort();\n      this.abortController = null;\n    }\n    this.cancel$.next();\n  }\n\n  streamFromAgent(\n    _agentId: string,\n    payload: {\n      message?: string;\n      session_id?: string;\n      user_id?: string;\n      audioFile?: File;\n      files?: File[];\n      file_ids?: string[];\n    },\n  ): Observable {\n    // New backend endpoint: JSON body -> POST /agent/message/stream\n    const url = `${this.baseUrl}/agent/message/stream`;\n\n    return new Observable((observer) => {\n      const controller = new AbortController();\n      this.abortController = controller;\n      let fullContent = '';\n\n      const headers: Record = {\n        Accept: 'text/event-stream',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'application/json',\n      };\n      const token = this.tokenStorage.getToken();\n      if (token) headers['Authorization'] = `Bearer ${token}`;\n\n      const body = JSON.stringify({\n        content: payload?.message ?? '',\n        session_id: payload?.session_id ?? undefined,\n        file_ids: payload?.file_ids ?? [],\n      });\n\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n        signal: controller.signal,\n      })\n        .then(async (response) => {\n          if (!response.ok || !response.body) {\n            const errorText = await response.text();\n            throw new Error(\n              `Error SSE: ${response.status} ${response.statusText} - ${errorText}`,\n            );\n          }\n\n          const reader = response.body.getReader();\n          const decoder = new TextDecoder('utf-8');\n          let buffer = '';\n          let currentEvent: string | null = null;\n          let dataBuffer = '';\n\n          const emit = (event: string, data: any) => {\n            // Map backend events to UI model events\n            if (event === 'start') {\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: '',\n                content_type: 'text',\n                event: 'RunStarted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunStarted',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'user_message') {\n              // Inform session id early if provided\n              if (data?.session_id) this.lastSessionId = data.session_id;\n              const msg: SSEMessage = {\n                content: data?.message?.content || '',\n                content_type: 'text',\n                event: 'UserMessage',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'UserMessage',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'responding') {\n              const delta: string = data?.delta ?? '';\n              if (delta) fullContent += delta;\n              const msg: SSEMessage = {\n                content: delta,\n                content_type: 'text',\n                event: 'RunResponse',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: delta,\n                event: 'RunResponse',\n                isComplete: false,\n                isError: false,\n                rawMessage: msg,\n              });\n              return;\n            }\n\n            if (event === 'end') {\n              const content: string =\n                data?.agent_message?.content ?? fullContent;\n              if (!fullContent) fullContent = content;\n              const msg: SSEMessage = {\n                content,\n                content_type: 'text',\n                event: 'RunCompleted',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: '',\n                event: 'RunCompleted',\n                isComplete: true,\n                isError: false,\n                rawMessage: msg,\n              });\n              // Let the outer reader loop finish naturally; don't double-complete\n              return;\n            }\n\n            if (event === 'error') {\n              const msg: SSEMessage = {\n                content: data?.error || 'Error',\n                content_type: 'text',\n                event: 'RunError',\n                run_id: '',\n                agent_id: '',\n                session_id: data?.session_id || this.lastSessionId || '',\n                created_at: Date.now(),\n              } as SSEMessage;\n              observer.next({\n                fullContent,\n                currentChunk: msg.content,\n                event: 'RunError',\n                isComplete: true,\n                isError: true,\n                rawMessage: msg,\n              });\n              observer.complete();\n              return;\n            }\n          };\n\n          while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n            buffer += decoder.decode(value, { stream: true });\n\n            let lineEndIdx: number;\n            while ((lineEndIdx = buffer.indexOf('\\n')) !== -1) {\n              const line = buffer.slice(0, lineEndIdx).trimEnd();\n              buffer = buffer.slice(lineEndIdx + 1);\n\n              if (!line) {\n                // dispatch event with accumulated data\n                if (currentEvent && dataBuffer) {\n                  try {\n                    const parsed = JSON.parse(dataBuffer);\n                    emit(currentEvent, parsed);\n                  } catch (e) {\n                    // fallback raw text\n                    emit(currentEvent, { delta: dataBuffer });\n                  }\n                }\n                currentEvent = null;\n                dataBuffer = '';\n                continue;\n              }\n\n              if (line.startsWith('event:')) {\n                currentEvent = line.slice(6).trim();\n              } else if (line.startsWith('data:')) {\n                const chunk = line.slice(5).trimStart();\n                dataBuffer += chunk;\n              }\n            }\n          }\n\n          observer.complete();\n        })\n        .catch((err) => {\n          // Swallow aborts as user-initiated cancels\n          if (\n            err &&\n            (err.name === 'AbortError' || String(err).includes('aborted'))\n          ) {\n            return;\n          }\n          console.error('SSE Error:', err);\n          observer.error(err);\n        });\n\n      return () => {\n        try {\n          controller.abort();\n        } catch {}\n        this.lastSessionId = null;\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StreamResponseModel.html":{"url":"interfaces/StreamResponseModel.html","title":"interface - StreamResponseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StreamResponseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/stream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentChunk\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            fullContent\n                                        \n                                \n                                \n                                        \n                                            isComplete\n                                        \n                                \n                                \n                                        \n                                            isError\n                                        \n                                \n                                \n                                        \n                                            rawMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentChunk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentChunk:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rawMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rawMessage:         SSEMessageModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SSEMessageModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SSEMessageModel {\n  content: string;\n  content_type: string;\n  event: string;\n  run_id: string;\n  agent_id: string;\n  session_id: string;\n  created_at: number;\n  model?: string;\n  messages?: any[];\n  metrics?: any;\n  failed_generation?: any;\n  extra_data?: any;\n  images?: any[];\n  videos?: any[];\n  audio?: any[];\n  response_audio?: any;\n}\n\nexport interface StreamResponseModel {\n  fullContent: string;\n  currentChunk: string;\n  event: string;\n  isComplete: boolean;\n  isError: boolean;\n  rawMessage: SSEMessageModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _theme\n                            \n                            \n                                    Private\n                                media\n                            \n                            \n                                    Private\n                                mediaListener\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyTheme\n                            \n                            \n                                effective\n                            \n                            \n                                init\n                            \n                            \n                                isDark\n                            \n                            \n                                    Private\n                                prefersDark\n                            \n                            \n                                    Private\n                                safeDocument\n                            \n                            \n                                    Private\n                                safeLocalStorageGet\n                            \n                            \n                                    Private\n                                safeLocalStorageSet\n                            \n                            \n                                setTheme\n                            \n                            \n                                    Private\n                                setupSystemListener\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        effective\n                        \n                    \n                \n            \n            \n                \neffective()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:34\n                        \n                    \n\n\n            \n                \n                        'light' | 'dark' resolviendo 'system'\n\n\n                        \n                            Returns :     \"light\" | \"dark\"\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDark\n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Útil en templates si quieres booleano\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prefersDark\n                        \n                    \n                \n            \n            \n                \n                        \n                    prefersDark()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDocument()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Document | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeLocalStorageGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeLocalStorageGet(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeLocalStorageSet\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeLocalStorageSet(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(t: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                t\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSystemListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSystemListener()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/theme.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('system')\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/theme.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/theme.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mediaListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/theme.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._theme.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/theme.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\ntype Theme = 'light' | 'dark' | 'system';\nconst STORAGE_KEY = 'app_theme';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  private _theme = signal('system');\n  readonly theme = this._theme.asReadonly();\n  private media: MediaQueryList | null = null;\n  private mediaListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null = null;\n\n  init() {\n    const saved = this.safeLocalStorageGet(STORAGE_KEY) as Theme | null;\n    const t: Theme = saved === 'light' || saved === 'dark' || saved === 'system' ? saved : 'system';\n    this.setTheme(t);\n  }\n\n  setTheme(t: Theme) {\n    this._theme.set(t);\n    this.safeLocalStorageSet(STORAGE_KEY, t);\n    this.applyTheme();\n    this.setupSystemListener();\n  }\n\n  toggle() {\n    const current = this._theme();\n    const next: Theme = current === 'dark' ? 'light' : 'dark';\n    this.setTheme(next);\n  }\n\n  /** 'light' | 'dark' resolviendo 'system' */\n  effective(): 'light' | 'dark' {\n    const t = this._theme();\n    if (t === 'system') return this.prefersDark() ? 'dark' : 'light';\n    return t;\n  }\n\n  /** Útil en templates si quieres booleano */\n  isDark(): boolean {\n    return this.effective() === 'dark';\n  }\n\n  private applyTheme() {\n    const doc = this.safeDocument();\n    if (!doc) return;\n\n    const root = doc.documentElement;\n    const mode = this.effective();\n\n    // 🔧 Limpia `.dark` de cualquier otro elemento (body, contenedores, etc.)\n    doc.querySelectorAll('.dark').forEach(el => {\n      if (el !== root) el.classList.remove('dark');\n    });\n\n    // Tailwind dark:\n    root.classList.toggle('dark', mode === 'dark');\n\n    // Para componentes que lean variables/attr\n    root.setAttribute('data-theme', mode);\n    root.style.colorScheme = mode;\n  }\n\n  private setupSystemListener() {\n    if (typeof window === 'undefined') return;\n    if (!this.media) this.media = window.matchMedia('(prefers-color-scheme: dark)');\n    if (this.mediaListener) {\n      this.media.removeEventListener?.('change', this.mediaListener);\n      this.mediaListener = null;\n    }\n    if (this._theme() === 'system' && this.media) {\n      this.mediaListener = () => this.applyTheme();\n      this.media.addEventListener?.('change', this.mediaListener);\n    }\n  }\n\n  private prefersDark(): boolean {\n    try {\n      return typeof window !== 'undefined'\n        ? window.matchMedia?.('(prefers-color-scheme: dark)')?.matches ?? false\n        : false;\n    } catch { return false; }\n  }\n\n  private safeLocalStorageGet(key: string): string | null { try { return localStorage.getItem(key); } catch { return null; } }\n  private safeLocalStorageSet(key: string, value: string) { try { localStorage.setItem(key, value); } catch { } }\n  private safeDocument(): Document | null { try { return document; } catch { return null; } }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeSeriesPoint.html":{"url":"interfaces/TimeSeriesPoint.html","title":"interface - TimeSeriesPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimeSeriesPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/admin-stats.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeSeriesPoint {\n  date: string;\n  count: number;\n}\nexport interface AdminStatsDTO {\n  totals: Record;\n  files_breakdown: Record;\n  timeseries: Record;\n}\n\nexport interface AdminCompanyDashboardDTO {\n  // Minimal identity\n  tax_id: string;\n  name?: string | null;\n  sector?: string | null;\n\n  // New enriched payload from backend\n  company?: {\n    tax_id?: string;\n    business_name?: string;\n    legal_status?: string;\n    ciiu?: string;\n    company_type?: string;\n    incorporation_date?: string; // ISO or YYYY-MM-DD\n    address?: string;\n    representatives?: any[];\n    representative?: string;\n    source_url?: string;\n    additional?: {\n      is_state_supplier?: boolean;\n      offers_remittances?: boolean;\n      sells_on_credit?: boolean;\n      belongs_to_mv?: boolean;\n      is_public_interest?: boolean;\n      is_bic?: boolean;\n      bic_since_year?: number | null;\n      bic_impact_areas?: string[] | null;\n      judicial_disposition?: string | null;\n      last_corp_update_at?: string | null;\n      is_foreign_domiciled?: boolean;\n    };\n    fetched_at?: string;\n  } | null;\n  score?: number | null;\n  score_source?: string | null;\n  financials?: any[];\n  contributions?: any[];\n  sector_comparison?: any;\n  missing_data?: string[];\n  imputation?: { error?: string; missing?: string[] } | null;\n  scenarios?: any[];\n\n  // Existing fields\n  llm_insights?: any; // can vary\n  metrics?: Record;\n  signals?: Array;\n  overview?: string | null;\n}\n\nexport abstract class AdminStatsPort {\n  abstract getOverview(days?: number): Promise;\n  abstract getCompanyDashboard(\n    taxId: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorageService.html":{"url":"injectables/TokenStorageService.html","title":"injectable - TokenStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getRole\n                            \n                            \n                                getToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                setRole\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRole\n                        \n                    \n                \n            \n            \n                \nsetRole(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token-storage.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst KEY = 'auth_token';\nconst KEY_ROLE = 'auth_role';\n\n@Injectable({ providedIn: 'root' })\nexport class TokenStorageService {\n  setToken(token: string) {\n    try {\n      localStorage.setItem(KEY, token);\n    } catch {}\n  }\n  getToken(): string | null {\n    try {\n      return localStorage.getItem(KEY);\n    } catch {\n      return null;\n    }\n  }\n  setRole(role: string) {\n    try {\n      localStorage.setItem(KEY_ROLE, role);\n    } catch {}\n  }\n  getRole(): string | null {\n    try {\n      return localStorage.getItem(KEY_ROLE);\n    } catch {\n      return null;\n    }\n  }\n  clear() {\n    try {\n      localStorage.removeItem(KEY);\n      localStorage.removeItem(KEY_ROLE);\n    } catch {}\n  }\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/agent-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            external_execution\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parameters\n                                        \n                                \n                                \n                                        \n                                            requires_confirmation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_execution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_execution:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parameters:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requires_confirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requires_confirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tool {\n  name: string;\n  parameters: {\n    type: string;\n    properties: Record;\n    required: string[];\n  };\n  requires_confirmation: boolean;\n  external_execution: boolean;\n}\n\nexport interface Model {\n  name: string;\n  model: string;\n  provider: string;\n}\n\nexport interface Storage {\n  name: string;\n}\n\nexport interface AgentModel {\n  agent_id: string;\n  name: string;\n  model: Model;\n  add_context: boolean;\n  tools: Tool[];\n  memory: any | null;\n  storage: Storage;\n  knowledge: any | null;\n  description: string | null;\n  instructions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TtsService.html":{"url":"injectables/TtsService.html","title":"injectable - TtsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TtsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/tts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentMessageId\n                            \n                            \n                                    Private\n                                currentUtterance\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isSpeaking\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                pitch\n                            \n                            \n                                    Readonly\n                                rate\n                            \n                            \n                                    Private\n                                voicesReady\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                ensureVoices\n                            \n                            \n                                    Private\n                                nextTick\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                resume\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                            \n                                    Private\n                                    Async\n                                waitForIdle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        ensureVoices\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureVoices(synth: SpeechSynthesis, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                synth\n                                            \n                                                        SpeechSynthesis\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1200\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextTick\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextTick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:231\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play(text: string, messageId?: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messageId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(val: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        waitForIdle\n                        \n                    \n                \n            \n            \n                \n                        \n                    waitForIdle(synth: SpeechSynthesis, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/tts.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                synth\n                                            \n                                                        SpeechSynthesis\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    200\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentMessageId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUtterance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SpeechSynthesisUtterance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isSpeaking\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('es-ES')\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pitch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0.9)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        voicesReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0.9)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/tts.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class TtsService {\n  private currentUtterance: SpeechSynthesisUtterance | null = null;\n  private voicesReady = false;\n\n  readonly isSpeaking = signal(false);\n  readonly isPaused = signal(false);\n  readonly currentMessageId = signal(null);\n  readonly volume = signal(0.9);\n  readonly rate = signal(0.9);\n  readonly pitch = signal(1);\n  readonly lang = signal('es-ES');\n\n  async play(text: string, messageId?: string | null) {\n    console.log('🔊 TTS play called with:', { text: text.substring(0, 100) + '...', messageId, textLength: text.length });\n    \n    try {\n      if (typeof window === 'undefined' || !('speechSynthesis' in window)) {\n        console.error('🔊 Speech synthesis not available');\n        return;\n      }\n      \n      if (!text || text.trim().length === 0) {\n        console.error('🔊 Empty text provided to TTS');\n        return;\n      }\n      \n      const synth = window.speechSynthesis;\n      console.log('🔊 Speech synthesis state:', { speaking: synth.speaking, pending: (synth as any).pending, paused: synth.paused });\n\n      // Always reset synth to avoid stuck paused states\n      try {\n        synth.cancel();\n      } catch {}\n      await this.waitForIdle(synth, 150);\n\n      // Ensure voices are ready (Chrome may return [] on first call)\n      await this.ensureVoices(synth, 1500);\n      console.log('🔊 Available voices:', synth.getVoices().length);\n\n      const utter = new SpeechSynthesisUtterance(text);\n      utter.lang = this.lang();\n      utter.rate = this.rate();\n      utter.pitch = this.pitch();\n      utter.volume = this.volume();\n      \n      console.log('🔊 Utterance settings:', { \n        lang: utter.lang, \n        rate: utter.rate, \n        pitch: utter.pitch, \n        volume: utter.volume \n      });\n\n      // Select a voice matching lang, fallback to same language prefix\n      try {\n        const voices = synth.getVoices?.() || [];\n        const langLower = this.lang().toLowerCase();\n        let preferred =\n          voices.find((v) => v.lang?.toLowerCase() === langLower) ||\n          voices.find((v) =>\n            v.lang?.toLowerCase().startsWith(langLower.split('-')[0] || ''),\n          ) ||\n          voices[0];\n        if (preferred) {\n          utter.voice = preferred;\n          console.log('🔊 Selected voice:', preferred.name, preferred.lang);\n        } else {\n          console.log('🔊 No voice found, using default');\n        }\n      } catch (e) {\n        console.error('🔊 Error selecting voice:', e);\n      }\n\n      this.currentUtterance = utter;\n      this.currentMessageId.set(messageId ?? null);\n      this.isSpeaking.set(true);\n      this.isPaused.set(false);\n\n      const cleanup = () => {\n        console.log('🔊 TTS cleanup called');\n        this.currentUtterance = null;\n        this.isSpeaking.set(false);\n        this.isPaused.set(false);\n        this.currentMessageId.set(null);\n      };\n      utter.onend = () => {\n        console.log('🔊 TTS ended');\n        cleanup();\n      };\n      utter.onerror = (event) => {\n        console.error('🔊 TTS error:', event);\n        cleanup();\n      };\n      utter.onpause = () => {\n        console.log('🔊 TTS paused');\n        this.isPaused.set(true);\n      };\n      utter.onresume = () => {\n        console.log('🔊 TTS resumed');\n        this.isPaused.set(false);\n      };\n\n      let started = false;\n      utter.onstart = () => {\n        console.log('🔊 TTS started');\n        started = true;\n        this.isPaused.set(false);\n      };\n\n      // Speak on next macrotask to allow cancel() flush and voices attach\n      await this.nextTick();\n      console.log('🔊 About to call synth.speak()');\n      synth.speak(utter);\n\n      // Kick the synth in case it comes up paused (Chrome quirk)\n      setTimeout(() => {\n        try {\n          if (synth.paused) {\n            console.log('🔊 Synth was paused, resuming');\n            synth.resume();\n          }\n        } catch {}\n      }, 80);\n\n      // Watchdog: if not started, retry once\n      setTimeout(async () => {\n        if (!started && this.currentUtterance === utter) {\n          console.log('🔊 TTS watchdog: not started, retrying');\n          try {\n            synth.cancel();\n          } catch {}\n          await this.nextTick();\n          synth.speak(utter);\n          setTimeout(() => {\n            try {\n              if (synth.paused) synth.resume();\n            } catch {}\n          }, 60);\n        }\n      }, 300);\n    } catch (error) {\n      console.error('🔊 TTS play error:', error);\n    }\n  }\n\n  pause() {\n    try {\n      if (typeof window === 'undefined') return;\n      if (this.isSpeaking() && !this.isPaused()) {\n        window.speechSynthesis.pause();\n        this.isPaused.set(true);\n      }\n    } catch {}\n  }\n\n  resume() {\n    try {\n      if (typeof window === 'undefined') return;\n      if (this.isPaused()) {\n        window.speechSynthesis.resume();\n        this.isPaused.set(false);\n      }\n    } catch {}\n  }\n\n  stop() {\n    try {\n      if (typeof window === 'undefined') return;\n      window.speechSynthesis.cancel();\n      this.currentUtterance = null;\n      this.isSpeaking.set(false);\n      this.isPaused.set(false);\n      this.currentMessageId.set(null);\n    } catch {}\n  }\n\n  setVolume(val: number) {\n    const v = Math.max(0, Math.min(1, val));\n    this.volume.set(v);\n    if (this.currentUtterance) {\n      this.currentUtterance.volume = v;\n    }\n  }\n\n  private async ensureVoices(\n    synth: SpeechSynthesis,\n    timeoutMs = 1200,\n  ): Promise {\n    if (this.voicesReady && (synth.getVoices?.() || []).length > 0) return;\n    const existing = synth.getVoices?.() || [];\n    if (existing.length > 0) {\n      this.voicesReady = true;\n      return;\n    }\n    let resolve!: () => void;\n    const p = new Promise((r) => (resolve = r));\n    const onChange = () => {\n      this.voicesReady = true;\n      synth.removeEventListener?.('voiceschanged', onChange as any);\n      resolve();\n    };\n    try {\n      synth.addEventListener?.('voiceschanged', onChange as any);\n    } catch {}\n    // Fallback polling\n    const start = Date.now();\n    const poll = () => {\n      const list = synth.getVoices?.() || [];\n      if (list.length > 0 || Date.now() - start > timeoutMs) {\n        onChange();\n      } else {\n        setTimeout(poll, 100);\n      }\n    };\n    poll();\n    await p;\n  }\n\n  private async waitForIdle(synth: SpeechSynthesis, timeoutMs = 200) {\n    const start = Date.now();\n    while (\n      (synth.speaking || (synth as any).pending) &&\n      Date.now() - start  {\n    return new Promise((res) => setTimeout(res, 0));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypewriterService.html":{"url":"injectables/TypewriterService.html","title":"injectable - TypewriterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypewriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/typewriter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultSpeed\n                            \n                            \n                                    Private\n                                typewriterSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                completeMessage\n                            \n                            \n                                isActive\n                            \n                            \n                                startTypewriter\n                            \n                            \n                                stopTypewriter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        completeMessage\n                        \n                    \n                \n            \n            \n                \ncompleteMessage(message: ChatMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/typewriter.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Completa inmediatamente el mensaje sin animación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/typewriter.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Verifica si el typewriter está activo\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTypewriter\n                        \n                    \n                \n            \n            \n                \nstartTypewriter(message: ChatMessage, onUpdate: () => void, speed: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/typewriter.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Inicia el efecto typewriter para un mensaje\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ChatMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                onUpdate\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                speed\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.defaultSpeed\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTypewriter\n                        \n                    \n                \n            \n            \n                \nstopTypewriter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/typewriter.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Detiene el efecto typewriter\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultSpeed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/typewriter.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        typewriterSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/services/typewriter.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { interval, type Subscription } from 'rxjs';\nimport type { ChatMessage } from '@core/models/chat-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TypewriterService {\n  private typewriterSubscription: Subscription | null = null;\n  private readonly defaultSpeed = 25; // ms entre caracteres\n\n  /**\n   * Inicia el efecto typewriter para un mensaje\n   */\n  startTypewriter(\n    message: ChatMessage,\n    onUpdate: () => void,\n    speed: number = this.defaultSpeed,\n  ): void {\n    if (this.typewriterSubscription || !message) {\n      return;\n    }\n\n    console.log('⌨️ Iniciando efecto typewriter');\n\n    this.typewriterSubscription = interval(speed).subscribe(() => {\n      if (!message) {\n        this.stopTypewriter();\n        return;\n      }\n\n      const fullContent = message.content;\n      const displayedLength = message.displayedContent.length;\n\n      if (displayedLength \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateAppInfoUseCase.html":{"url":"injectables/UpdateAppInfoUseCase.html","title":"injectable - UpdateAppInfoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateAppInfoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/update-app-info.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/update-app-info.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APP_INFO_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/update-app-info.usecase.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { AppInfo } from '@core/models/app-info';\nimport type { AppInfoPort } from '@core/ports';\nimport { APP_INFO_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class UpdateAppInfoUseCase {\n  private readonly appInfo = inject(APP_INFO_PORT);\n  execute(payload: Partial): Promise {\n    return this.appInfo.updateAppInfo(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserUseCase.html":{"url":"injectables/UpdateUserUseCase.html","title":"injectable - UpdateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/admin/update-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(userId: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/admin/update-user.usecase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ADMIN_USERS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/admin/update-user.usecase.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type {\n  AdminUserItem,\n  AdminUsersPort,\n  CreateUserPayload,\n} from '@core/ports';\nimport { ADMIN_USERS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class UpdateUserUseCase {\n  private readonly port = inject(ADMIN_USERS_PORT);\n  execute(\n    userId: string,\n    payload: Partial,\n  ): Promise {\n    return this.port.update(userId, payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadFileUseCase.html":{"url":"injectables/UploadFileUseCase.html","title":"injectable - UploadFileUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadFileUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/files/upload-file.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(file: File, subfolder: string, sessionId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/files/upload-file.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                subfolder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FILES_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/files/upload-file.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FILES_PORT } from '@core/tokens';\nimport type { FilesPort, UploadedFileMeta } from '@core/ports';\n\n@Injectable({ providedIn: 'root' })\nexport class UploadFileUseCase {\n  private readonly files = inject(FILES_PORT);\n  execute(\n    file: File,\n    subfolder = '',\n    sessionId?: string,\n  ): Promise {\n    return this.files.upload(file, subfolder, sessionId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFileMeta.html":{"url":"interfaces/UploadedFileMeta.html","title":"interface - UploadedFileMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadedFileMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ports/files.port.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            converted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extracted_available\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            original_extension\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source_extension\n                                        \n                                \n                                \n                                        \n                                            type_file\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        converted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        converted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extracted_available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extracted_available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_extension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_extension:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_extension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_extension:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type_file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type_file:     \"image\" | \"pdf\" | \"document\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"image\" | \"pdf\" | \"document\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Paginated } from '@core/models/paginated';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null;\n  extracted_available?: boolean;\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n}\n\nexport interface FilesPort {\n  upload(\n    file: File,\n    subfolder?: string,\n    sessionId?: string,\n  ): Promise;\n  getFile(fileId: string): Promise;\n  list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise>;\n  listBySession(sessionId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFileMeta-1.html":{"url":"interfaces/UploadedFileMeta-1.html","title":"interface - UploadedFileMeta-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadedFileMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/files.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            converted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extracted_available\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            original_extension\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            session_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source_extension\n                                        \n                                \n                                \n                                        \n                                            type_file\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        converted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        converted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extracted_available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extracted_available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_extension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_extension:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_extension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_extension:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type_file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type_file:     \"image\" | \"pdf\" | \"document\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"image\" | \"pdf\" | \"document\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport type { Paginated } from '@core/models/paginated';\nimport { mapToPaginated } from '@core/models/pagination-api';\n\nexport interface UploadedFileMeta {\n  id: string;\n  url: string;\n  filename: string;\n  content_type: string;\n  type_file: 'image' | 'pdf' | 'document';\n  converted?: boolean;\n  original_extension?: string | null;\n  source_extension?: string | null; // backend may return this field name\n  extracted_available?: boolean; // present when metadata extraction exists\n  owner_id?: string | null;\n  session_id?: string | null;\n}\n\n// Legacy shape kept for compatibility in mapping helper\nexport interface ListFilesResponse {\n  total: number;\n  items: UploadedFileMeta[];\n  offset?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FilesService {\n  private readonly http = inject(HttpClient);\n  private readonly base = environment.baseUrl;\n\n  async upload(\n    file: File,\n    subfolder = '',\n    sessionId?: string,\n  ): Promise {\n    const form = new FormData();\n    form.append('upload', file);\n    form.append('subfolder', subfolder);\n    const url = `${this.base}/files/`;\n    const params: any = {};\n    if (sessionId) {\n      params.session_id = sessionId;\n      // Also include in form for backends expecting it in body\n      form.append('session_id', sessionId);\n    }\n    return firstValueFrom(\n      this.http.post(url, form, { params }),\n    );\n  }\n\n  async getFile(fileId: string): Promise {\n    // Fetch metadata instead of binary stream\n    const url = `${this.base}/files/${fileId}/meta`;\n    return firstValueFrom(this.http.get(url));\n  }\n\n  async list(params?: {\n    type_file?: 'image' | 'pdf' | 'document';\n    subfolder?: string;\n    page?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise> {\n    const url = `${this.base}/files/`;\n    // Build clean query params (avoid sending undefined) and map offset->page for backend\n    const qp: any = {};\n    if (params?.type_file) qp.type_file = params.type_file;\n    if (params?.subfolder) qp.subfolder = params.subfolder;\n    if (typeof params?.limit === 'number') qp.limit = params.limit;\n    const page =\n      params?.page ??\n      (params?.offset != null && params?.limit\n        ? Math.floor(params.offset / params.limit) + 1\n        : 1);\n    qp.page = page;\n    const data = await firstValueFrom(this.http.get(url, { params: qp }));\n    // Normalize to Paginated using helper\n    const pageParams = { page, limit: params?.limit };\n    return mapToPaginated(data, pageParams);\n  }\n\n  async listBySession(sessionId: string): Promise {\n    const url = `${this.base}/files/session/${encodeURIComponent(sessionId)}`;\n    return firstValueFrom(this.http.get(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpsertRiskWeightsUseCase.html":{"url":"injectables/UpsertRiskWeightsUseCase.html","title":"injectable - UpsertRiskWeightsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpsertRiskWeightsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/use-cases/risk-weights/upsert-risk-weights.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(version: number, weights: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/use-cases/risk-weights/upsert-risk-weights.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                weights\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RISK_WEIGHTS_PORT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/use-cases/risk-weights/upsert-risk-weights.usecase.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport type { RiskWeightsPort, RiskWeightsConfig } from '@core/ports';\nimport { RISK_WEIGHTS_PORT } from '@core/tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class UpsertRiskWeightsUseCase {\n  private readonly port = inject(RISK_WEIGHTS_PORT);\n  execute(\n    version: number,\n    weights: Record,\n  ): Promise {\n    return this.port.upsert(version, weights);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n  username?: string; // allow either username or email\n  email?: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  // username is required by backend\n  username: string;\n}\n\n// Backend login returns nested token + user\nexport interface LoginSuccessResponse {\n  token: { access_token: string; token_type: string };\n  user: {\n    user_id: string;\n    username: string;\n    email: string;\n    role: string;\n    created_at?: string;\n  };\n}\n\n// Backend register returns basic user (UserBaseResponseDTO)\nexport interface RegisterSuccessResponse {\n  user_id: string;\n  username: string;\n  email: string;\n  role: string;\n  created_at?: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoData.html":{"url":"interfaces/VideoData.html","title":"interface - VideoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playground-models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            eta\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RunEvent {\n  RunStarted = 'RunStarted',\n  RunResponse = 'RunResponse',\n  RunResponseContent = 'RunResponseContent',\n  RunCompleted = 'RunCompleted',\n  RunError = 'RunError',\n  ToolCallStarted = 'ToolCallStarted',\n  ToolCallCompleted = 'ToolCallCompleted',\n  UpdatingMemory = 'UpdatingMemory',\n  ReasoningStarted = 'ReasoningStarted',\n  ReasoningStep = 'ReasoningStep',\n  ReasoningCompleted = 'ReasoningCompleted',\n}\n\nexport interface ReasoningSteps {\n  title: string;\n  action?: string;\n  result: string;\n  reasoning: string;\n  confidence?: number;\n  next_action?: string;\n}\n\nexport interface Reference {\n  content: string;\n  meta_data: {\n    chunk: number;\n    chunk_size: number;\n  };\n  name: string;\n}\n\nexport interface ReferenceData {\n  query: string;\n  references: Reference[];\n  time?: number;\n}\n\nexport interface ResponseAudio {\n  id?: string;\n  content?: string;\n  transcript?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface ImageData {\n  revised_prompt: string;\n  url: string;\n}\n\nexport interface VideoData {\n  id: number;\n  eta: number;\n  url: string;\n}\n\nexport interface AudioData {\n  base64_audio?: string;\n  mime_type?: string;\n  url?: string;\n  id?: string;\n  content?: string;\n  channels?: number;\n  sample_rate?: number;\n}\n\nexport interface PlaygroundAgentExtraData {\n  reasoning_steps?: ReasoningSteps[];\n  references?: ReferenceData[];\n}\n\nexport interface RunResponse {\n  content?: string | object;\n  content_type: string;\n  context?: Array>;\n  event: RunEvent | string;\n  event_data?: object;\n  model?: string;\n  run_id?: string;\n  agent_id?: string;\n  session_id?: string;\n  created_at: number;\n  extra_data?: PlaygroundAgentExtraData;\n  images?: ImageData[];\n  videos?: VideoData[];\n  audio?: AudioData[];\n  response_audio?: ResponseAudio;\n  tool?: any;\n  tools?: any[];\n}\n\nexport interface SessionEntry {\n  session_id: string;\n  title: string;\n  summary?: string;\n  created_at: number;\n  updated_at?: number;\n}\n\nexport interface ChatEntry {\n  message: {\n    role: 'user' | 'system' | 'tool' | 'assistant';\n    content: string;\n    created_at: number;\n  };\n  response: {\n    content: string;\n    tools?: any[];\n    extra_data?: PlaygroundAgentExtraData;\n    images?: ImageData[];\n    videos?: VideoData[];\n    audio?: AudioData[];\n    response_audio?: {\n      transcript?: string;\n    };\n    created_at: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.1.5\n        \n            @angular/common : 20.1.5\n        \n            @angular/compiler : 20.1.5\n        \n            @angular/core : 20.1.5\n        \n            @angular/forms : 20.1.5\n        \n            @angular/material : 20.1.5\n        \n            @angular/platform-browser : 20.1.5\n        \n            @angular/platform-server : 20.1.5\n        \n            @angular/router : 20.1.5\n        \n            @angular/ssr : 20.1.5\n        \n            @ngx-translate/core : ^17.0.0\n        \n            @ngx-translate/http-loader : ^17.0.0\n        \n            @tailwindcss/postcss : ^4.1.11\n        \n            chart.js : ^4.4.6\n        \n            express : ^5.1.0\n        \n            marked : ^15.0.12\n        \n            ngx-markdown : ^20.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            vosk-browser : ^0.0.8\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RunEvent   (src/.../playground-models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/playground-models.ts\n    \n        \n            \n                \n                    \n                        \n                        RunEvent\n                    \n                \n                        \n                            \n                                 RunStarted\n                            \n                        \n                        \n                            \n                                Value : RunStarted\n                            \n                        \n                        \n                            \n                                 RunResponse\n                            \n                        \n                        \n                            \n                                Value : RunResponse\n                            \n                        \n                        \n                            \n                                 RunResponseContent\n                            \n                        \n                        \n                            \n                                Value : RunResponseContent\n                            \n                        \n                        \n                            \n                                 RunCompleted\n                            \n                        \n                        \n                            \n                                Value : RunCompleted\n                            \n                        \n                        \n                            \n                                 RunError\n                            \n                        \n                        \n                            \n                                Value : RunError\n                            \n                        \n                        \n                            \n                                 ToolCallStarted\n                            \n                        \n                        \n                            \n                                Value : ToolCallStarted\n                            \n                        \n                        \n                            \n                                 ToolCallCompleted\n                            \n                        \n                        \n                            \n                                Value : ToolCallCompleted\n                            \n                        \n                        \n                            \n                                 UpdatingMemory\n                            \n                        \n                        \n                            \n                                Value : UpdatingMemory\n                            \n                        \n                        \n                            \n                                 ReasoningStarted\n                            \n                        \n                        \n                            \n                                Value : ReasoningStarted\n                            \n                        \n                        \n                            \n                                 ReasoningStep\n                            \n                        \n                        \n                            \n                                Value : ReasoningStep\n                            \n                        \n                        \n                            \n                                 ReasoningCompleted\n                            \n                        \n                        \n                            \n                                Value : ReasoningCompleted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adaptAgent   (src/.../agent-adapter.ts)\n                        \n                        \n                            adaptAgents   (src/.../agent-adapter.ts)\n                        \n                        \n                            adaptChatEntriesToMessages   (src/.../chat-adapter.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            mapToPaginated   (src/.../pagination-api.ts)\n                        \n                        \n                            passwordComplexityValidator   (src/.../register.ts)\n                        \n                        \n                            toEpochSeconds   (src/.../sessions.service.ts)\n                        \n                        \n                            toMs   (src/.../sessions.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/adapters/agent-adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adaptAgent\n                        \n                    \n                \n            \n            \n                \nadaptAgent(rawAgent: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rawAgent\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AgentModel\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        adaptAgents\n                        \n                    \n                \n            \n            \n                \nadaptAgents(rawAgents)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rawAgents\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AgentModel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/core/adapters/chat-adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adaptChatEntriesToMessages\n                        \n                    \n                \n            \n            \n                \nadaptChatEntriesToMessages(entries)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entries\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(_http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/models/pagination-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapToPaginated\n                        \n                    \n                \n            \n            \n                \nmapToPaginated(data: any, params?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/presentation/pages/auth/register.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordComplexityValidator\n                        \n                    \n                \n            \n            \n                \npasswordComplexityValidator(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/infrastructure/services/sessions.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toEpochSeconds\n                        \n                    \n                \n            \n            \n                \ntoEpochSeconds(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toMs\n                        \n                    \n                \n            \n            \n                \ntoMs(value: any)\n                \n            \n\n\n\n\n            \n                \n                        Convert various timestamp inputs to milliseconds (accepts seconds, ms, or ISO)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated using Angular CLI version 20.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    61 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    66 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BgStyle   (src/.../background.service.ts)\n                        \n                        \n                            ChatPageCtx   (src/.../chat-events.service.ts)\n                        \n                        \n                            ConnectionStatus   (src/.../connection-status.service.ts)\n                        \n                        \n                            ContentType   (src/.../chat-model.ts)\n                        \n                        \n                            EventType   (src/.../chat-model.ts)\n                        \n                        \n                            FileType   (src/.../files.facade.ts)\n                        \n                        \n                            Palette   (src/.../background.service.ts)\n                        \n                        \n                            Theme   (src/.../theme.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/infrastructure/services/background.service.ts\n    \n    \n        \n            \n                \n                    \n                    BgStyle\n                \n            \n            \n                \n                        \"minimal\" | \"aurora\" | \"bokeh\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Palette\n                \n            \n            \n                \n                        \"default\" | \"vaporwave\" | \"cyber\"\n\n                \n            \n        \n    \n    src/app/infrastructure/services/chat-events.service.ts\n    \n    \n        \n            \n                \n                    \n                    ChatPageCtx\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/infrastructure/services/connection-status.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionStatus\n                \n            \n            \n                \n                        \"idle\" | \"connecting\" | \"streaming\" | \"error\"\n\n                \n            \n        \n    \n    src/app/core/models/chat-model.ts\n    \n    \n        \n            \n                \n                    \n                    ContentType\n                \n            \n            \n                \n                        \"text\" | \"str\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                        \"UserMessage\" | \"RunResponse\" | \"RunStarted\" | \"RunCompleted\" | \"RunError\" | \"UpdatingMemory\" | \"ToolCallStarted\" | \"Error\" | \"Cancelled\"\n\n                \n            \n        \n    \n    src/app/application/files/files.facade.ts\n    \n    \n        \n            \n                \n                    \n                    FileType\n                \n            \n            \n                \n                        \"image\" | \"pdf\" | \"document\" | string\n\n                \n            \n        \n    \n    src/app/infrastructure/services/theme.service.ts\n    \n    \n        \n            \n                \n                    \n                    Theme\n                \n            \n            \n                \n                        \"light\" | \"dark\" | \"system\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_MESSAGES_PORT   (src/.../tokens.ts)\n                        \n                        \n                            ADMIN_USERS_PORT   (src/.../tokens.ts)\n                        \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            APP_INFO_PORT   (src/.../tokens.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AUTH_PORT   (src/.../tokens.ts)\n                        \n                        \n                            AuthGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            authInterceptorFn   (src/.../auth.interceptor.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            CHAT_STREAM_PORT   (src/.../tokens.ts)\n                        \n                        \n                            COMPANIES_PORT   (src/.../tokens.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FILES_PORT   (src/.../tokens.ts)\n                        \n                        \n                            GuestGuard   (src/.../guest.guard.ts)\n                        \n                        \n                            KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            KEY_ROLE   (src/.../token-storage.service.ts)\n                        \n                        \n                            KPIS_PORT   (src/.../tokens.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            RISK_WEIGHTS_PORT   (src/.../tokens.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                        \n                            SESSIONS_PORT   (src/.../tokens.ts)\n                        \n                        \n                            STORAGE_BG   (src/.../background.service.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../language.service.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../theme.service.ts)\n                        \n                        \n                            STORAGE_NEON   (src/.../background.service.ts)\n                        \n                        \n                            STORAGE_PAL   (src/.../background.service.ts)\n                        \n                        \n                            STORAGE_PRLX   (src/.../background.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_MESSAGES_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'ADMIN_MESSAGES_PORT',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ADMIN_USERS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'ADMIN_USERS_PORT',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APP_INFO_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('APP_INFO_PORT')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_PORT')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CHAT_STREAM_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'CHAT_STREAM_PORT',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMPANIES_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'COMPANIES_PORT',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FILES_PORT')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KPIS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('KPIS_PORT')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RISK_WEIGHTS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'RISK_WEIGHTS_PORT',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SESSIONS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SESSIONS_PORT')\n                    \n                \n\n\n        \n    \n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideMarkdown(),\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n\n    // Skip the very first view transition to avoid bootstrap-time InvalidStateError\n    provideRouter(routes, withViewTransitions({ skipInitialTransition: true })),\n    { provide: PreloadingStrategy, useClass: CustomPreloadStrategy },\n\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withFetch(), withInterceptors([authInterceptorFn])),\n\n    importProvidersFrom(\n      TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient],\n        },\n        fallbackLang: 'es',\n      }),\n    ),\n\n    // Initializer 1: language init\n    provideAppInitializer(() => {\n      const langService = inject(LanguageService);\n      return langService.initApp(); // can return void or Promise\n    }),\n\n    // Initializer 2: refresh role from token (client only)\n    provideAppInitializer(() => {\n      const token = inject(TokenStorageService);\n      const getProfile = inject(GetProfileUseCase);\n\n      const t = token.getToken();\n      if (!t) return; // nothing to do\n\n      return getProfile\n        .execute(t)\n        .then((profile) => {\n          if (profile?.role) token.setRole(profile.role);\n        })\n        .catch(() => {\n          // swallow bootstrap errors\n        });\n    }),\n\n    // Initializer 3: performance-lite toggling for mobile/low-end\n    provideAppInitializer(() => {\n      const perf = inject(PerformanceService);\n      perf.init();\n    }),\n\n    { provide: CHAT_STREAM_PORT, useExisting: SseService },\n    { provide: SESSIONS_PORT, useExisting: SessionsService },\n    { provide: AUTH_PORT, useExisting: AuthService },\n    { provide: APP_INFO_PORT, useExisting: AppInfoService },\n    { provide: FILES_PORT, useExisting: FilesService },\n    { provide: ADMIN_USERS_PORT, useExisting: AdminUsersService },\n    { provide: COMPANIES_PORT, useExisting: CompaniesService },\n    { provide: RISK_WEIGHTS_PORT, useExisting: RiskWeightsService },\n    { provide: ADMIN_MESSAGES_PORT, useExisting: AdminMessagesService },\n\n    // KPIS_PORT: feature flag para mock/api\n    {\n      provide: KPIS_PORT,\n      useClass: environment.mockKpis ? KpisMockService : KpisApiService,\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  return inject(AuthGuardService).canActivate();\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptorFn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const token = inject(TokenStorageService).getToken();\n  if (token) {\n    req = req.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\n  }\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  baseUrl: 'http://127.0.0.1:8080',\n  mockKpis: true, // en dev usamos mock por defecto\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  baseUrl:\n    'https://hackiaton-agent-ai-backend-346683647039.southamerica-east1.run.app',\n  mockKpis: true, // feature flag para elegir adapter de KPIs\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/guards/guest.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GuestGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  return inject(GuestGuardService).canActivate();\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth_token'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KEY_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth_role'\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route: ActivatedRouteSnapshot) => {\n  return inject(RoleGuardService).canActivate(route);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Public/guest pages can be prerendered\n  { path: 'login', renderMode: RenderMode.Prerender },\n  { path: 'register', renderMode: RenderMode.Prerender },\n  { path: 'home', renderMode: RenderMode.Prerender },\n  { path: 'forbidden', renderMode: RenderMode.Prerender },\n\n  // Authenticated app pages: render on client to avoid running guards on server\n  { path: 'chat', renderMode: RenderMode.Client },\n  { path: 'chat/session/:sessionId', renderMode: RenderMode.Client },\n  // Admin-only routes are handled under 'admin/*'\n\n  // Admin area and all children on client (RBAC/guards)\n  { path: 'admin', renderMode: RenderMode.Client },\n  { path: 'admin/companies', renderMode: RenderMode.Client },\n  { path: 'admin/companies/:taxId', renderMode: RenderMode.Client },\n  { path: 'admin/*', renderMode: RenderMode.Client },\n\n  // Fallback\n  { path: '**', renderMode: RenderMode.Prerender },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/services/background.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE_BG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ui_bg_style'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STORAGE_NEON\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ui_neon_edges'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STORAGE_PAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ui_palette'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STORAGE_PRLX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ui_bg_parallax'\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/services/language.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app_lang'\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/services/theme.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app_theme'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
